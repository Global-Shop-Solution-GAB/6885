Program.Sub.ScreenSU.Start
Gui.FrmSOMain..Create(BaseForm)
Gui.FrmSOMain..Caption("Rental Dashboard")
Gui.FrmSOMain..Size(15300,11280)
Gui.FrmSOMain..MinX(15240)
Gui.FrmSOMain..MinY(11160)
Gui.FrmSOMain..Position(0,0)
Gui.FrmSOMain..BackColor(-2147483633)
Gui.FrmSOMain..MousePointer(0)
Gui.FrmSOMain..EVent(Resize,FrmSOMain_Resize)
Gui.FrmSOMain..EVent(UnLoad,FrmSOMain_UnLoad)
Gui.FrmSOMain..AlwaysOnTop(False)
Gui.FrmSOMain..FontName("Tahoma")
Gui.FrmSOMain..FontSize(8.25)
Gui.FrmSOMain..ControlBox(True)
Gui.FrmSOMain..MaxButton(True)
Gui.FrmSOMain..MinButton(True)
Gui.FrmSOMain..Moveable(True)
Gui.FrmSOMain..Sizeable(True)
Gui.FrmSOMain..ShowInTaskBar(True)
Gui.FrmSOMain..TitleBar(True)
Gui.FrmSOMain.tabSODash.Create(Tab)
Gui.FrmSOMain.tabSODash.Size(13875,6420)
Gui.FrmSOMain.tabSODash.Position(2220,4800)
Gui.FrmSOMain.tabSODash.EVent(Click,tabSODash_Click)
Gui.FrmSOMain.tabSODash.Enabled(False)
Gui.FrmSOMain.tabSODash.Visible(False)
Gui.FrmSOMain.tabSODash.Zorder(0)
Gui.FrmSOMain.tabSODash.FontName("Tahoma")
Gui.FrmSOMain.tabSODash.FontSize(8.25)
Gui.FrmSOMain.tabSODash.Tabs(4)
Gui.FrmSOMain.tabSODash.SetTab(0)
Gui.FrmSOMain.tabSODash.Caption("All Open SOs")
Gui.FrmSOMain.tabSODash.SetTab(1)
Gui.FrmSOMain.tabSODash.Caption("Due Today && Past Due")
Gui.FrmSOMain.tabSODash.SetTab(2)
Gui.FrmSOMain.tabSODash.Caption("Sales Statistics")
Gui.FrmSOMain.tabSODash.SetTab(3)
Gui.FrmSOMain.tabSODash.Caption("INV Status")
Gui.FrmSOMain.GsGCXStatus.Create(GsGridControl)
Gui.FrmSOMain.GsGCXStatus.Enabled(True)
Gui.FrmSOMain.GsGCXStatus.Visible(True)
Gui.FrmSOMain.GsGCXStatus.Zorder(0)
Gui.FrmSOMain.GsGCXStatus.Size(15090,9225)
Gui.FrmSOMain.GsGCXStatus.Position(0,0)
Gui.FrmSOMain.GsGCXStatus.Dock(5)
Gui.FrmSOMain.GsGCXStatus.Parent("tabSODash",3)
Gui.FrmSOMain.GsGCXStatus.Event(RowCellClick,GsGCXStatus_RowCellClick)
Gui.FrmSOMain.GsGCXStatus.Event(CellValueChanged,GsGCXStatus_CellValueChanged)
Gui.FrmSOMain.framePL.Create(Frame)
Gui.FrmSOMain.framePL.Size(7140,3945)
Gui.FrmSOMain.framePL.Position(7620,4440)
Gui.FrmSOMain.framePL.Parent("tabSODash",2)
Gui.FrmSOMain.framePL.EVent(DblClick,framePL_DblClick)
Gui.FrmSOMain.framePL.Enabled(True)
Gui.FrmSOMain.framePL.Visible(True)
Gui.FrmSOMain.framePL.Zorder(0)
Gui.FrmSOMain.framePL.Caption("")
Gui.FrmSOMain.framePL.FontName("Tahoma")
Gui.FrmSOMain.framePL.FontSize(8.25)
Gui.FrmSOMain.gsPL.Create(gsChart)
Gui.FrmSOMain.gsPL.Size(7140,3945)
Gui.FrmSOMain.gsPL.Position(0,0)
Gui.FrmSOMain.gsPL.Parent("framePL")
Gui.FrmSOMain.gsPL.Enabled(False)
Gui.FrmSOMain.gsPL.Visible(True)
Gui.FrmSOMain.gsPL.Zorder(0)
Gui.FrmSOMain.frameSalesPerson.Create(Frame)
Gui.FrmSOMain.frameSalesPerson.Size(7140,3945)
Gui.FrmSOMain.frameSalesPerson.Position(240,4440)
Gui.FrmSOMain.frameSalesPerson.Parent("tabSODash",2)
Gui.FrmSOMain.frameSalesPerson.EVent(DblClick,frameSalesPerson_DblClick)
Gui.FrmSOMain.frameSalesPerson.Enabled(True)
Gui.FrmSOMain.frameSalesPerson.Visible(True)
Gui.FrmSOMain.frameSalesPerson.Zorder(0)
Gui.FrmSOMain.frameSalesPerson.Caption("")
Gui.FrmSOMain.frameSalesPerson.FontName("Tahoma")
Gui.FrmSOMain.frameSalesPerson.FontSize(8.25)
Gui.FrmSOMain.gsSalesPerson.Create(gsChart)
Gui.FrmSOMain.gsSalesPerson.Size(7140,3945)
Gui.FrmSOMain.gsSalesPerson.Position(0,0)
Gui.FrmSOMain.gsSalesPerson.Parent("frameSalesPerson")
Gui.FrmSOMain.gsSalesPerson.Enabled(False)
Gui.FrmSOMain.gsSalesPerson.Visible(True)
Gui.FrmSOMain.gsSalesPerson.Zorder(0)
Gui.FrmSOMain.frameCustomer.Create(Frame)
Gui.FrmSOMain.frameCustomer.Size(12990,3945)
Gui.FrmSOMain.frameCustomer.Position(1005,240)
Gui.FrmSOMain.frameCustomer.Parent("tabSODash",2)
Gui.FrmSOMain.frameCustomer.EVent(DblClick,frameCustomer_DblClick)
Gui.FrmSOMain.frameCustomer.Enabled(True)
Gui.FrmSOMain.frameCustomer.Visible(True)
Gui.FrmSOMain.frameCustomer.Zorder(0)
Gui.FrmSOMain.frameCustomer.Caption("")
Gui.FrmSOMain.frameCustomer.FontName("Tahoma")
Gui.FrmSOMain.frameCustomer.FontSize(8.25)
Gui.FrmSOMain.gsCustomer.Create(gsChart)
Gui.FrmSOMain.gsCustomer.Size(12990,3945)
Gui.FrmSOMain.gsCustomer.Position(0,0)
Gui.FrmSOMain.gsCustomer.Parent("frameCustomer")
Gui.FrmSOMain.gsCustomer.Enabled(False)
Gui.FrmSOMain.gsCustomer.Visible(True)
Gui.FrmSOMain.gsCustomer.Zorder(0)
Gui.FrmSOMain.GsGCDueSO.Create(GsGridControl)
Gui.FrmSOMain.GsGCDueSO.Size(15090,9225)
Gui.FrmSOMain.GsGCDueSO.Position(0,0)
Gui.FrmSOMain.GsGCDueSO.Parent("tabSODash",1)
Gui.FrmSOMain.GsGCDueSO.EVent(RowCellClick,GsGCDueSO_RowCellClick)
Gui.FrmSOMain.GsGCDueSO.EVent(CellValueChanged,GsGCDueSO_CellValueChanged)
Gui.FrmSOMain.GsGCDueSO.Enabled(True)
Gui.FrmSOMain.GsGCDueSO.Visible(True)
Gui.FrmSOMain.GsGCDueSO.Zorder(0)
Gui.FrmSOMain.GsGCDueSO.Dock(5)
Gui.FrmSOMain.GsGCAllSO.Create(GsGridControl)
Gui.FrmSOMain.GsGCAllSO.Size(13845,5985)
Gui.FrmSOMain.GsGCAllSO.Position(0,0)
Gui.FrmSOMain.GsGCAllSO.Parent("tabSODash",0)
Gui.FrmSOMain.GsGCAllSO.EVent(RowCellClick,GsGCAllSO_RowCellClick)
Gui.FrmSOMain.GsGCAllSO.EVent(CellValueChanged,GsGCAllSO_CellValueChanged)
Gui.FrmSOMain.GsGCAllSO.Enabled(True)
Gui.FrmSOMain.GsGCAllSO.Visible(True)
Gui.FrmSOMain.GsGCAllSO.Zorder(0)
Gui.FrmSOMain.GsGCAllSO.Dock(5)
Gui.FrmSOMain.picGSSLogo.Create(PictureBox)
Gui.FrmSOMain.picGSSLogo.Size(4125,960)
Gui.FrmSOMain.picGSSLogo.Position(5505,165)
Gui.FrmSOMain.picGSSLogo.EVent(DblClick,picGSSLogo_DblClick)
Gui.FrmSOMain.picGSSLogo.ToolTip("Double-Click for additional functions")
Gui.FrmSOMain.picGSSLogo.Enabled(True)
Gui.FrmSOMain.picGSSLogo.Visible(True)
Gui.FrmSOMain.picGSSLogo.Zorder(0)
Gui.FrmSOMain.lblStatus.Create(Label,"***Change***",False,2355,255,0,75,120,True,0,"Arial",8,-986896,0,0)
Gui.FrmSOMain.lblStatus.BorderStyle(0)
Gui.FrmSOMain.pbStatus.Create(ProgressBar)
Gui.FrmSOMain.pbStatus.Size(2355,255)
Gui.FrmSOMain.pbStatus.Position(1800,405)
Gui.FrmSOMain.pbStatus.Visible(False)
Gui.FrmSOMain.framePermissions.Create(Frame)
Gui.FrmSOMain.framePermissions.Size(3120,420)
Gui.FrmSOMain.framePermissions.Position(12015,15)
Gui.FrmSOMain.framePermissions.Enabled(True)
Gui.FrmSOMain.framePermissions.Visible(True)
Gui.FrmSOMain.framePermissions.Zorder(0)
Gui.FrmSOMain.framePermissions.Caption("")
Gui.FrmSOMain.framePermissions.FontName("Tahoma")
Gui.FrmSOMain.framePermissions.FontSize(8.25)
Gui.FrmSOMain.optView.Create(Option)
Gui.FrmSOMain.optView.Size(780,255)
Gui.FrmSOMain.optView.Position(45,120)
Gui.FrmSOMain.optView.Caption("View")
Gui.FrmSOMain.optView.Parent("framePermissions")
Gui.FrmSOMain.optView.Enabled(True)
Gui.FrmSOMain.optView.Visible(True)
Gui.FrmSOMain.optView.Zorder(0)
Gui.FrmSOMain.optView.FontName("Tahoma")
Gui.FrmSOMain.optView.FontSize(8.25)
Gui.FrmSOMain.optShip.Create(Option)
Gui.FrmSOMain.optShip.Enabled(False)
Gui.FrmSOMain.optShip.Size(705,255)
Gui.FrmSOMain.optShip.Position(1590,120)
Gui.FrmSOMain.optShip.Caption("Ship")
Gui.FrmSOMain.optShip.Parent("framePermissions")
Gui.FrmSOMain.optShip.Visible(True)
Gui.FrmSOMain.optShip.Zorder(0)
Gui.FrmSOMain.optShip.FontName("Tahoma")
Gui.FrmSOMain.optShip.FontSize(8.25)
Gui.FrmSOMain.optEdit.Create(Option)
Gui.FrmSOMain.optEdit.Enabled(False)
Gui.FrmSOMain.optEdit.Size(645,255)
Gui.FrmSOMain.optEdit.Position(885,120)
Gui.FrmSOMain.optEdit.Caption("Edit")
Gui.FrmSOMain.optEdit.Parent("framePermissions")
Gui.FrmSOMain.optEdit.Visible(True)
Gui.FrmSOMain.optEdit.Zorder(0)
Gui.FrmSOMain.optEdit.FontName("Tahoma")
Gui.FrmSOMain.optEdit.FontSize(8.25)
Gui.FrmSOMain.optWO.Create(Option)
Gui.FrmSOMain.optWO.Enabled(False)
Gui.FrmSOMain.optWO.Visible(True)
Gui.FrmSOMain.optWO.Zorder(0)
Gui.FrmSOMain.optWO.Size(795,360)
Gui.FrmSOMain.optWO.Position(2295,75)
Gui.FrmSOMain.optWO.Caption("WO")
Gui.FrmSOMain.optWO.FontName("Tahoma")
Gui.FrmSOMain.optWO.FontSize(8.25)
Gui.FrmSOMain.optWO.ToolTip("WO")
Gui.FrmSOMain.optWO.Parent("framePermissions")
Gui.FrmSOMain.txtPercent.Create(TextBox,"",False,360,300,0,9585,1320,True,0,"Arial",8,-2147483643,1)
Gui.FrmSOMain.txtPercent.MaxLength(2)
Gui.FrmSOMain.txtPercent.EVent(LostFocus,txtPercent_LostFocus)
Gui.FrmSOMain.lblPercent2.Create(Label,"%",False,150,210,0,9960,1380,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmSOMain.lblPercent2.BorderStyle(0)
Gui.FrmSOMain.lblPercent1.Create(Label,"Cutoff:",False,495,210,0,8940,1380,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmSOMain.lblPercent1.BorderStyle(0)
Gui.FrmSOMain.txtOnHold.Create(TextBox,"RENTED",True,1470,300,0,13650,780,True,2,"Arial",8,4678655,1)
Gui.FrmSOMain.txtOnHold.Locked(True)
Gui.FrmSOMain.txtOnHold.DefaultValue("")
Gui.FrmSOMain.txtOnHold.ForeColor(16777215)
Gui.FrmSOMain.txtReady.Create(TextBox,"AVAILABLE",False,1470,300,2,12645,1425,True,2,"Arial",8,9498256,1)
Gui.FrmSOMain.txtReady.Locked(True)
Gui.FrmSOMain.txtReady.DefaultValue("")
Gui.FrmSOMain.txtReady.ForeColor(0)
Gui.FrmSOMain.txtReady.Anchor(9)
Gui.FrmSOMain.frameCutoff.Create(Frame)
Gui.FrmSOMain.frameCutoff.Size(1140,570)
Gui.FrmSOMain.frameCutoff.Position(30,60)
Gui.FrmSOMain.frameCutoff.Caption("Cutoff Date")
Gui.FrmSOMain.frameCutoff.Enabled(True)
Gui.FrmSOMain.frameCutoff.Visible(False)
Gui.FrmSOMain.frameCutoff.Zorder(0)
Gui.FrmSOMain.frameCutoff.FontName("Tahoma")
Gui.FrmSOMain.frameCutoff.FontSize(7.8)
Gui.FrmSOMain.dtpCutoff.Create(DatePicker)
Gui.FrmSOMain.dtpCutoff.Size(1485,285)
Gui.FrmSOMain.dtpCutoff.Position(60,225)
Gui.FrmSOMain.dtpCutoff.Parent("frameCutoff")
Gui.FrmSOMain.dtpCutoff.Enabled(False)
Gui.FrmSOMain.dtpCutoff.TabStop(True)
Gui.FrmSOMain.dtpCutoff.TabIndex(1)
Gui.FrmSOMain.dtpCutoff.Visible(True)
Gui.FrmSOMain.dtpCutoff.Zorder(0)
Gui.FrmSOMain.dtpCutoff.CheckBox(False)
Gui.FrmSOMain.dtpCutoff.FontName("Tahoma")
Gui.FrmSOMain.dtpCutoff.FontSize(7.8)
Gui.FrmSOMain.chkCutoff.Create(CheckBox)
Gui.FrmSOMain.chkCutoff.Size(330,300)
Gui.FrmSOMain.chkCutoff.Position(690,555)
Gui.FrmSOMain.chkCutoff.Parent("frameCutoff")
Gui.FrmSOMain.chkCutoff.Event(Click,chkCutoff_Click)
Gui.FrmSOMain.chkCutoff.TabStop(True)
Gui.FrmSOMain.chkCutoff.Enabled(True)
Gui.FrmSOMain.chkCutoff.Visible(True)
Gui.FrmSOMain.chkCutoff.Zorder(0)
Gui.FrmSOMain.chkCutoff.Caption("")
Gui.FrmSOMain.chkCutoff.FontName("Tahoma")
Gui.FrmSOMain.chkCutoff.FontSize(7.8)
Gui.FrmSOMain.frameDecOpt.Create(Frame)
Gui.FrmSOMain.frameDecOpt.Size(2130,885)
Gui.FrmSOMain.frameDecOpt.Position(11430,510)
Gui.FrmSOMain.frameDecOpt.Anchor(9)
Gui.FrmSOMain.frameDecOpt.Enabled(True)
Gui.FrmSOMain.frameDecOpt.Visible(False)
Gui.FrmSOMain.frameDecOpt.Zorder(0)
Gui.FrmSOMain.frameDecOpt.Caption("")
Gui.FrmSOMain.frameDecOpt.FontName("Tahoma")
Gui.FrmSOMain.frameDecOpt.FontSize(8.25)
Gui.FrmSOMain.lblDecQty.Create(Label,"Qty Decimals",True,1110,255,0,45,270,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmSOMain.lblDecQty.Parent("frameDecOpt")
Gui.FrmSOMain.lblDecQty.BorderStyle(0)
Gui.FrmSOMain.lblDecDoll.Create(Label,"Dollar Decimals",True,1230,255,0,45,630,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmSOMain.lblDecDoll.Parent("frameDecOpt")
Gui.FrmSOMain.lblDecDoll.BorderStyle(0)
Gui.FrmSOMain.ddlDecQty.Create(DropDownList)
Gui.FrmSOMain.ddlDecQty.Size(630,330)
Gui.FrmSOMain.ddlDecQty.Position(1305,135)
Gui.FrmSOMain.ddlDecQty.Parent("frameDecOpt")
Gui.FrmSOMain.ddlDecQty.Event(Click,ddlDec_Click)
Gui.FrmSOMain.ddlDecQty.Enabled(True)
Gui.FrmSOMain.ddlDecQty.Visible(True)
Gui.FrmSOMain.ddlDecQty.Zorder(0)
Gui.FrmSOMain.ddlDecQty.FontName("Tahoma")
Gui.FrmSOMain.ddlDecQty.FontSize(8.25)
Gui.FrmSOMain.ddlDecDoll.Create(DropDownList)
Gui.FrmSOMain.ddlDecDoll.Size(630,300)
Gui.FrmSOMain.ddlDecDoll.Position(1305,495)
Gui.FrmSOMain.ddlDecDoll.Parent("frameDecOpt")
Gui.FrmSOMain.ddlDecDoll.Event(Click,ddlDec_Click)
Gui.FrmSOMain.ddlDecDoll.Enabled(True)
Gui.FrmSOMain.ddlDecDoll.Visible(True)
Gui.FrmSOMain.ddlDecDoll.Zorder(0)
Gui.FrmSOMain.ddlDecDoll.FontName("Tahoma")
Gui.FrmSOMain.ddlDecDoll.FontSize(8.25)
Gui.FrmSOMain.cmdProcess.Create(Button)
Gui.FrmSOMain.cmdProcess.Size(1095,735)
Gui.FrmSOMain.cmdProcess.Position(9900,165)
Gui.FrmSOMain.cmdProcess.TabStop(True)
Gui.FrmSOMain.cmdProcess.TabIndex(3)
Gui.FrmSOMain.cmdProcess.Caption("PROCESS CHANGES")
Gui.FrmSOMain.cmdProcess.BackColor(12903679)
Gui.FrmSOMain.cmdProcess.Event(Click,cmdProcess_Click)
Gui.FrmSOMain.cmdProcess.Anchor(9)
Gui.FrmSOMain.cmdProcess.FontStyle(True,False,False,False,False)
Gui.FrmSOMain.cmdProcess.Enabled(True)
Gui.FrmSOMain.cmdProcess.Visible(False)
Gui.FrmSOMain.cmdProcess.Zorder(0)
Gui.FrmSOMain.cmdProcess.FontName("Tahoma")
Gui.FrmSOMain.cmdProcess.FontSize(8.25)
Gui.FrmSOMain.tab1.Create(Tab)
Gui.FrmSOMain.tab1.Enabled(True)
Gui.FrmSOMain.tab1.Visible(True)
Gui.FrmSOMain.tab1.Zorder(1)
Gui.FrmSOMain.tab1.Size(15090,9105)
Gui.FrmSOMain.tab1.Position(150,1545)
Gui.FrmSOMain.tab1.FontName("Tahoma")
Gui.FrmSOMain.tab1.FontSize(8.25)
Gui.FrmSOMain.tab1.Anchor(15)
Gui.FrmSOMain.tab1.Tabs(4)
Gui.FrmSOMain.tab1.SetTab(0)
Gui.FrmSOMain.tab1.Caption("Rental Items")
Gui.FrmSOMain.tab1.SetTab(1)
Gui.FrmSOMain.tab1.Caption("Rented Items")
Gui.FrmSOMain.tab1.SetTab(2)
Gui.FrmSOMain.tab1.Caption("Reserved Items")
Gui.FrmSOMain.tab1.SetTab(3)
Gui.FrmSOMain.tab1.Caption("Rented Items Serviced")
Gui.FrmSOMain.GsGcTabD.Create(GsGridControl)
Gui.FrmSOMain.GsGcTabD.Enabled(True)
Gui.FrmSOMain.GsGcTabD.Visible(True)
Gui.FrmSOMain.GsGcTabD.Zorder(0)
Gui.FrmSOMain.GsGcTabD.Size(14775,8400)
Gui.FrmSOMain.GsGcTabD.Position(120,150)
Gui.FrmSOMain.GsGcTabD.Parent("tab1",3)
Gui.FrmSOMain.GsGcTabD.Anchor(15)
Gui.FrmSOMain.GsGcTabD.Event(RowCellClick,GsGcTabD_RowCellClick)
Gui.FrmSOMain.GsGcTabC.Create(GsGridControl)
Gui.FrmSOMain.GsGcTabC.Enabled(True)
Gui.FrmSOMain.GsGcTabC.Visible(True)
Gui.FrmSOMain.GsGcTabC.Zorder(0)
Gui.FrmSOMain.GsGcTabC.Size(14835,8430)
Gui.FrmSOMain.GsGcTabC.Position(135,135)
Gui.FrmSOMain.GsGcTabC.Parent("tab1",2)
Gui.FrmSOMain.GsGcTabC.Anchor(15)
Gui.FrmSOMain.GsGcTabC.Event(RowCellClick,GsGcTabC_RowCellClick)
Gui.FrmSOMain.GsgcTabB.Create(GsGridControl)
Gui.FrmSOMain.GsgcTabB.Enabled(True)
Gui.FrmSOMain.GsgcTabB.Visible(True)
Gui.FrmSOMain.GsgcTabB.Zorder(0)
Gui.FrmSOMain.GsgcTabB.Size(14865,8430)
Gui.FrmSOMain.GsgcTabB.Position(105,135)
Gui.FrmSOMain.GsgcTabB.Parent("tab1",1)
Gui.FrmSOMain.GsgcTabB.Anchor(15)
Gui.FrmSOMain.GsgcTabB.Event(RowCellClick,GsgcTabB_RowCellClick)
Gui.FrmSOMain.GsgcTabA.Create(GsGridControl)
Gui.FrmSOMain.GsgcTabA.Enabled(True)
Gui.FrmSOMain.GsgcTabA.Visible(True)
Gui.FrmSOMain.GsgcTabA.Zorder(0)
Gui.FrmSOMain.GsgcTabA.Size(14790,8445)
Gui.FrmSOMain.GsgcTabA.Position(135,105)
Gui.FrmSOMain.GsgcTabA.Parent("tab1",0)
Gui.FrmSOMain.GsgcTabA.Anchor(15)
Gui.FrmSOMain.GsgcTabA.Event(RowCellClick,GsgcTabA_RowCellClick)
Gui.FrmSOMain.GsgcTabA.Event(CellValueChanged,GsgcTabA_CellValueChanged)
Gui.FrmSOMain.txtReady2.Create(TextBox,"RESERV",True,1470,300,0,13650,1080,True,2,"Arial",8,55295,1)
Gui.FrmSOMain.txtReady2.Locked(True)
Gui.FrmSOMain.txtReady2.DefaultValue("")
Gui.FrmSOMain.txtReady2.Anchor(9)
Gui.FrmSOMain.cmdRefreshRent.Create(Button)
Gui.FrmSOMain.cmdRefreshRent.Enabled(True)
Gui.FrmSOMain.cmdRefreshRent.Visible(True)
Gui.FrmSOMain.cmdRefreshRent.Zorder(0)
Gui.FrmSOMain.cmdRefreshRent.Size(1125,345)
Gui.FrmSOMain.cmdRefreshRent.Position(135,885)
Gui.FrmSOMain.cmdRefreshRent.Caption("REFRESH")
Gui.FrmSOMain.cmdRefreshRent.FontName("Tahoma")
Gui.FrmSOMain.cmdRefreshRent.FontSize(8.25)
Gui.FrmSOMain.cmdRefreshRent.Event(Click,cmdRefreshRent_Click)
Gui.FrmSOMain.txtReady3.Create(TextBox,"SERVIC",True,1470,300,5,13650,1380,True,2,"Arial",8,11829830,1)
Gui.FrmSOMain.txtReady3.Anchor(9)
Gui.FrmSOMain.txtReady3.Locked(True)
Gui.FrmSOMain.txtReady3.DefaultValue("")
Gui.FrmSOMain.txtReady3.ForeColor(16777215)
Gui.FrmSOMain.txtReady4.Create(TextBox,"AVAILABLE",True,1470,300,0,13665,465,True,2,"Arial",8,9498256,1)
Gui.FrmSOMain.txtReady4.Anchor(9)
Gui.FrmSOMain.txtReady4.ForeColor(0)
Gui.FrmSOMain.txtReady4.Locked(True)
Gui.FrmSOMain.txtReady4.DefaultValue("")
Gui.FrmCustomer..Create(BaseForm)
Gui.FrmCustomer..Size(15360,10695)
Gui.FrmCustomer..MinX(0)
Gui.FrmCustomer..MinY(0)
Gui.FrmCustomer..Position(0,0)
Gui.FrmCustomer..BackColor(-2147483633)
Gui.FrmCustomer..MousePointer(0)
Gui.FrmCustomer..EVent(UnLoad,FrmCustomer_UnLoad)
Gui.FrmCustomer..Caption("Customer Statistics")
Gui.FrmCustomer..AlwaysOnTop(False)
Gui.FrmCustomer..FontName("Tahoma")
Gui.FrmCustomer..FontSize(8.25)
Gui.FrmCustomer..ControlBox(True)
Gui.FrmCustomer..MaxButton(True)
Gui.FrmCustomer..MinButton(True)
Gui.FrmCustomer..Moveable(True)
Gui.FrmCustomer..Sizeable(True)
Gui.FrmCustomer..ShowInTaskBar(True)
Gui.FrmCustomer..TitleBar(True)
Gui.FrmCustomer.GsGridControlCustomerStat.Create(GsGridControl)
Gui.FrmCustomer.GsGridControlCustomerStat.Size(3945,10215)
Gui.FrmCustomer.GsGridControlCustomerStat.Position(60,75)
Gui.FrmCustomer.GsGridControlCustomerStat.Enabled(True)
Gui.FrmCustomer.GsGridControlCustomerStat.Visible(True)
Gui.FrmCustomer.GsGridControlCustomerStat.Zorder(0)
Gui.FrmCustomer.gsCustomer.Create(gsChart)
Gui.FrmCustomer.gsCustomer.Size(11190,10215)
Gui.FrmCustomer.gsCustomer.Position(4020,75)
Gui.FrmCustomer.gsCustomer.Enabled(True)
Gui.FrmCustomer.gsCustomer.Visible(True)
Gui.FrmCustomer.gsCustomer.Zorder(0)
Gui.FrmPL..Create(BaseForm)
Gui.FrmPL..Size(15360,10695)
Gui.FrmPL..MinX(0)
Gui.FrmPL..MinY(0)
Gui.FrmPL..Position(0,0)
Gui.FrmPL..BackColor(-2147483633)
Gui.FrmPL..MousePointer(0)
Gui.FrmPL..Caption("Product Line Statistics")
Gui.FrmPL..EVent(UnLoad,FrmPL_UnLoad)
Gui.FrmPL..AlwaysOnTop(False)
Gui.FrmPL..FontName("Tahoma")
Gui.FrmPL..FontSize(8.25)
Gui.FrmPL..ControlBox(True)
Gui.FrmPL..MaxButton(True)
Gui.FrmPL..MinButton(True)
Gui.FrmPL..Moveable(True)
Gui.FrmPL..Sizeable(True)
Gui.FrmPL..ShowInTaskBar(True)
Gui.FrmPL..TitleBar(True)
Gui.FrmPL.GsGridControlPLStat.Create(GsGridControl)
Gui.FrmPL.GsGridControlPLStat.Size(3870,10215)
Gui.FrmPL.GsGridControlPLStat.Position(60,75)
Gui.FrmPL.GsGridControlPLStat.Enabled(True)
Gui.FrmPL.GsGridControlPLStat.Visible(True)
Gui.FrmPL.GsGridControlPLStat.Zorder(0)
Gui.FrmPL.gsPL.Create(gsChart)
Gui.FrmPL.gsPL.Size(11265,10215)
Gui.FrmPL.gsPL.Position(3945,75)
Gui.FrmPL.gsPL.Enabled(True)
Gui.FrmPL.gsPL.Visible(True)
Gui.FrmPL.gsPL.Zorder(0)
Gui.FrmSalesPerson..Create(BaseForm)
Gui.FrmSalesPerson..Size(15360,10695)
Gui.FrmSalesPerson..MinX(0)
Gui.FrmSalesPerson..MinY(0)
Gui.FrmSalesPerson..Position(0,0)
Gui.FrmSalesPerson..BackColor(-2147483633)
Gui.FrmSalesPerson..MousePointer(0)
Gui.FrmSalesPerson..EVent(UnLoad,FrmSalesPerson_UnLoad)
Gui.FrmSalesPerson..Caption("Salesperson Statistics")
Gui.FrmSalesPerson..AlwaysOnTop(False)
Gui.FrmSalesPerson..FontName("Tahoma")
Gui.FrmSalesPerson..FontSize(8.25)
Gui.FrmSalesPerson..ControlBox(True)
Gui.FrmSalesPerson..MaxButton(True)
Gui.FrmSalesPerson..MinButton(True)
Gui.FrmSalesPerson..Moveable(True)
Gui.FrmSalesPerson..Sizeable(True)
Gui.FrmSalesPerson..ShowInTaskBar(True)
Gui.FrmSalesPerson..TitleBar(True)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Create(GsGridControl)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Size(3870,10215)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Position(60,75)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Enabled(True)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Visible(True)
Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Zorder(0)
Gui.FrmSalesPerson.gsSalesPerson.Create(gsChart)
Gui.FrmSalesPerson.gsSalesPerson.Size(11265,10215)
Gui.FrmSalesPerson.gsSalesPerson.Position(3945,75)
Gui.FrmSalesPerson.gsSalesPerson.Enabled(True)
Gui.FrmSalesPerson.gsSalesPerson.Visible(True)
Gui.FrmSalesPerson.gsSalesPerson.Zorder(0)
Gui.frmChkXRef..Create(BaseForm)
Gui.frmChkXRef..Caption("Cross Reference records not in Inventory Master")
Gui.frmChkXRef..Size(5895,6480)
Gui.frmChkXRef..MinX(0)
Gui.frmChkXRef..MinY(0)
Gui.frmChkXRef..Position(0,0)
Gui.frmChkXRef..BackColor(-2147483633)
Gui.frmChkXRef..MousePointer(0)
Gui.frmChkXRef..Event(UnLoad,frmChkXRef_UnLoad)
Gui.frmChkXRef..AlwaysOnTop(False)
Gui.frmChkXRef..FontName("Tahoma")
Gui.frmChkXRef..FontSize(8.25)
Gui.frmChkXRef..ControlBox(True)
Gui.frmChkXRef..MaxButton(True)
Gui.frmChkXRef..MinButton(True)
Gui.frmChkXRef..Moveable(True)
Gui.frmChkXRef..Sizeable(True)
Gui.frmChkXRef..ShowInTaskBar(True)
Gui.frmChkXRef..TitleBar(True)
Gui.frmChkXRef.GsGCChkXRef.Create(GsGridControl)
Gui.frmChkXRef.GsGCChkXRef.Size(5730,5745)
Gui.frmChkXRef.GsGCChkXRef.Position(30,30)
Gui.frmChkXRef.GsGCChkXRef.Anchor(15)
Gui.frmChkXRef.GsGCChkXRef.Enabled(True)
Gui.frmChkXRef.GsGCChkXRef.Visible(True)
Gui.frmChkXRef.GsGCChkXRef.Zorder(0)
Gui.frmChkXRef.cmdDelete.Create(Button)
Gui.frmChkXRef.cmdDelete.Size(855,375)
Gui.frmChkXRef.cmdDelete.Position(4905,5790)
Gui.frmChkXRef.cmdDelete.Anchor(10)
Gui.frmChkXRef.cmdDelete.Caption("Delete")
Gui.frmChkXRef.cmdDelete.Event(Click,cmdDelete_Click)
Gui.frmChkXRef.cmdDelete.Enabled(True)
Gui.frmChkXRef.cmdDelete.Visible(True)
Gui.frmChkXRef.cmdDelete.Zorder(0)
Gui.frmChkXRef.cmdDelete.FontName("Tahoma")
Gui.frmChkXRef.cmdDelete.FontSize(7.8)
Gui.frmTotalsPL..Create(BaseForm)
Gui.frmTotalsPL..Caption("Totals by PL")
Gui.frmTotalsPL..Size(4215,3825)
Gui.frmTotalsPL..MinX(0)
Gui.frmTotalsPL..MinY(0)
Gui.frmTotalsPL..Position(0,0)
Gui.frmTotalsPL..BackColor(-2147483633)
Gui.frmTotalsPL..MousePointer(0)
Gui.frmTotalsPL..Event(UnLoad,frmTotalsPL_UnLoad)
Gui.frmTotalsPL..AlwaysOnTop(False)
Gui.frmTotalsPL..FontName("Tahoma")
Gui.frmTotalsPL..FontSize(8.25)
Gui.frmTotalsPL..ControlBox(True)
Gui.frmTotalsPL..MaxButton(True)
Gui.frmTotalsPL..MinButton(True)
Gui.frmTotalsPL..Moveable(True)
Gui.frmTotalsPL..Sizeable(True)
Gui.frmTotalsPL..ShowInTaskBar(True)
Gui.frmTotalsPL..TitleBar(True)
Gui.frmTotalsPL.GsGCPLs.Create(GsGridControl)
Gui.frmTotalsPL.GsGCPLs.Size(4050,3525)
Gui.frmTotalsPL.GsGCPLs.Position(15,0)
Gui.frmTotalsPL.GsGCPLs.Anchor(15)
Gui.frmTotalsPL.GsGCPLs.Enabled(True)
Gui.frmTotalsPL.GsGCPLs.Visible(True)
Gui.frmTotalsPL.GsGCPLs.Zorder(0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.fOrderTot.Declare
	V.Global.iPercent.Declare
	V.Global.bLoadData.Declare
	V.Global.bLongPart.Declare
	
	v.Global.bViewSO.Declare
	v.Global.bEditSO.Declare
	v.Global.bShip.Declare
	v.Global.bViewPart.Declare
	v.Global.bEditPart.Declare
	
	
	v.Global.bGenWO.Declare(Boolean, True)
	v.Global.sPL.Declare(String, "RE")
	'Program.External.Include.Library("PPT_Canny.lib")
Program.Sub.Preflight.End


'MOD of 6404
'	for customer NOR LAND
'			Aug 2022 - Nam Le


'This script maintains and shows the Rental Dashboard
	'•	Tab A - Rental Items (complete list of items in the rental pool)
	'•	Tab B - Rented Items (rental items with cycle bill orders assigned)
	'•	Tab C - Reserved Items (rental items promised)
	'•	Tab D - Rented items serviced (rent item with open work order assigned)


Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare	
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	
	f.Intrinsic.UI.InvokeWaitDialog("Loading Dashboard...")

	F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
	F.Intrinsic.String.Build("{0}\ART\GAB_GSS_Logo_Green_Dash.png",V.Caller.GlobalDir,V.Local.sGssLogo)
	'Gui.frmWeb..Icon(V.Local.sIcon)
	Gui.FrmSOMain.picGSSLogo.Picture(V.Local.sGssLogo)
	Gui.FrmSOMain..Icon(V.Local.sIcon)
	Gui.FrmCustomer..Icon(V.Local.sIcon)
	Gui.FrmPL..Icon(V.Local.sIcon)
	Gui.FrmSalesPerson..Icon(V.Local.sIcon)
	
	Gui.FrmSOMain.optEdit.Value(False)
	Gui.FrmSOMain.optView.Value(True)
	Gui.FrmSOMain.optShip.Value(False)
'	Gui.FrmSOMain.tabSODash.SetTab(0)
	
	GUI.FrmSOMain.tab1.SetTab(0)
	
	
	Function.ODBC.Connection!con.OpenCompanyConnection(300)
	
	F.Intrinsic.Control.CallSub(setAnchors)
	F.Intrinsic.Control.CallSub(CheckLongPart)	
	F.Intrinsic.Control.CallSub(CheckDecOpts)
	F.Intrinsic.Control.CallSub(checkpermissions)

	
	'Check and populate percentage from GS_Registry
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,1000,1,"",V.Global.iPercent)
	F.Intrinsic.Control.If(V.Global.iPercent,=,0)
		F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,1000,"False","Top Percent",False,3,-999.0,1/1/1980,12:00:00 AM)
		V.Global.iPercent.Set(3)
	F.Intrinsic.Control.EndIf
	Gui.FrmSOMain.txtPercent.Text(V.Global.iPercent)

	Gui.FrmSOMain..Show
	F.Intrinsic.Control.CallSub(SetTabAnchors)
	F.Intrinsic.Control.CallSub(SetContextMenus)
	F.Intrinsic.Control.CallSub(checktable)
	F.Intrinsic.Control.CallSub(charts2)
	Gui.FrmSOMain.lblStatus.Caption("Loading Sales Orders....")
	Gui.FrmSOMain.pbStatus.Min(0)
	Gui.FrmSOMain.pbStatus.Max(100)
	Gui.FrmSOMain.pbStatus.Value(15)
	F.Intrinsic.Control.BlockEvents
	
	
	'6404
	'----------------------
'	F.Intrinsic.Control.CallSub(loaddtallso)
'	F.Intrinsic.Control.CallSub(loaddtdueso)	
	'----------------------
	
	'replace with MODs
	'----------------------
	F.Intrinsic.Control.CallSub(LoadDataToTabs)
	'----------------------
	
	F.Intrinsic.Control.UnBlockEvents
	Gui.FrmSOMain.pbStatus.Value(90)
	Gui.FrmSOMain.pbStatus.Value(100)
	F.Intrinsic.Control.CallSub(Deserialize)
	
	f.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.FrmSOMain_Resize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iWidth.Declare
	V.Local.iHeight.Declare
	V.Local.iX.Declare
	V.Local.iXcoord.Declare
	V.Local.iSize.Declare
	V.Local.iYcoord.Declare

	f.Intrinsic.Math.sub(V.Screen.FrmSOMain!tabSODash.Width,2130,V.Local.iWidth)
	f.Intrinsic.Math.Sub(V.Screen.FrmSOMain!tabSODash.Height,5070,V.Local.iHeight)
	Gui.FrmSOMain.frameCustomer.Size(V.Local.iWidth,V.Local.iHeight)
	Gui.FrmSOMain.gsCustomer.Size(V.Local.iWidth,V.Local.iHeight)

	f.Intrinsic.Math.Add(V.Screen.FrmSOMain!frameCustomer.Height,495,V.Local.iYcoord)
	f.Intrinsic.Math.Add(V.Screen.FrmSOMain!frameCustomer.Width,2010,V.Local.iSize)
	f.Intrinsic.Math.Mult(V.local.iSize,.5,V.Local.iXCoord)
	f.Intrinsic.Math.Add(V.Local.ixCoord,120,V.Local.ixcoord)
	Gui.FrmSOMain.framePL.Position(V.Local.iXcoord,V.Local.iYcoord)
	Gui.FrmSOMain.frameSalesPerson.Position(240,V.Local.iYcoord)

	f.Intrinsic.Math.mult(V.Screen.FrmSOMain!tabSODash.Width,.47222222222,V.local.iWidth)
	f.Intrinsic.Math.Mult(V.Screen.FrmSOMain!tabSODash.Height,.43760399334,V.Local.iHeight)
	Gui.FrmSOMain.framePL.Size(V.Local.iWidth,3945)
	Gui.FrmSOMain.gsPL.Size(V.Local.iWidth,3945)
	Gui.FrmSOMain.frameSalesPerson.Size(V.Local.iWidth,3945)
	Gui.FrmSOMain.gsSalesPerson.size(V.Local.iWidth,3945)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.FrmSOMain_Resize.End

Program.Sub.FrmSOMain_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.CallSub(Serialize)
	
'	F.Intrinsic.Control.If(V.Global.bLoadData)
'		F.Intrinsic.Control.CallSub(Serialize)
'	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End 
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.FrmSOMain_UnLoad.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(charts2)
	Gui.FrmSOMain.pbStatus.Min(0)
	Gui.FrmSOMain.pbStatus.Max(100)
	Gui.FrmSOMain.pbStatus.Value(15)
	F.Intrinsic.Control.BlockEVents
	F.Intrinsic.Control.CallSub(loaddtallso)
	F.Intrinsic.Control.CallSub(loaddtdueso)
	F.Intrinsic.Control.UnBlockEVents
	Gui.FrmSOMain.pbStatus.Value(100)
	F.Intrinsic.Control.CallSub(Deserialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.setAnchors.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right

	Gui.FrmSOMain.picGSSLogo.Anchor(1)
	Gui.FrmSOMain.tabSODash.Anchor(15)
	Gui.FrmSOMain.framePermissions.Anchor(9)
	Gui.FrmSOMain.lblStatus.Anchor(5)
	Gui.FrmSOMain.pbStatus.Anchor(5)
	Gui.FrmSOMain.lblPercent1.Anchor(9)
	Gui.FrmSOMain.lblPercent2.Anchor(9)
	Gui.FrmSOMain.txtPercent.Anchor(9)
'	Gui.FrmSOMain.lblCurr.Anchor(9)
	Gui.FrmSOMain.txtOnHold.Anchor(9)
	Gui.FrmSOMain.txtReady.Anchor(9)

	Gui.FrmCustomer.gsCustomer.Anchor(15)
	Gui.FrmCustomer.GsGridControlCustomerStat.Anchor(7)

	Gui.FrmPL.gsPL.Anchor(15)
	Gui.FrmPL.GsGridControlPLStat.Anchor(7)

	Gui.FrmSalesPerson.gsSalesperson.Anchor(15)
	Gui.FrmSalesPerson.GsGridControlSalesPersonStat.Anchor(7)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.setAnchors.End


'6404 MOD
'Load Data to Tabs
'	Tab A - All Rental Items
'	Tab B - Rented Items
'	Tab C - Reserved Items
'	Tab D - Service Items
'Load dict for related documents from GCG_6404_RENT_EXT
Program.Sub.LoadDataToTabs.Start
f.Intrinsic.Control.Try
	V.Local.sError.Declare(String)
	v.Local.sSQL.Declare(String)
	
	'dictionary for related documents
		'Aug 17 - 'only fill for PART in 'RENTED' or 'RESERV' BIN
		'Aug 30 - add Customer as a part of PK 
	'----------------------------------
'	v.Local.sSQL.Set("select RTRIM(PART)+RTRIM(LOCATION)+RTRIM(CUSTOMER), RTRIM(RENTAL_AGREE) from GCG_6404_RENT_EXT")
	v.Local.sSQL.Set("select RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(A.CUSTOMER), RTRIM(A.RENTAL_AGREE) from GCG_6404_RENT_EXT A left join V_INVENTORY_MSTR B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) where B.BIN in ('RENTED', 'RESERV')")

	f.Data.Dictionary.CreateFromSQL("dictAgreement", "con", v.Local.sSQL)
	f.Data.Dictionary.SetDefaultReturn("dictAgreement", "")
	
'	v.Local.sSQL.Set("select RTRIM(PART)+RTRIM(LOCATION)+RTRIM(CUSTOMER), RTRIM(CERT_INS) from GCG_6404_RENT_EXT")
	v.Local.sSQL.Set("select RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(A.CUSTOMER), RTRIM(CERT_INS) from GCG_6404_RENT_EXT A left join V_INVENTORY_MSTR B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) where B.BIN in ('RENTED', 'RESERV')")
	
	f.Data.Dictionary.CreateFromSQL("dictCert", "con", v.Local.sSQL)
	f.Data.Dictionary.SetDefaultReturn("dictCert", "")
	'----------------------------------
	
	
	
	'Tab A - All Items in RE
'	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+A.LOCATION PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, '' CYCLE_BILLING from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE where A.PRODUCT_LINE = '{0}' and OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_ORDER_LINES REF where REF.PART = OL.PART)", v.Global.sPL.Trim, v.Local.sSQL)
	
	'Aug 17 - add cases when Part does not have SO
'	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, '' CYCLE_BILLING from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE where A.PRODUCT_LINE = '{0}' and (OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_ORDER_LINES REF where REF.PART = OL.PART) or OL.ORDER_NO is null) and PARTLOC not in (select RTRIM(A2.PART)+A2.LOCATION from V_INVENTORY_MSTR A2 left join V_INVENTORY_MST2 B2 on RTRIM(A2.PART) = RTRIM(B2.PART) and RTRIM(A2.LOCATION) = RTRIM(B2.LOCATION) left join V_DTL_BILL_LINES OL2 on RTRIM(OL2.PART) = RTRIM(A2.PART) left join V_DTL_BILL_HEADER OH2 on OL2.ORDER_NO = OH2.ORDER_NO left join V_CUSTOMER_MASTER CM2 on CM2.CUSTOMER = OH2.CUSTOMER left join V_ORDER_TO_WO OW2 on OL2.ORDER_NO = OW2.ORDER_NO and OL2.RECORD_NO = OW2.ORDER_LINE where A2.PRODUCT_LINE = '{0}' and A2.BIN = 'RENTED' and OL2.ORDER_NO <> '' and OL2.RECORD_NO <> '' and OL2.ORDER_NO+OL2.RECORD_NO = (select MAX(REF2.ORDER_NO+REF2.RECORD_NO) from V_DTL_BILL_LINES REF2 where REF2.PART = OL2.PART) and OH2.ORDER_TYPE='C')", v.Global.sPL.Trim, v.Local.sSQL)
	
	'Aug 30 - add coumns Price, Onhand
'	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, '' CYCLE_BILLING, A.QTY_ONHAND, A.UM_INVENTORY UM, A.AMT_PRICE PRICE from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE where A.PRODUCT_LINE = '{0}' and (OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_ORDER_LINES REF where REF.PART = OL.PART) or OL.ORDER_NO is null) and PARTLOC not in (select RTRIM(A2.PART)+A2.LOCATION from V_INVENTORY_MSTR A2 left join V_INVENTORY_MST2 B2 on RTRIM(A2.PART) = RTRIM(B2.PART) and RTRIM(A2.LOCATION) = RTRIM(B2.LOCATION) left join V_DTL_BILL_LINES OL2 on RTRIM(OL2.PART) = RTRIM(A2.PART) left join V_DTL_BILL_HEADER OH2 on OL2.ORDER_NO = OH2.ORDER_NO left join V_CUSTOMER_MASTER CM2 on CM2.CUSTOMER = OH2.CUSTOMER left join V_ORDER_TO_WO OW2 on OL2.ORDER_NO = OW2.ORDER_NO and OL2.RECORD_NO = OW2.ORDER_LINE where A2.PRODUCT_LINE = '{0}' and A2.BIN = 'RENTED' and OL2.ORDER_NO <> '' and OL2.RECORD_NO <> '' and OL2.ORDER_NO+OL2.RECORD_NO = (select MAX(REF2.ORDER_NO+REF2.RECORD_NO) from V_DTL_BILL_LINES REF2 where REF2.PART = OL2.PART) and OH2.ORDER_TYPE='C')", v.Global.sPL.Trim, v.Local.sSQL)
	
	'Aug 31 - remove checking for related SO, WO in tab C, D
	'Tab B, C, D are basically tab A with Bin filters
	'	link WO by Part, and not using V_ORDER_TO_WO
	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, '' CYCLE_BILLING, A.QTY_ONHAND, A.UM_INVENTORY UM, A.AMT_PRICE PRICE from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_JOB_HEADER OW on RTRIM(OW.PART)=RTRIM(A.PART) where A.PRODUCT_LINE = '{0}' and (OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_ORDER_LINES REF where REF.PART = OL.PART) or OL.ORDER_NO is null) and PARTLOC not in (select RTRIM(A2.PART)+A2.LOCATION from V_INVENTORY_MSTR A2 left join V_INVENTORY_MST2 B2 on RTRIM(A2.PART) = RTRIM(B2.PART) and RTRIM(A2.LOCATION) = RTRIM(B2.LOCATION) left join V_DTL_BILL_LINES OL2 on RTRIM(OL2.PART) = RTRIM(A2.PART) left join V_DTL_BILL_HEADER OH2 on OL2.ORDER_NO = OH2.ORDER_NO left join V_CUSTOMER_MASTER CM2 on CM2.CUSTOMER = OH2.CUSTOMER left join V_JOB_HEADER OW2 on RTRIM(OW2.PART)=RTRIM(A2.PART) where A2.PRODUCT_LINE = '{0}' and A2.BIN = 'RENTED' and OL2.ORDER_NO <> '' and OL2.RECORD_NO <> '' and OL2.ORDER_NO+OL2.RECORD_NO = (select MAX(REF2.ORDER_NO+REF2.RECORD_NO) from V_DTL_BILL_LINES REF2 where REF2.PART = OL2.PART) and OH2.ORDER_TYPE='C')", v.Global.sPL.Trim, v.Local.sSQL)
	
	f.Intrinsic.Control.If(v.DataTable.dtTabA.Exists)
		f.Data.DataTable.Close("dtTabA")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTabA", "con", v.Local.sSQL, True)
	

	
	'Tab B - Rented Items 
	'	BIN = 'RENTED'
	'	with Cycle Bill Order
	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, 'C' CYCLE_BILLING, A.QTY_ONHAND, A.UM_INVENTORY UM, A.AMT_PRICE PRICE from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_DTL_BILL_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_DTL_BILL_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE where A.PRODUCT_LINE = '{0}' and A.BIN = 'RENTED' and OL.ORDER_NO <> '' and OL.RECORD_NO <> '' and OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_DTL_BILL_LINES REF where REF.PART = OL.PART) and OH.ORDER_TYPE='C'", v.Global.sPL, v.Local.sSQL)
	
	'Aug 17 
	' display all Rented
	' > switch to use Dataview from Tab A for tab B data
	'	> still keep dtTabB for merging data, from cycle billing orders
	
	f.Intrinsic.Control.If(v.DataTable.dtTabB.Exists)
		f.Data.DataTable.Close("dtTabB")
	f.Intrinsic.Control.EndIf
	f.Data.DataTable.CreateFromSQL("dtTabB", "con", v.Local.sSQL, True)
	f.Intrinsic.Control.If(v.DataTable.dtTabB.RowCount,>,0)
		f.Data.DataTable.Merge("dtTabB", "dtTabA", True, 2)
		
		f.Data.DataTable.AddColumn("dtTabB", "RENTAL_AGREE", "String", "")
		f.Data.DataTable.AddColumn("dtTabB", "CERT_INS", "String", "")
		f.Data.DataTable.FillFromDictionary("dtTabB", "dictAgreement", "PARTLOC", "RENTAL_AGREE")
		f.Data.DataTable.FillFromDictionary("dtTabB", "dictCert", "PARTLOC", "CERT_INS")
		
'		f.Intrinsic.Control.CallSub(FormatGridTabB)
	f.Intrinsic.Control.EndIf
	
	'format Tab A after merge
	f.Intrinsic.Control.If(v.DataTable.dtTabA.RowCount,>,0)
		f.Data.DataTable.AddColumn("dtTabA", "RENTAL_AGREE", "String", "")
		f.Data.DataTable.AddColumn("dtTabA", "CERT_INS", "String", "")
		f.Data.DataTable.FillFromDictionary("dtTabA", "dictAgreement", "PARTLOC", "RENTAL_AGREE")
		f.Data.DataTable.FillFromDictionary("dtTabA", "dictCert", "PARTLOC", "CERT_INS")
		
'		f.Intrinsic.Control.CallSub(RemoveEmptySOWithCB)
		f.Intrinsic.Control.CallSub(CheckRecordErrorTabA)
		
		f.Intrinsic.Control.CallSub(FormatGridTabA)
	f.Intrinsic.Control.EndIf
	
	'format Tab B after merge
	'Tab B is now tab A with BIN='RENTED' as filter
	f.Intrinsic.Control.if(v.DataTable.dtTabB.Exists)
		f.Data.DataTable.Close("dtTabB")
	f.Intrinsic.Control.EndIf
	f.Data.DataView.Create("dtTabA", "dvTabB", 22, "BIN='RENTED'", "")
	f.Data.DataView.ToDataTable("dtTabA", "dvTabB", "dtTabB", True)
	f.Data.DataView.Close("dtTabA", "dvTabB")
	f.Intrinsic.Control.If(v.DataTable.dtTabB.RowCount,>,0)
		f.Intrinsic.Control.CallSub(FormatGridTabB)
	f.Intrinsic.Control.EndIf
	
	
	
	'Aug 31
	'	Switch to use subset of data from Tab A instead of query new for C and D
	'----------------------
	'Tab C - Reserved Items 
	'	BIN like = 'RESERV'
	'	with SO
'	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.DATE_DUE, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, '' CYCLE_BILLING, A.QTY_ONHAND, A.UM_INVENTORY UM, A.AMT_PRICE PRICE from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE where A.PRODUCT_LINE = '{0}' and A.BIN like '%RESERV%' and OL.ORDER_NO <> '' and OL.RECORD_NO <> '' and OL.ORDER_NO+OL.RECORD_NO = (select MAX(REF.ORDER_NO+REF.RECORD_NO) from V_ORDER_LINES REF where REF.PART = OL.PART)", v.Global.sPL.Trim, v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.dtTabC.Exists)
		f.Data.DataTable.Close("dtTabC")
	f.Intrinsic.Control.EndIf
'	f.Data.DataTable.CreateFromSQL("dtTabC", "con", v.Local.sSQL, True)
	
	f.Data.DataView.Create("dtTabA", "dvTabA_TO_C", 22, "BIN='RESERV'", "")
	f.Data.DataView.ToDataTable("dtTabA", "dvTabA_TO_C", "dtTabC", True)
	f.Data.DataView.Close("dtTabA", "dvTabA_TO_C")
	
	f.Intrinsic.Control.If(v.DataTable.dtTabC.RowCount,>,0)
'		f.Data.DataTable.AddColumn("dtTabC", "RENTAL_AGREE", "String", "")
'		f.Data.DataTable.AddColumn("dtTabC", "CERT_INS", "String", "")
'		f.Data.DataTable.FillFromDictionary("dtTabC", "dictAgreement", "PARTLOC", "RENTAL_AGREE")
'		f.Data.DataTable.FillFromDictionary("dtTabC", "dictCert", "PARTLOC", "CERT_INS")
		f.Intrinsic.Control.CallSub(FormatGridTabC)
	f.Intrinsic.Control.EndIf
	
	
	'Tab D - Items in Service
	'	BIN = 'SERVIC'
	'	with WO
'	f.Intrinsic.String.Build("select RTRIM(A.PART) PART, A.LOCATION, RTRIM(A.PART)+RTRIM(A.LOCATION)+RTRIM(OH.CUSTOMER) PARTLOC, A.PRODUCT_LINE, A.BIN, RTRIM(A.DESCRIPTION) DESCRIPTION, RTRIM(B.DESCRIPTION_2) DESCRIPTION_2, A.QTY_ONHAND, A.UM_INVENTORY, OL.ORDER_NO, LEFT(OL.RECORD_NO,3) RECORD_NO, OH.CUSTOMER, CM.NAME_CUSTOMER, RTRIM(OH.USER_5) USER_5, OH.CUSTOMER_PO, OH.DATE_ORDER, OH.SALESPERSON, OH.PROJECT, OW.JOB, OW.SUFFIX, JH.DATE_DUE, case when DATE_CLOSED > '1900-01-01' then 'Y' else 'N' end as COMPLETE, '' CYCLE_BILLING, A.AMT_PRICE PRICE from V_INVENTORY_MSTR A left join V_INVENTORY_MST2 B on RTRIM(A.PART) = RTRIM(B.PART) and RTRIM(A.LOCATION) = RTRIM(B.LOCATION) left join V_ORDER_LINES OL on RTRIM(OL.PART) = RTRIM(A.PART) left join V_ORDER_HEADER OH on OL.ORDER_NO = OH.ORDER_NO left join V_CUSTOMER_MASTER CM on CM.CUSTOMER = OH.CUSTOMER left join V_ORDER_TO_WO OW on OL.ORDER_NO = OW.ORDER_NO and OL.RECORD_NO = OW.ORDER_LINE left join V_JOB_HEADER JH on JH.JOB = OW.JOB and JH.SUFFIX = OW.SUFFIX where A.PRODUCT_LINE = '{0}' and a.BIN = 'SERVIC' and OW.JOB <> ''", v.Global.sPL.Trim, v.Local.sSQL)
	f.Intrinsic.Control.If(v.DataTable.dtTabD.Exists)
		f.Data.DataTable.Close("dtTabD")
	f.Intrinsic.Control.EndIf
'	f.Data.DataTable.CreateFromSQL("dtTabD", "con", v.Local.sSQL, True)

	f.Data.DataView.Create("dtTabA", "dvTabA_TO_D", 22, "BIN='SERVIC'","")
	f.Data.DataView.ToDataTable("dtTabA", "dvTabA_TO_D", "dtTabD", True)
	f.Data.DataView.Close("dtTabA", "dvTabA_TO_D")

	f.Intrinsic.Control.If(v.DataTable.dtTabD.RowCount,>,0)
'		f.Data.DataTable.AddColumn("dtTabD", "RENTAL_AGREE", "String", "")
'		f.Data.DataTable.AddColumn("dtTabD", "CERT_INS", "String", "")
'		f.Data.DataTable.FillFromDictionary("dtTabD", "dictAgreement", "PARTLOC", "RENTAL_AGREE")
'		f.Data.DataTable.FillFromDictionary("dtTabD", "dictCert", "PARTLOC", "CERT_INS")
		f.Intrinsic.Control.CallSub(FormatGridTabD)
	f.Intrinsic.Control.EndIf
	
	
	'close dicts
	f.Data.Dictionary.Close("dictAgreement")
	f.Data.Dictionary.Close("dictCert")
	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.LoadDataToTabs.End


'6404 MOD
' Format Tab A
Program.Sub.FormatGridTabA.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	V.Local.iCnt.Declare(Long)
	
	gui.FrmSOMain.GsgcTabA.Visible(False)
	
	f.Data.DataView.Create("dtTabA", "dvTabA", 22,"", "BIN")
	
'	gui.FrmSOMain.GsgcTabA.AddGridviewFromDatatable("gvTabA", "dtTabA")
	gui.FrmSOMain.GsgcTabA.AddGridviewFromDataview("gvTabA","dtTabA", "dvTabA")
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", v.Enum.GridViewPropertyNames!EnableAppearanceOddRow, False)
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", v.Enum.GridViewPropertyNames!ReadOnly, False)
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", v.Enum.GridViewPropertyNames!Editable, True)
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", v.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", v.Enum.GridViewPropertyNames!ShowAutoFilterRow, True)
	gui.FrmSOMain.GsgcTabA.SetGridviewProperty("gvTabA", "OptionsViewColumnAutoWidth", False)
	
	
	'caption
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!Caption, "PL")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!Caption, "DESCRIPTION 2")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!Caption, "SO NUMBER")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!Caption, "SO LINE")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER NAME")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER PO")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!Caption, "ORDER DATE")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!Caption, "DUE DATE")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!Caption, "WO")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!Caption, "WO SUFFIX")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "USER_5", v.Enum.ColumnPropertyNames!Caption, "USER 5")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!Caption, "RENTAL AGREEMENT")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!Caption, "INSURANCE CERTIFICATE")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!Caption, "CYCLE BILLING")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "UM", v.Enum.ColumnPropertyNames!Caption, "UM")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!Caption, "ONHAND")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!Caption, "PRICE")
	
	'bold
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "LOCATION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "BIN", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "USER_5", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)	
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PROJECT", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PARTLOC", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "UM", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ERROR", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	
	'center header
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "LOCATION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "BIN", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "USER_5", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")	
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PROJECT", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PARTLOC", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "UM", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ERROR", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	
	'center cell
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "LOCATION", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "BIN", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SALESPERSON", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "UM", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ERROR", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	
	
	'date format
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	'number format
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.##")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.##")
	
	
	'width
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "LOCATION", v.Enum.ColumnPropertyNames!MinWidth, 50)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!MinWidth, 40)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "BIN", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!MinWidth, 60)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 120)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "USER_5", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!MinWidth, 100)	
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SALESPERSON", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PROJECT", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!MinWidth, 60)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!MinWidth, 100)
	
	'hyper link
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!IsHyperlink, True)
	
	
	'coloring
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtTabA.RowCount--,1)
	
		'others
		gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "BackColor", "Lightgreen")
		gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "ForeColor", "Black")
		
		'Rented
		f.Intrinsic.Control.If(v.DataTable.dtTabA(v.Local.iCnt).BIN!FieldValTrim,=,"RENTED")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "BackColor", "Tomato")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "ForeColor", "White")
		f.Intrinsic.Control.EndIf
		
		'Reserve
		f.Intrinsic.Control.If(v.DataTable.dtTabA(v.Local.iCnt).BIN!FieldValTrim,=,"RESERV")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "BackColor", "Gold")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "ForeColor", "Black")
		f.Intrinsic.Control.EndIf
		
		'Servic
		f.Intrinsic.Control.If(v.DataTable.dtTabA(v.Local.iCnt).BIN!FieldValTrim,=,"SERVIC")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "BackColor", "SteelBlue")
			gui.FrmSOMain.GsgcTabA.SetRowAppearance("gvTabA", v.Local.iCnt, "ForeColor", "White")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'conditional formatting for column ERROR
	gui.FrmSOMain.GsgcTabA.AddStyleFormatCondition("gvTabA", "ERROR", "isError", "Equal", "Y")
	gui.FrmSOMain.GsgcTabA.SetStyleFormatConditionProperty("gvTabA", "ERROR", "isError", "BackColor", "Crimson")
	gui.FrmSOMain.GsgcTabA.SetStyleFormatConditionProperty("gvTabA", "ERROR", "isError", "ForeColor", "White")
	
	
'	gui.FrmSOMain.GsgcTabA.SetCellAppearance("gvTabA", "0", -1, "ForeColor", "Crimson")
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	
	'editables
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, True)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, True)
	gui.FrmSOMain.GsgcTabA.ColumnEdit("gvTabA", "CERT_INS", "Dropdownlist", "Y*!*N*!*NA")
	gui.FrmSOMain.GsgcTabA.ColumnEdit("gvTabA", "RENTAL_AGREE", "Dropdownlist", "Y*!*N*!*NA")
	
	
	'disable edit
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PART", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "LOCATION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "BIN", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "ORDER_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "RECORD_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "USER_5", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_ORDER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "DATE_DUE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SALESPERSON", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PROJECT", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "JOB", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "SUFFIX", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "UM", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "QTY_ONHAND", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PRICE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!Visible, False)
		
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PARTLOC", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabA.SetColumnProperty("gvTabA", "PARTLOC", v.Enum.ColumnPropertyNames!Visible, False)
	
	gui.FrmSOMain.GsgcTabA.MainView("gvTabA")
	
	gui.FrmSOMain.GsgcTabA.Visible(True)
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.FormatGridTabA.End


'6404 MOD
' Format Tab B
Program.Sub.FormatGridTabB.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	V.Local.iCnt.Declare(Long)
	
	gui.FrmSOMain.GsgcTabB.Visible(False)
	

	
	gui.FrmSOMain.GsgcTabB.AddGridviewFromDatatable("gvTabB", "dtTabB")
	
	
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", v.Enum.GridViewPropertyNames!EnableAppearanceOddRow, False)
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", v.Enum.GridViewPropertyNames!ReadOnly, True)
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", v.Enum.GridViewPropertyNames!Editable, False)
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", v.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", v.Enum.GridViewPropertyNames!ShowAutoFilterRow, True)
	gui.FrmSOMain.GsgcTabB.SetGridviewProperty("gvTabB", "OptionsViewColumnAutoWidth", False)
	
	
	'caption
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!Caption, "PL")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!Caption, "DESCRIPTION 2")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!Caption, "SO NUMBER")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!Caption, "SO LINE")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER NAME")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER PO")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!Caption, "ORDER DATE")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!Caption, "DUE DATE")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!Caption, "WO")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!Caption, "WO SUFFIX")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "USER_5", v.Enum.ColumnPropertyNames!Caption, "USER 5")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!Caption, "RENTAL AGREEMENT")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!Caption, "INSURANCE CERTIFICATE")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!Caption, "ONHAND")
	
	
	'bold
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "LOCATION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "BIN", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "USER_5", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)	
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PROJECT", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PARTLOC", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "UM", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRICE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	'center header
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "LOCATION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "BIN", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "USER_5", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")	
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PROJECT", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRICE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "UM", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	
	'center cell
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "LOCATION", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "BIN", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SALESPERSON", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PARTLOC", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRICE", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "UM", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	
	
	'date format
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	'number format
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.##")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.##")
	
	'width
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "LOCATION", v.Enum.ColumnPropertyNames!MinWidth, 50)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!MinWidth, 40)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "BIN", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!MinWidth, 60)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 120)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "USER_5", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!MinWidth, 100)	
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SALESPERSON", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PROJECT", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!MinWidth, 60)
	
	'hyper link
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!IsHyperlink, True)
	
	'coloring
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtTabB.RowCount--,1)
		gui.FrmSOMain.GsgcTabB.SetRowAppearance("gvTabB", v.Local.iCnt, "BackColor", "Tomato")
		gui.FrmSOMain.GsgcTabB.SetRowAppearance("gvTabB", v.Local.iCnt, "ForeColor", "White")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	
	'editables
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabB.ColumnEdit("gvTabB", "CERT_INS", "Dropdownlist", "Y*!*N*!*NA")
'	gui.FrmSOMain.GsgcTabB.ColumnEdit("gvTabB", "RENTAL_AGREE", "Dropdownlist", "Y*!*N*!*NA")
	
	
	'disable edit
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PART", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "LOCATION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "BIN", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "ORDER_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RECORD_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "USER_5", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_ORDER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "DATE_DUE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SALESPERSON", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PROJECT", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "JOB", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "SUFFIX", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "UM", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "QTY_ONHAND", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PRICE", v.Enum.ColumnPropertyNames!AllowEdit, False)
		
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PARTLOC", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "PARTLOC", v.Enum.ColumnPropertyNames!Visible, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!Visible, False)
	gui.FrmSOMain.GsgcTabB.SetColumnProperty("gvTabB", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!AllowEdit, False)
	
	gui.FrmSOMain.GsgcTabB.MainView("gvTabB")
	
	gui.FrmSOMain.GsgcTabB.Visible(True)
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.FormatGridTabB.End


'6404 MOD
' Format Tab C
Program.Sub.FormatGridTabC.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	v.Local.iCnt.Declare(Long)
	
	gui.FrmSOMain.GsgcTabC.Visible(False)
	
	gui.FrmSOMain.GsgcTabC.AddGridviewFromDatatable("gvTabC", "dtTabC")
	
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", v.Enum.GridViewPropertyNames!EnableAppearanceOddRow, False)
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", v.Enum.GridViewPropertyNames!ReadOnly, True)
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", v.Enum.GridViewPropertyNames!Editable, False)
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", v.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", v.Enum.GridViewPropertyNames!ShowAutoFilterRow, True)
	gui.FrmSOMain.GsgcTabC.SetGridviewProperty("gvTabC", "OptionsViewColumnAutoWidth", False)
	
	
	'caption
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!Caption, "PL")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!Caption, "DESCRIPTION 2")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!Caption, "SO NUMBER")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!Caption, "SO LINE")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER NAME")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER PO")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!Caption, "ORDER DATE")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!Caption, "DUE DATE")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!Caption, "WO")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!Caption, "WO SUFFIX")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "USER_5", v.Enum.ColumnPropertyNames!Caption, "USER 5")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!Caption, "RENTAL AGREEMENT")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!Caption, "INSURANCE CERTIFICATE")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!Caption, "ONHAND")
	
	'bold
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "LOCATION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "BIN", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "USER_5", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)	
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PROJECT", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "UM", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRICE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	'center header
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "LOCATION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "BIN", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "USER_5", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")	
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PROJECT", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRICE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "UM", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	
	'center cell
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "LOCATION", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "BIN", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SALESPERSON", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRICE", v.Enum.ColumnPropertyNames!CellHAlignment, "right")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "UM", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	
	
	'date format
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	'number format
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.##")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRICE", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.##")
	
	'width
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "LOCATION", v.Enum.ColumnPropertyNames!MinWidth, 50)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!MinWidth, 40)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "BIN", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!MinWidth, 60)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 120)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "USER_5", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!MinWidth, 100)	
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SALESPERSON", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PROJECT", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!MinWidth, 60)
	
	
	'hyper link
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!IsHyperlink, True)
	
	'coloring
	
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtTabC.RowCount--,1)
		gui.FrmSOMain.GsgcTabC.SetRowAppearance("gvTabC", v.Local.iCnt, "BackColor", "Gold")
		gui.FrmSOMain.GsgcTabC.SetRowAppearance("gvTabC", v.Local.iCnt, "ForeColor", "Black")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	
		'editables
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabC.ColumnEdit("gvTabC", "CERT_INS", "Dropdownlist", "Y*!*N*!*NA")
'	gui.FrmSOMain.GsgcTabC.ColumnEdit("gvTabC", "RENTAL_AGREE", "Dropdownlist", "Y*!*N*!*NA")
	
	
	'disable edit
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PART", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "LOCATION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "BIN", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "ORDER_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RECORD_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "USER_5", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_ORDER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "DATE_DUE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SALESPERSON", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PROJECT", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "JOB", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "SUFFIX", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "QTY_ONHAND", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PRICE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "UM", v.Enum.ColumnPropertyNames!AllowEdit, False)
	
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, False)
		
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PARTLOC", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "PARTLOC", v.Enum.ColumnPropertyNames!Visible, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabC.SetColumnProperty("gvTabC", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!Visible, False)
	
	
	gui.FrmSOMain.GsgcTabC.MainView("gvTabC")
	
	gui.FrmSOMain.GsgcTabC.Visible(True)
	
F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.FormatGridTabC.End


'6404 MOD
' Format Tab D
Program.Sub.FormatGridTabD.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	v.Local.iCnt.Declare(Long)
	
	gui.FrmSOMain.GsgcTabD.Visible(False)
	
	gui.FrmSOMain.GsgcTabD.AddGridviewFromDatatable("gvTabD", "dtTabD")
	
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", v.Enum.GridViewPropertyNames!EnableAppearanceOddRow, False)
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", v.Enum.GridViewPropertyNames!ReadOnly, True)
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", v.Enum.GridViewPropertyNames!Editable, False)
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", v.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", v.Enum.GridViewPropertyNames!ShowAutoFilterRow, True)
	gui.FrmSOMain.GsgcTabD.SetGridviewProperty("gvTabD", "OptionsViewColumnAutoWidth", False)
	
	
	'caption
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!Caption, "PL")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!Caption, "DESCRIPTION 2")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!Caption, "SO NUMBER")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!Caption, "SO LINE")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER NAME")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!Caption, "CUSTOMER PO")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!Caption, "ORDER DATE")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!Caption, "DUE DATE")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!Caption, "WO")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!Caption, "WO SUFFIX")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "USER_5", v.Enum.ColumnPropertyNames!Caption, "USER 5")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!Caption, "ONHAND")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "UM_INVENTORY", v.Enum.ColumnPropertyNames!Caption, "UM")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!Caption, "RENTAL AGREEMENT")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CERT_INS", v.Enum.ColumnPropertyNames!Caption, "INSURANCE CERTIFICATE")
	
	'bold
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "LOCATION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "BIN", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "USER_5", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderFontBold, True)	
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PROJECT", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "COMPLETE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "UM_INVENTORY", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PARTLOC", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRICE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CERT_INS", v.Enum.ColumnPropertyNames!HeaderFontBold, True)
	
	
	'center header
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "LOCATION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "BIN", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "USER_5", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")	
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SALESPERSON", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PROJECT", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "COMPLETE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "UM_INVENTORY", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRICE", v.Enum.ColumnPropertyNames!HeaderHAlignment, "Center")
	
	'center cell
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "LOCATION", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "BIN", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SALESPERSON", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "COMPLETE", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!CellHAlignment, "Right")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "UM_INVENTORY", v.Enum.ColumnPropertyNames!CellHAlignment, "Center")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRICE", v.Enum.ColumnPropertyNames!CellHAlignment, "Right")
	
	
	'date format
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!DisplayCustomDateTime, "d")
	
	'number format
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "#,##0.##")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRICE", v.Enum.ColumnPropertyNames!DisplayCustomNumeric, "$#,##0.##")
	
	
	'width
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "LOCATION", v.Enum.ColumnPropertyNames!MinWidth, 50)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!MinWidth, 40)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "BIN", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!MinWidth, 200)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!MinWidth, 60)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!MinWidth, 120)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "USER_5", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!MinWidth, 100)	
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!MinWidth, 100)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SALESPERSON", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PROJECT", v.Enum.ColumnPropertyNames!MinWidth, 70)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!MinWidth, 80)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!MinWidth, 60)
	
	
	'hyper link
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!IsHyperlink, True)
	
	'coloring
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.DataTable.dtTabD.RowCount--,1)
		gui.FrmSOMain.GsgcTabD.SetRowAppearance("gvTabD", v.Local.iCnt, "BackColor", "SteelBlue")
		gui.FrmSOMain.GsgcTabD.SetRowAppearance("gvTabD", v.Local.iCnt, "ForeColor", "White")
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	
			'editables
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, True)
'	gui.FrmSOMain.GsgcTabD.ColumnEdit("gvTabD", "CERT_INS", "Dropdownlist", "Y*!*N*!*NA")
'	gui.FrmSOMain.GsgcTabD.ColumnEdit("gvTabD", "RENTAL_AGREE", "Dropdownlist", "Y*!*N*!*NA")

'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
'	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!CellForeColor, "DarkBlue")
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!CellFontUnderline, True)
	
	'disable edit
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PART", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "LOCATION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRODUCT_LINE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "BIN", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DESCRIPTION_2", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "ORDER_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RECORD_NO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "NAME_CUSTOMER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "USER_5", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CUSTOMER_PO", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_ORDER", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "DATE_DUE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SALESPERSON", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PROJECT", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "JOB", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "SUFFIX", v.Enum.ColumnPropertyNames!AllowEdit, False)
	
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "RENTAL_AGREE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CERT_INS", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "QTY_ONHAND", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "COMPLETE", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "UM_INVENTORY", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PRICE", v.Enum.ColumnPropertyNames!AllowEdit, False)
		
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PARTLOC", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "PARTLOC", v.Enum.ColumnPropertyNames!Visible, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!AllowEdit, False)
	gui.FrmSOMain.GsgcTabD.SetColumnProperty("gvTabD", "CYCLE_BILLING", v.Enum.ColumnPropertyNames!Visible, False)
	
	gui.FrmSOMain.GsgcTabD.MainView("gvTabD")
	
	gui.FrmSOMain.GsgcTabD.Visible(True)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.FormatGridTabD.End


''6404 MOD
'check records for error - Tab A
Program.Sub.CheckRecordErrorTabA.Start
f.Intrinsic.Control.Try
	v.Local.sFilter.Declare(String)
	v.Local.iCount.Declare(Long)
	v.Local.sRet.Declare(String)
	
	f.Data.DataTable.AddColumn("dtTabA", "ERROR", "String")
	
	'1 If rental item BIN = "blank" and SO <> "blank"  then error
	v.Local.sFilter.Set("BIN='' and ORDER_NO <>''")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'2 If rental item BIN = "blank" and RENTAL AGREEMENT = "Y" then error
	v.Local.sFilter.Set("BIN='' and RENTAL_AGREE ='Y'")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'3 If rental item BIN = "blank" and WO <> blank then error
	v.Local.sFilter.Set("BIN='' and JOB <>''")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'4 If rental item BIN = "RENTED" and SO = "blank" then error
	v.Local.sFilter.Set("BIN='RENTED' and (ORDER_NO ='' or ORDER_NO is NULL)")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'5 If rental item BIN = "RENTED" and WO <> "blank" then error
	v.Local.sFilter.Set("BIN='RENTED' and JOB <>''")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'6 If rental item BIN = "RENTED" and RENTAL AGREEMENT <> "Y" then error
	v.Local.sFilter.Set("BIN='RENTED' and RENTAL_AGREE <>'Y'")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'7 If rental item BIN = "RESERV" and SO = "blank" then error
	v.Local.sFilter.Set("BIN='RESERV' and (ORDER_NO ='' or ORDER_NO is NULL)")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'8 If rental item BIN = "RESERV" and RENTAL AGREEMENT = "Y" then error
	v.Local.sFilter.Set("BIN='RESERV' and RENTAL_AGREE ='Y'")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'9 If rental item BIN = "SERVIC" and SO <> "blank" then error
	v.Local.sFilter.Set("BIN='SERVIC' and (ORDER_NO ='' or ORDER_NO is NULL)")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'10 If rental item BIN = "SERVIC" and WO = "blank" then error
	v.Local.sFilter.Set("BIN='SERVIC' and (JOB ='' or JOB is NULL)")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
	'11 If rental item BIN = "SERVIC" and RENTAL AGREEMENT <> "Y" then error
	v.Local.sFilter.Set("BIN='SERVIC' and RENTAL_AGREE <>'Y'")
	f.Data.DataTable.Select("dtTabA", v.Local.sFilter, v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,!=,"***NORETURN***")
		f.Intrinsic.String.Split(v.Local.sRet, "*!*", v.Local.sRet)
		f.Intrinsic.Control.For(v.Local.iCount,0,v.Local.sRet.UBound,1)
			f.Data.DataTable.SetValue("dtTabA", v.Local.sRet(v.Local.iCount), "ERROR", "Y")
		f.Intrinsic.Control.Next(v.Local.iCount)
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.CheckRecordErrorTabA.End

Program.Sub.loadDTAllSO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	v.Local.sSQL.Declare
	v.Local.sQuery.Declare

	Gui.FrmSOMain.lblStatus.Caption("Loading Sales Orders....")

	V.Global.bLoadData.Set(True)
	
	'Create Data Table
	F.Intrinsic.Control.If(V.DataTable.dtAllSO.Exists)
		F.data.datatable.close("dtAllSO")
	F.Intrinsic.Control.EndIf

	'Building the SQL Statement
	V.Local.SSQL.Set("Select A.Customer,E.Name_Customer,B.Description,COALESCE(B.PART,'') AS Part,'' As DISPLAY_PART,B.Location,A.Customer_PO,A.Order_NO,LEFT(B.Record_NO,3) AS Record_NO,IF(B.DATE_ORDER = '1900-01-01', CONVERT(NULL, SQL_DATE), B.DATE_ORDER) AS DATE_ORDER,CASE WHEN B.FLAG_USE_MQD != 'Y' THEN IF(B.MUST_DLVR_BY_DATE='1900-01-01',NULL,B.MUST_DLVR_BY_DATE) WHEN FLAG_USE_MQD = 'Y' THEN IF(C.CUST_DUE_DATE='1900-01-01',NULL,C.CUST_DUE_DATE) END AS MUST_DLVR_BY_DATE,CASE WHEN B.FLAG_USE_MQD != 'Y' THEN IF(B.DATE_ITEM_PROM='1900-01-01',NULL,B.DATE_ITEM_PROM) WHEN FLAG_USE_MQD = 'Y' THEN IF(C.DATE_DUE = '1900-01-01',CONVERT('9999-12-31',SQL_DATE),C.DATE_DUE) END AS ITEM_PROMISE_DT,CASE WHEN B.FLAG_USE_MQD != 'Y' THEN B.QTY_BO WHEN B.FLAG_USE_MQD = 'Y' AND C.FLAG_CLOSED <> 'Y' THEN C.QTY_OPEN WHEN B.FLAG_USE_MQD = 'Y' AND C.FLAG_CLOSED = 'Y' THEN 0 END AS QTY_BO,B.Discount_Price AS Price,CASE WHEN B.FLAG_USE_MQD != 'Y' THEN (B.QTY_BO*B.Discount_Price) WHEN FLAG_USE_MQD = 'Y' THEN (C.QTY_OPEN*B.Discount_Price) WHEN B.Discount_Price = 0 THEN 0.00 END AS BO_EXTENSION,CASE WHEN B.FLAG_USE_MQD != 'Y' THEN DATEDIFF(Day,B.DATE_ITEM_PROM,Now()) WHEN FLAG_USE_MQD = 'Y' THEN DATEDIFF(Day,C.DATE_DUE,Now()) END AS DateDiff,A.SalesPerson,B.Product_Line,CASE WHEN B.FLAG_USE_MQD = 'Y' THEN CONVERT(1,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS FLAG_USE_MQD,RTrim(D.NOTES) As NOTES,RTrim(B.USER_4) As USER_4,RTrim(B.USER_5) As USER_5,B.QTY_ORIGINAL,B.EXTENSION,B.CUSTOMER_PART,B.Part+B.Location As PartLoc,CASE WHEN A.SHP_HLD_FLAG = 02 OR A.SHP_HLD_FLAG = 04 THEN CONVERT(1,SQL_BIT) WHEN A.SHP_HLD_FLAG = NULL THEN CONVERT(0,SQL_BIT) ELSE CONVERT(0,SQL_BIT) END AS SHP_HLD_FLAG,B.LINE_TYPE,RTrim(A.TERMS) As TERMS,F.QTY_ONHAND,B.SHIP_ID,G.CITY_SHIP,RTRIM(G.STATE_SHIP) AS STATE_SHIP,G.SHIP_VIA_SHIP,G.CARRIER_CD,RTRIM(A.CODE_SORT) AS CODE_SORT,RTRIM(A.ORDER_SORT_2) AS ORDER_SORT_2,A.Project,B.Phase FROM V_ORDER_HEADER A LEFT JOIN V_ORDER_LINES B ON A.Order_NO = B.Order_NO LEFT JOIN V_OE_SHIP_SCHED C ON C.ORDER_NO = B.ORDER_NO AND C.ORDER_LINE = B.RECORD_NO AND C.FLAG_CLOSED <> 'Y' LEFT JOIN GAB_6404_SO_NOTES D ON B.ORDER_NO = D.SO AND B.RECORD_NO = CONCAT(D.SOLINE,0) LEFT JOIN V_ORDER_BILL_TO E ON E.ORDER_NO = B.ORDER_NO LEFT JOIN V_INVENTORY_MSTR F ON B.PART = F.PART AND B.LOCATION = F.LOCATION LEFT JOIN V_ORDER_SHIP_TO G ON G.ORDER_NO = B.ORDER_NO and G.SHIP_ID = B.SHIP_ID WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F' ORDER BY ITEM_PROMISE_DT;")	
	
	F.Data.DataTable.CreateFromSQL("dtAllSO","con",v.Local.sSQL,True)
	
	F.Data.DataTable.RemoveColumn("dtAllSO","EXTENSION")
	F.Data.DataTable.RemoveColumn("dtAllSO","PartLoc")
	
	f.Intrinsic.Control.If(v.Global.bLongPart)
		F.Data.DataTable.AddDisplayPartColumn("dtAllSO",0,"Part","DISPLAY_PART")
	f.Intrinsic.Control.Else
		F.Data.DataTable.CopyColumn("dtAllSO","PART","DISPLAY_PART")
	f.Intrinsic.Control.EndIf
	
	'F.Data.DataTable.RemoveColumn("dtAllSO","Part")
		
	Gui.FrmSOMain.pbStatus.Value(30)
	F.Intrinsic.Control.CallSub(loaddvgvallso)
	Gui.FrmSOMain.pbStatus.Value(45)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.loadDTAllSO.End

Program.Sub.loadDTDueSO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	v.Local.sSQL.Declare
	V.Local.sFilter.Declare

	'Create Data Table
	F.Intrinsic.Control.If(V.DataTable.dtdueSO.Exists)
		F.data.datatable.close("dtdueSO")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.String.Build("ITEM_PROMISE_DT <= #{0}#",V.Ambient.Date.FormatMM/DD/YYYY,V.Local.sFilter)	
	F.Data.DataView.Create("dtAllSO","dvDueSO",22,V.Local.sFilter,"")
	F.Data.DataView.ToDataTable("dtAllSO","dvDueSO","dtDueSO",True)

	Gui.FrmSOMain.pbStatus.Value(60)
	F.Intrinsic.Control.CallSub(loaddvgvdueSO)
	Gui.FrmSOMain.pbStatus.Value(75)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.loadDTDueSO.End

Program.Sub.loadDVGVAllSO.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	V.Local.sCaption.Declare
	V.Local.bHold.Declare

	Gui.FrmSOMain.GsGCAllSO.AddGridViewFromDataTable("gvAllSO","dtAllSO")
	Gui.FrmSOMain.GsGCAllSO.SuspendLayout()
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","MultiSelect",True)
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","AllowSort",True)
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","AllowFilter",True)
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","OptionsDetailShowDetailTabs",False)
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","OptionsViewShowGroupPanel",True)
	Gui.frmSOMain.GsGCAllSO.SetGridViewProperty("gvAllSO","OptionsViewColumnAutoWidth",False)	
		
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Part","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","Visible",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","Visible",False)
	
		
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","Caption","Customer")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","Caption","Customer Name")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Description","Caption","Description")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","Caption","Part")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","Caption","Loc")	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","Caption","PL")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer_PO","Caption","Customer PO")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","Caption","Order No")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","Caption","Line")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","Caption","Order Date")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","Caption","Cust Due Dt")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","Caption","Ship Date")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","Caption","BO Qty")
	F.Intrinsic.String.Build("Unit Price ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","Caption",V.Local.sCaption)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","Caption","Ship Sched")
	F.Intrinsic.String.Build("Extension ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","Caption",V.Local.sCaption)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","Caption","Days Past")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","Caption","Notes")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","Caption","User Field 4 (30 Characters)")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","Caption","User Field 5 (30 Characters)")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","Caption","Salesperson")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","Caption","Original Qty")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","Caption","Qty On Hand")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","Caption","Line Type")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","Caption","Terms")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","Caption","Ship To ID")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","Caption","Ship City")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","Caption","Ship State")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","Caption","Ship Via")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","Caption","Carrier")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","Caption","Order Sort")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","Caption","Order Sort 2")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","Caption","Customer Part")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","Caption","Hold")
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Description","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer_PO","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","AllowEdit",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","AllowEdit",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","AllowEdit",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","AllowEdit",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","AllowEdit",False)
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","ReadOnly",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","ReadOnly",False)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","ReadOnly",False)
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","MinWidth","200")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Description","MinWidth","200")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","MinWidth","170")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","MinWidth","35")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","MinWidth","35")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer_PO","MinWidth","170")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","MinWidth","65")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","MinWidth","35")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","MinWidth","150")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","MinWidth","140")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","MinWidth","85")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","MinWidth","220")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","MinWidth","220")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","MinWidth","220")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","MinWidth","70")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","MinWidth","95")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","MinWidth","120")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","MinWidth","80")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","MinWidth","100")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","MinWidth","150")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","MinWidth","150")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","MinWidth","85")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","MinWidth","85")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","MinWidth","85")
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Description","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer_PO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","HeaderHAlignment","Center")
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Description","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer_PO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CITY_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_VIA_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CUSTOMER_PART","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","HeaderHAlignment","Center")	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","HeaderHAlignment","Center")
	
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Product_Line","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Record_NO","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","FLAG_USE_MQD","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DateDiff","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SalesPerson","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","LINE_TYPE","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","TERMS","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHIP_ID","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","STATE_SHIP","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CARRIER_CD","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","CODE_SORT","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","ORDER_SORT_2","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","SHP_HLD_FLAG","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Project","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Phase","CellHAlignment","Center")
	
	f.Intrinsic.Control.If(v.Global.bViewSO,=,True,or,v.Global.bEditSO,=,True)
		Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","CellForeColor",V.Enum.ThemeColors!AccentColor)
	f.Intrinsic.Control.ElseIf(v.Global.bShip,=,True)
		Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Order_NO","CellForeColor",V.Enum.ThemeColors!AccentColor)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bViewPart,=,True,or,v.Global.bEditPart,=,True)
		Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","CellForeColor",V.Enum.ThemeColors!AccentColor)
		'Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Location","CellForeColor","Blue")
	f.Intrinsic.Control.EndIf	

	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Customer","Fixed","Left")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Name_Customer","Fixed","Left")

	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","NOTES","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_4","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","USER_5","CellBackColor","LightYellow")

	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Qty_BO","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","PRICE","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","BO_EXTENSION","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ORIGINAL","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","QTY_ONHAND","DisplayCustomNumeric","#,###,##0.00")

	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DATE_ORDER","DisplayCustomDatetime","d")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","MUST_DLVR_BY_DATE","DisplayCustomDatetime","d")
	Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","Item_Promise_Dt","DisplayCustomDatetime","d")
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmSOMain.GsGCAllSO.SetColumnProperty("gvAllSO","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAllSO.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtAllSO(V.Local.iCnt).QTY_ONHAND!fieldValFloat,>=,V.DataTable.dtAllSO(V.Local.iCnt).QTY_BO!FieldValFloat)
			Gui.FrmSOMain.GsGCAllSO.setRowAppearance("gvAllSO",V.Local.iCnt,"BackColor","LightGreen")
		F.Intrinsic.Control.EndIf

		Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","SHP_HLD_FLAG",V.Local.iCnt,V.Local.bHold)
		F.Intrinsic.Control.If(V.Local.bHold)
			Gui.FrmSOMain.GsGCAllSO.SetRowAppearance("gvAllSO",V.Local.iCnt,"BackColor","Pink")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	Gui.FrmSOMain.GsGCAllSO.AddSummaryItem("gvAllSO","Qty_BO","Qty_BO","Sum","","","n")
	Gui.FrmSOMain.GsGCAllSO.AddSummaryItem("gvAllSO","BO_EXTENSION","BO_EXTENSION","Sum","","","n")

	Gui.FrmSOMain.GsGCAllSO.ResumeLayout()
	Gui.frmSOMain.GsGCAllSO.MainView("gvAllSO")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.loadDVGVAllSO.End

Program.Sub.loadDVGVDueSO.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	V.Local.sCaption.Declare
	V.Local.bHold.Declare
	
	Gui.FrmSOMain.GsGCDueSO.AddGridViewFromDataTable("gvDueSO","dtDueSO")
	Gui.FrmSOMain.GsGCDueSO.ResumeLayout()
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","MultiSelect",True)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","AllowSort",True)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","AllowFilter",True)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","OptionsDetailShowDetailTabs",False)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","OptionsViewShowGroupPanel",True)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","OptionsMenuShowAutoFilterRowItem",False)
	Gui.frmSOMain.GsGCDueSO.SetGridViewProperty("gvDueSO","OptionsViewColumnAutoWidth",False)
		
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Part","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","Visible",False)
		Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","Visible",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","Visible",False)
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","Caption","Customer")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","Caption","Customer Name")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Description","Caption","Description")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","Caption","Part")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","Caption","Loc")	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","Caption","PL")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer_PO","Caption","Customer PO")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","Caption","Order No")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","Caption","Line")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","Caption","Order Date")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","Caption","Cust Due Dt")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","Caption","Ship Date")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","Caption","BO Qty")
	F.Intrinsic.String.Build("Unit Price ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","Caption",V.Local.sCaption)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","Caption","Ship Sched")
	F.Intrinsic.String.Build("Extension ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","Caption",V.Local.sCaption)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","Caption","Days Past")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","Caption","Notes")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","Caption","User Field 4 (30 Characters)")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","Caption","User Field 5 (30 Characters)")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","Caption","Salesperson")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","Caption","Original Qty")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","Caption","Qty On Hand")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","Caption","Line Type")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","Caption","Terms")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","Caption","Ship To ID")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","Caption","Ship City")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","Caption","Ship State")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","Caption","Ship Via")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","Caption","Carrier")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","Caption","Order Sort")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","Caption","Order Sort 2")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","Caption","Customer Part")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","Caption","Hold")
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Description","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer_PO","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","AllowEdit",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","AllowEdit",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","AllowEdit",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","AllowEdit",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","AllowEdit",False)
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","ReadOnly",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","ReadOnly",False)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","ReadOnly",False)
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","MinWidth","200")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Description","MinWidth","200")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","MinWidth","170")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","MinWidth","35")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","MinWidth","35")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer_PO","MinWidth","170")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","MinWidth","65")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","MinWidth","35")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","MinWidth","150")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","MinWidth","140")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","MinWidth","85")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","MinWidth","220")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","MinWidth","220")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","MinWidth","220")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","MinWidth","70")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","MinWidth","95")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","MinWidth","120")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","MinWidth","80")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","MinWidth","100")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","MinWidth","150")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","MinWidth","150")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","MinWidth","85")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","MinWidth","85")
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Description","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer_PO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","HeaderFontBold",True)
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Description","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer_PO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CITY_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_VIA_SHIP","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CUSTOMER_PART","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","HeaderHAlignment","Center")
	
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Product_Line","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Record_NO","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","FLAG_USE_MQD","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DateDiff","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SalesPerson","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","LINE_TYPE","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","TERMS","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHIP_ID","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","STATE_SHIP","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CARRIER_CD","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","CODE_SORT","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","ORDER_SORT_2","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","SHP_HLD_FLAG","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Project","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Phase","CellHAlignment","Center")
	
	f.Intrinsic.Control.If(v.Global.bViewSO,=,True,or,v.Global.bEditPart,=,True)
		Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","CellForeColor",V.Enum.ThemeColors!AccentColor)
	f.Intrinsic.Control.ElseIf(v.Global.bShip,=,True)
		Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Order_NO","CellForeColor",V.Enum.ThemeColors!AccentColor)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Global.bViewPart,=,True,or,v.Global.bEditPart,=,True)
		Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","CellForeColor",V.Enum.ThemeColors!AccentColor)
		'Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Location","CellForeColor","Blue")
	f.Intrinsic.Control.EndIf	

	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Customer","Fixed","Left")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Name_Customer","Fixed","Left")

	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","NOTES","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_4","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","USER_5","CellBackColor","LightYellow")

	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Qty_BO","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","PRICE","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","BO_EXTENSION","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ORIGINAL","DisplayCustomNumeric","#,###,##0.00")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","QTY_ONHAND","DisplayCustomNumeric","#,###,##0.00")

	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DATE_ORDER","DisplayCustomDatetime","d")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","MUST_DLVR_BY_DATE","DisplayCustomDatetime","d")
	Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","Item_Promise_Dt","DisplayCustomDatetime","d")
	
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmSOMain.GsGCDueSO.SetColumnProperty("gvDueSO","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtDueSO.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtDueSO(V.Local.iCnt).QTY_ONHAND!fieldValFloat,>=,V.DataTable.dtDueSO(V.Local.iCnt).QTY_BO!FieldValFloat)
			Gui.FrmSOMain.GsGCDueSO.setRowAppearance("gvDueSO",V.Local.iCnt,"BackColor","LightGreen")
		F.Intrinsic.Control.EndIf

		Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","SHP_HLD_FLAG",V.Local.iCnt,V.Local.bHold)
		F.Intrinsic.Control.If(V.Local.bHold)
			Gui.FrmSOMain.GsGCDueSO.SetRowAppearance("gvDueSO",V.Local.iCnt,"BackColor","Pink")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	Gui.FrmSOMain.GsGCDueSO.AddSummaryItem("gvDueSO","Qty_BO","Qty_BO","Sum","","","n")
	Gui.FrmSOMain.GsGCDueSO.AddSummaryItem("gvDueSO","BO_EXTENSION","BO_EXTENSION","Sum","","","n")

	Gui.FrmSOMain.GsGCDueSO.ResumeLayout()
	Gui.frmSOMain.GsGCDueSO.MainView("gvDueSO")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.loadDVGVDueSO.End

Program.Sub.GsGCAllSO_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)				
			f.Intrinsic.Control.AndIf(v.Global.bViewPart)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Global.General.CallWrapperAsync(300011,V.Local.sParams)				
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bEditPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsGCAllSO.Enabled(False)				
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsGCAllSO.Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCAllSO_RowCellClick.End

Program.Sub.GsGCDueSO_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("DISPLAY_PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)
				f.Intrinsic.Control.If(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsGCAllSO.Enabled(False)
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsGCAllSO.Enabled(True)
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCDueSO_RowCellClick.End

Program.Sub.GsGCAllSO_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("GsGCAllSO_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)

	V.Local.sSQL.Declare
	V.Local.sOrder.Declare
	V.Local.sSOLine.Declare
	V.Local.sLine.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("NOTES")
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_6404_SO_NOTES WHERE SO = '{0}' AND SOLINE = '{1}';",V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_6404_SO_NOTES(SO,SOLINE,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_6404_SO_NOTES SET NOTES = '{0}' WHERE SO = '{1}' AND SOLINE = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Args.Value,"GV","gvAllSO","SO_Note","NOTES")
	
		F.Intrinsic.Control.Case("USER_4")
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.RPad(V.Local.sLine,"0",4,V.Local.sSOLine)
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_4) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_4 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","gvAllSO","SO_Note","USER_4")
	
		F.Intrinsic.Control.Case("USER_5")
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.RPad(V.Local.sLine,"0",4,V.Local.sSOLine)
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_5) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_5 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","gvAllSO","SO_Note","USER_5")
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("GsGCAllSO_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.GsGCAllSO_CellValueChanged.End

Program.Sub.GsGCDueSO_CellValueChanged.Start
F.Intrinsic.Control.SetErrorHandler("GsGCDueSO_CellValueChanged_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)

	V.Local.sSQL.Declare
	V.Local.sOrder.Declare
	V.Local.sLine.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	V.Local.sSOLine.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.column)
		F.Intrinsic.Control.Case("NOTES")
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM GAB_6404_SO_NOTES WHERE SO = '{0}' AND SOLINE = '{1}';",V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GAB_6404_SO_NOTES(SO,SOLINE,NOTES) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GAB_6404_SO_NOTES SET NOTES = '{0}' WHERE SO = '{1}' AND SOLINE = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Args.Value,"GV","GsGCDueSO","SO_Note","NOTES")
	
		F.Intrinsic.Control.Case("USER_4")
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.RPad(V.Local.sLine,"0",4,V.Local.sSOLine)
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_4) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_4 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","GsGCDueSO","SO_Note","USER_4")
	
		F.Intrinsic.Control.Case("USER_5")
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Args.RowIndex,V.Local.sOrder)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Args.RowIndex,V.Local.sLine)
			F.Intrinsic.String.RPad(V.Local.sLine,"0",4,V.Local.sSOLine)
			F.Intrinsic.String.Left(V.Args.Value,30,V.Local.sText)
			F.Intrinsic.String.Replace(V.Local.sText,"'","''",V.Local.sTextTbl)
			F.Intrinsic.String.Build("SELECT * FROM ORDER_LINES WHERE ORDER_NO = '{0}' AND RECORD_NO = '{1}';",V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstNotes",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstNotes.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO ORDER_LINES(ORDER_NO,RECORD_NO,USER_5) VALUES('{0}','{1}','{2}');",V.Local.sOrder,V.Local.sSOLine,V.Local.sTextTbl,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE ORDER_LINES SET USER_5 = '{0}' WHERE ORDER_NO = '{1}' AND RECORD_NO = '{2}';",V.Local.sTextTbl,V.Local.sOrder,V.Local.sSOLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstNotes.Close
			F.Intrinsic.Control.CallSub(checknote,"SO",V.Local.sOrder,"Line",V.Local.sLine,"Note",V.Local.sText,"GV","GsGCDueSO","SO_Note","USER_5")
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("GsGCDueSO_CellValueChanged_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.GsGCDueSO_CellValueChanged.End

Program.Sub.Charts2.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iC.Declare
	V.Local.sSeries.Declare
	V.Local.sCustomers.Declare
	V.Local.sCustArray.Declare
	V.Local.sSales.Declare
	V.Local.sSalesArray.Declare
	V.Local.sSP.Declare
	V.Local.sSPArray.Declare
	V.Local.sPL.Declare
	V.Local.sPLArray.Declare
	V.Local.fOther.Declare

	Gui.FrmSOMain.lblStatus.Caption("Loading Sales Statistics....")

	F.Intrinsic.Control.If(V.DataTable.dtCustomers.Exists)
		F.Data.DataTable.Close("dtCustomers")
		F.Data.DataTable.Close("dtCustomersD")
		F.Data.DataTable.Close("dtSP")
		F.Data.DataTable.Close("dtSPD")
		F.Data.DataTable.Close("dtPL")
		F.Data.DataTable.Close("dtPLD")
		Gui.FrmCustomer.gsCustomer.ClearChart
		Gui.FrmPL.gsPL.ClearChart
		Gui.FrmSalesPerson.gsSalesperson.ClearChart
		Gui.FrmSOMain.gsPL.ClearChart
		Gui.FrmSOMain.gsCustomer.ClearChart
		Gui.FrmSOMain.gsSalesPerson.ClearChart
	F.Intrinsic.Control.EndIf
	
	'Check Total Sales
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F';",V.Local.fOther)
	F.Intrinsic.Control.If(V.Local.fOther,=,0)
		F.Intrinsic.UI.Msgbox("Total Sales is currently zero. Graphs will not be populated.","Totals Sales")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf

	'Customer Sales Stats
	F.Data.DataTable.CreateFromSQL("dtCustomers","con","SELECT IF(A.CUSTOMER <> '',A.CUSTOMER,'Misc.') AS CUSTOMER,IF(NAME_CUSTOMER <> '',NAME_CUSTOMER,'Misc.') AS NAME_CUSTOMER,SUM(QTY_BO*PRICE) AS CUST_TOTAL,(SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) AS BO_EXTENSION FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F') AS TOTAL_SALES,Case When (SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F') = 0 Then 0 Else CAST((SUM(QTY_BO*PRICE)/(SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) AS BO_EXTENSION FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F'))*100 AS NUMERIC(16,6)) End AS PERCENTOFSALES FROM V_ORDER_LINES A LEFT JOIN V_CUSTOMER_MASTER B ON A.CUSTOMER = B.CUSTOMER WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F' GROUP BY A.CUSTOMER,B.NAME_CUSTOMER ORDER BY CUST_TOTAL DESC;",True)
	F.Data.DataView.Create("dtCustomers","dVCustomers")
	F.Data.DataView.ToDataTableDistinct("dtCustomers","dVCustomers","dtCustomersD","NAME_CUSTOMER*!*PERCENTOFSALES",True)

	V.Local.iC.Set(0)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtCustomersD.RowCount--,1)
		F.Intrinsic.Control.If(V.Local.iC,=,0)
			F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtCustomersD(V.Local.iCnt).NAME_CUSTOMER!FieldValTrim,V.Local.sCustomers)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtCustomersD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sCustomers,V.DataTable.dtCustomersD(V.Local.iCnt).NAME_CUSTOMER!FieldValTrim,V.Local.sCustomers)
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.DataTable.dtCustomersD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.String.Replace(V.Local.sCustomers,"*!*","",V.Local.sCustomers)
	F.Intrinsic.String.Replace(V.Local.sCustomers,"#$#","*!*",V.Local.sCustomers)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)

	V.Local.iC.Set(0)
	V.Local.fOther.Set(0)
	v.Local.bPercentFound.Declare
	v.Local.bPercentFound.Set("False")
	F.Intrinsic.String.Split(V.Local.sCustomers,"*!*",V.Local.sCustArray)
	F.Intrinsic.String.Split(V.Local.sSales,"*!*",V.Local.sSalesArray)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSalesArray.UBound,1)
		F.Intrinsic.Control.If(V.Local.sSalesArray(V.Local.iCnt).Float,>,V.Global.iPercent)
			v.Local.bPercentFound.Set("True")
			F.Intrinsic.Control.If(V.Local.iC,=,0)
				F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sCustArray(V.Local.iCnt),V.Local.sCustomers)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sCustomers,V.Local.sCustArray(V.Local.iCnt),V.Local.sCustomers)
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Add(V.Local.fOther,V.Local.sSalesArray(V.Local.iCnt).Float,V.Local.fOther)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)	

	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sCustomers,"Other",V.Local.sCustomers)
	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.fOther,V.Local.sSales)

	F.Intrinsic.String.Replace(V.Local.sCustomers,"*!*","",V.Local.sCustomers)
	F.Intrinsic.String.Replace(V.Local.sCustomers,"#$#","*!*",V.Local.sCustomers)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)
	
	f.Intrinsic.Control.If(v.Local.bPercentFound)
		F.Intrinsic.String.Build("{0}!*!{1}",V.Local.sCustomers,V.Local.sSales,V.Local.sSeries)
	f.Intrinsic.Control.Else
		v.Local.sSeries.Set("Other!*!100")
	f.Intrinsic.Control.EndIf
	
	Gui.FrmSOMain.gsCustomer.CreatePieChart("Sales by Customer","C1",V.Local.sSeries)
	Gui.FrmSOMain.gsCustomer.SetChartProperty("LEGEND","","Visible",-1,False)
	Gui.FrmCustomer.gsCustomer.CreatePieChart("Sales by Customer","C2",V.Local.sSeries)
	Gui.FrmCustomer.gsCustomer.SetChartProperty("LEGEND","","Visible",-1,False)

	F.Data.DataTable.RemoVeColumn("dtCustomers","CUSTOMER")
	F.Data.DataTable.RemoVeColumn("dtCustomers","CUST_TOTAL")
	F.Data.DataTable.RemoVeColumn("dtCustomers","TOTAL_SALES")

	Gui.FrmCustomer.GsGridControlCustomerStat.AddGridViewFromDataTable("gVCust","dtCustomers")
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","MultiSelect",True)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","AllowSort",False)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","AllowFilter",False)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","OptionsDetailShowDetailTabs",False)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","OptionsViewShowGroupPanel",False)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetGridViewProperty("gVCust","Enableappearanceoddrow",True)

	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","PERCENTOFSALES","Caption","% of Sales")

	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","PERCENTOFSALES","AllowEdit",False)

	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","NAME_CUSTOMER","MinWidth","178")
	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","PERCENTOFSALES","MinWidth","50")

	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","PERCENTOFSALES","CellHalignment","Far")
	Gui.FrmCustomer.GsGridControlCustomerStat.SetColumnProperty("gVCust","PERCENTOFSALES","DisplayCustomNumeric","##0.000")

	Gui.FrmCustomer.GsGridControlCustomerStat.MainView("gVCust")

	'Salesperson Stats
	F.Data.DataTable.CreateFromSQL("dtSP","con","SELECT IF(SALESPERSON <> '',SALESPERSON,'Misc.') AS SALESPERSON,SUM(QTY_BO*PRICE) AS CUST_TOTAL,(SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) AS BO_EXTENSION FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F') AS TOTAL_SALES,CAST((SUM(QTY_BO*PRICE)/(SELECT SUM(QTY_BO*PRICE) AS TOTAL_SALES FROM V_ORDER_LINES))*100 AS NUMERIC(16,6)) AS PERCENTOFSALES FROM V_ORDER_LINES A LEFT JOIN V_ORDER_HEADER B ON A.ORDER_NO = B.ORDER_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F' GROUP BY SALESPERSON ORDER BY CUST_TOTAL DESC;",True)
	F.Data.DataView.Create("dtSP","dVSP")
	F.Data.DataView.ToDataTableDistinct("dtSP","dVSP","dtSPD","SALESPERSON*!*PERCENTOFSALES",True)

	V.Local.iC.Set(0)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtSPD.RowCount--,1)
		F.Intrinsic.Control.If(V.Local.iC,=,0)
			F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtSPD(V.Local.iCnt).SALESPERSON!FieldValTrim,V.Local.sSP)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtSPD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSP,V.DataTable.dtSPD(V.Local.iCnt).SALESPERSON!FieldValTrim,V.Local.sSP)
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.DataTable.dtSPD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.String.Replace(V.Local.sSP,"*!*","",V.Local.sSP)
	F.Intrinsic.String.Replace(V.Local.sSP,"#$#","*!*",V.Local.sSP)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)	

	V.Local.iC.Set(0)
	V.Local.fOther.Set(0)
	F.Intrinsic.String.Split(V.Local.sSP,"*!*",V.Local.sSPArray)
	F.Intrinsic.String.Split(V.Local.sSales,"*!*",V.Local.sSalesArray)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSalesArray.UBound,1)
		F.Intrinsic.Control.If(V.Local.sSalesArray(V.Local.iCnt).Float,>,V.Global.iPercent)
			F.Intrinsic.Control.If(V.Local.iC,=,0)
				F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sSPArray(V.Local.iCnt),V.Local.sSP)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSP,V.Local.sSPArray(V.Local.iCnt),V.Local.sSP)
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Add(V.Local.fOther,V.Local.sSalesArray(V.Local.iCnt).Float,V.Local.fOther)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSP,"Other",V.Local.sSP)
	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.fOther,V.Local.sSales)

	F.Intrinsic.String.Replace(V.Local.sSP,"*!*","",V.Local.sSP)
	F.Intrinsic.String.Replace(V.Local.sSP,"#$#","*!*",V.Local.sSP)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)
	F.Intrinsic.String.Build("{0}!*!{1}",V.Local.sSP,V.Local.sSales,V.Local.sSeries)
	Gui.FrmSOMain.gsSalesPerson.CreatePieChart("Sales by Salesperson","S1",V.Local.sSeries)
	Gui.FrmSOMain.gsSalesPerson.SetChartProperty("LEGEND","","Visible",-1,False)
	Gui.FrmSalesperson.gsSalesperson.CreatePieChart("Sales by Salesperson","S2",V.Local.sSeries)
	Gui.FrmSalesperson.gsSalesperson.SetChartProperty("LEGEND","","Visible",-1,False)

	F.Data.DataTable.RemoVeColumn("dtSP","CUST_TOTAL")
	F.Data.DataTable.RemoVeColumn("dtSP","TOTAL_SALES")

	Gui.FrmSalesperson.GsGridControlSalespersonStat.AddGridViewFromDataTable("gVSP","dtSP")
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","MultiSelect",True)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","AllowSort",False)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","AllowFilter",False)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","OptionsDetailShowDetailTabs",False)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","OptionsViewShowGroupPanel",False)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetGridViewProperty("gVSP","Enableappearanceoddrow",True)

	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","SALESPERSON","Caption","Salesperson")
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","PERCENTOFSALES","Caption","% of Sales")

	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","SALESPERSON","AllowEdit",False)
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","PERCENTOFSALES","AllowEdit",False)

	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","SALESPERSON","MinWidth","50")
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","PERCENTOFSALES","MinWidth","50")

	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","PERCENTOFSALES","CellHalignment","Far")
	Gui.FrmSalesperson.GsGridControlSalespersonStat.SetColumnProperty("gVSP","PERCENTOFSALES","DisplayCustomNumeric","##0.000")

	Gui.FrmSalesperson.GsGridControlSalespersonStat.MainView("gVSP")

	'Product Line Stats
	F.Data.DataTable.CreateFromSQL("dtPL","con","SELECT IF(A.PRODUCT_LINE <> '',A.PRODUCT_LINE,'Misc.') AS PRODUCT_LINE,IF(PRODUCT_LINE_NAME <> '',PRODUCT_LINE_NAME,'Misc.') AS PRODUCT_LINE_NAME,SUM(QTY_BO*PRICE) AS CUST_TOTAL,(SELECT SUM(CASE WHEN VOL.FLAG_USE_MQD != 'Y' THEN (VOL.QTY_BO*VOL.DISCOUNT_PRICE) WHEN FLAG_USE_MQD = 'Y' THEN (VOSS.QTY_OPEN*VOL.DISCOUNT_PRICE) WHEN VOL.DISCOUNT_PRICE = 0 THEN 0.00 END) AS BO_EXTENSION FROM V_ORDER_LINES VOL LEFT JOIN V_OE_SHIP_SCHED VOSS ON VOSS.ORDER_NO = VOL.ORDER_NO AND VOSS.ORDER_LINE = VOL.RECORD_NO WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F') AS TOTAL_SALES,CAST((SUM(QTY_BO*PRICE)/(SELECT SUM(QTY_BO*PRICE) AS TOTAL_SALES FROM V_ORDER_LINES))*100 AS NUMERIC(16,6)) AS PERCENTOFSALES FROM V_ORDER_LINES A LEFT JOIN V_PRODUCT_LINE B ON A.PRODUCT_LINE = B.PRODUCT_LINE WHERE QTY_BO <> 0 AND LINE_TYPE <> 'F' GROUP BY A.PRODUCT_LINE,PRODUCT_LINE_NAME ORDER BY CUST_TOTAL DESC;",True)
	F.Data.DataView.Create("dtPL","dVPL")
	F.Data.DataView.ToDataTableDistinct("dtPL","dVPL","dtPLD","PRODUCT_LINE*!*PERCENTOFSALES",True)

	V.Local.iC.Set(0)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPLD.RowCount--,1)
		F.Intrinsic.Control.If(V.Local.iC,=,0)
			F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtPLD(V.Local.iCnt).PRODUCT_LINE!FieldValTrim,V.Local.sPL)
			F.Intrinsic.String.Build("{0}*!*",V.DataTable.dtPLD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sPL,V.DataTable.dtPLD(V.Local.iCnt).PRODUCT_LINE!FieldValTrim,V.Local.sPL)
			F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.DataTable.dtPLD(V.Local.iCnt).PERCENTOFSALES!FieldVal,V.Local.sSales)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.String.Replace(V.Local.sPL,"*!*","",V.Local.sPL)
	F.Intrinsic.String.Replace(V.Local.sPL,"#$#","*!*",V.Local.sPL)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)

	V.Local.iC.Set(0)
	V.Local.fOther.Set(0)
	F.Intrinsic.String.Split(V.Local.sPL,"*!*",V.Local.sPLArray)
	F.Intrinsic.String.Split(V.Local.sSales,"*!*",V.Local.sSalesArray)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSalesArray.UBound,1)
		F.Intrinsic.Control.If(V.Local.sSalesArray(V.Local.iCnt).Float,>,V.Global.iPercent)
			F.Intrinsic.Control.If(V.Local.iC,=,0)
				F.Intrinsic.Math.Add(V.Local.iC,1,V.Local.iC)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sPLArray(V.Local.iCnt),V.Local.sPL)
				F.Intrinsic.String.Build("{0}*!*",V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sPL,V.Local.sPLArray(V.Local.iCnt),V.Local.sPL)
				F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.sSalesArray(V.Local.iCnt),V.Local.sSales)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Add(V.Local.fOther,V.Local.sSalesArray(V.Local.iCnt).Float,V.Local.fOther)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sPL,"Other",V.Local.sPL)
	F.Intrinsic.String.Build("{0}#$#{1}*!*",V.Local.sSales,V.Local.fOther,V.Local.sSales)

	F.Intrinsic.String.Replace(V.Local.sPL,"*!*","",V.Local.sPL)
	F.Intrinsic.String.Replace(V.Local.sPL,"#$#","*!*",V.Local.sPL)
	F.Intrinsic.String.Replace(V.Local.sSales,"*!*","",V.Local.sSales)
	F.Intrinsic.String.Replace(V.Local.sSales,"#$#","*!*",V.Local.sSales)
	F.Intrinsic.String.Build("{0}!*!{1}",V.Local.sPL,V.Local.sSales,V.Local.sSeries)
	Gui.FrmSOMain.gsPL.CreatePieChart("Sales by Product Line","P1",V.Local.sSeries)
	Gui.FrmSOMain.gsPL.SetChartProperty("LEGEND","","Visible",-1,False)
	Gui.FrmPL.gsPL.CreatePieChart("Sales by Product Line","P2",V.Local.sSeries)
	Gui.FrmPL.gsPL.SetChartProperty("LEGEND","","Visible",-1,False)

	F.Data.DataTable.RemoVeColumn("dtPL","CUST_TOTAL")
	F.Data.DataTable.RemoVeColumn("dtPL","TOTAL_SALES")

	Gui.FrmPL.GsGridControlPLStat.AddGridViewFromDataTable("gVPL","dtPL")
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","MultiSelect",True)
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","AllowSort",False)
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","AllowFilter",False)
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","OptionsDetailShowDetailTabs",False)
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","OptionsViewShowGroupPanel",False)
	Gui.FrmPL.GsGridControlPLStat.SetGridViewProperty("gVPL","Enableappearanceoddrow",True)

	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE","Caption","PL")
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE_NAME","Caption","PL Name")
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PERCENTOFSALES","Caption","% of Sales")

	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE","AllowEdit",False)
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE_NAME","AllowEdit",False)
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PERCENTOFSALES","AllowEdit",False)

	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE","MinWidth","30")
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PRODUCT_LINE_NAME","MinWidth","150")
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PERCENTOFSALES","MinWidth","50")

	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PERCENTOFSALES","CellHalignment","Far")
	Gui.FrmPL.GsGridControlPLStat.SetColumnProperty("gVPL","PERCENTOFSALES","DisplayCustomNumeric","##0.000")

	Gui.FrmPL.GsGridControlPLStat.MainView("gVPL")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Charts2.End

Program.Sub.tabSODash_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Screen.FrmSOMain!tabSODash.Tab,=,0)
		Gui.FrmSOMain.lblPercent1.Visible(False)
		Gui.FrmSOMain.lblPercent2.Visible(False)
		Gui.FrmSOMain.txtPercent.Visible(False)
		Gui.FrmSOMain.frameDecOpt.Visible(false)
		Gui.FrmSOMain.frameCutoff.Visible(false)
		Gui.FrmSOMain.cmdProcess.Visible(false)
		Gui.FrmSOMain.framePermissions.Visible(true)
		Gui.FrmSOMain.txtReady.Visible(true)
		Gui.FrmSOMain.txtOnHold.Visible(true)
	F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!tabSODash.Tab,=,1)
		Gui.FrmSOMain.lblPercent1.Visible(False)
		Gui.FrmSOMain.lblPercent2.Visible(False)
		Gui.FrmSOMain.txtPercent.Visible(False)
		Gui.FrmSOMain.frameDecOpt.Visible(false)
		Gui.FrmSOMain.frameCutoff.Visible(false)
		Gui.FrmSOMain.cmdProcess.Visible(false)
		Gui.FrmSOMain.framePermissions.Visible(true)
		Gui.FrmSOMain.txtReady.Visible(true)
		Gui.FrmSOMain.txtOnHold.Visible(true)
	F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!tabSODash.Tab,=,2)
		Gui.FrmSOMain.lblPercent1.Visible(True)
		Gui.FrmSOMain.lblPercent2.Visible(True)
		Gui.FrmSOMain.txtPercent.Visible(True)
		Gui.FrmSOMain.frameDecOpt.Visible(false)
		Gui.FrmSOMain.frameCutoff.Visible(false)
		Gui.FrmSOMain.cmdProcess.Visible(false)
	F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!tabSODash.Tab,=,3)
		Gui.FrmSOMain.lblPercent1.Visible(False)
		Gui.FrmSOMain.lblPercent2.Visible(False)
		Gui.FrmSOMain.txtPercent.Visible(False)

		Gui.FrmSOMain.frameDecOpt.Visible(true)
		Gui.FrmSOMain.frameCutoff.Visible(true)
		Gui.FrmSOMain.cmdProcess.Visible(true)
		Gui.FrmSOMain.framePermissions.Visible(false)
		Gui.FrmSOMain.txtReady.Visible(false)
		Gui.FrmSOMain.txtOnHold.Visible(false)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.tabSODash_Click.End

Program.Sub.txtPercent_LostFocus.Start
F.Intrinsic.Control.SetErrorHandler("txtPercent_LostFocus_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)

	F.Intrinsic.Control.If(V.Screen.FrmSOMain!txtPercent.Text,<>,"")
		F.Intrinsic.Control.If(V.Screen.FrmSOMain!txtPercent.Text,<>,V.Global.iPercent)
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!txtPercent.Text,>,10)
				Function.Intrinsic.UI.Msgbox("The current max is 10%.","Max")
				V.Global.iPercent.Set(10)
				Gui.FrmSOMain.txtPercent.Text(V.Global.iPercent)
			F.Intrinsic.Control.Else
				V.Global.iPercent.Set(V.Screen.FrmSOMain!txtPercent.Text)
			F.Intrinsic.Control.EndIf
			F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,1000,"False","Top Percent",False,V.Global.iPercent,-999.0,1/1/1980,12:00:00 AM)
			F.Intrinsic.Control.CallSub(charts2)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("txtPercent_LostFocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.txtPercent_LostFocus.End

Program.Sub.frameCustomer_DblClick.Start
Gui.FrmCustomer..Visible(True)
Program.Sub.frameCustomer_DblClick.End

Program.Sub.FrmCustomer_UnLoad.Start
Gui.FrmCustomer..Visible(false)
Program.Sub.FrmCustomer_UnLoad.End

Program.Sub.framePL_DblClick.Start
Gui.FrmPL..Visible(True)
Program.Sub.framePL_DblClick.End

Program.Sub.frameSalesPerson_DblClick.Start
Gui.FrmSalesPerson..Visible(True)
Program.Sub.frameSalesPerson_DblClick.End

Program.Sub.FrmSalesPerson_UnLoad.Start
Gui.FrmSalesPerson..Visible(false)
Program.Sub.FrmSalesPerson_UnLoad.End

Program.Sub.FrmPL_UnLoad.Start
Gui.FrmPL..Visible(false)
Program.Sub.FrmPL_UnLoad.End

Program.Sub.CheckPermissions.Start
F.Intrinsic.Control.SetErrorHandler("CheckPermissions_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)
v.Local.bChecked.Declare(boolean,false)
	
	'Check User Permissions: View
	Function.Global.Security.CheckUserAccessIPM(131,0,v.Global.bViewSO)'Order Entry > View > Sales Orders
	Function.Global.Security.CheckUserAccessIPM(321,0,v.Global.bViewPart)'Inventory > View > Supply and Demand
	
	F.Intrinsic.Control.If(v.Global.bViewSO,=,True,or,v.Global.bViewPart,=,True)
		Gui.FrmSOMain.optView.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			Gui.FrmSOMain.optView.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.Else
		Gui.FrmSOMain.optView.Enabled(False)
		Gui.FrmSOMain.optView.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf

	'Check User Permissions: Edit
	Function.Global.Security.CheckUserAccessIPM(132,1,v.Global.bEditSO)'Order Entry > File > Sales Orders > Open
	Function.Global.Security.CheckUserAccessIPM(371,0,v.Global.bEditPart)'Inventory > View > Supply and Demand with Edit
	F.Intrinsic.Control.If(v.Global.bEditSO,=,True,or,v.Global.bEditPart,=,True)
		Gui.FrmSOMain.optEdit.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			Gui.FrmSOMain.optEdit.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf		
	f.Intrinsic.Control.Else
		Gui.FrmSOMain.optEdit.Enabled(False)
		Gui.FrmSOMain.optEdit.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf

	'Check User Permissions: Ship
	Function.Global.Security.CheckUserAccessIPM(136,2,v.Global.bShip)'Order Entry > Transactions > Shipments > New
	F.Intrinsic.Control.If(v.Global.bShip,=,True)
		Gui.FrmSOMain.optShip.Enabled(True)
		f.Intrinsic.Control.If(v.Local.bChecked,=,False)
			Gui.FrmSOMain.optShip.Value(True)
			v.Local.bChecked.Set(True)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.Else
		Gui.FrmSOMain.optShip.Enabled(False)
		Gui.FrmSOMain.optShip.Value(False)
		v.Local.bChecked.Set(False)
	F.Intrinsic.Control.EndIf
	
	'WO Generate
	Function.Global.Security.CheckUserAccessIPM(636,1,v.Global.bGenWO)'Shop Floor Control > WOs > New
	f.Intrinsic.Control.If(v.Global.bGenWO)
		gui.FrmSOMain.optWO.Enabled(True)
'		gui.FrmSOMain.optWO.Value(True)
	f.Intrinsic.Control.Else
		gui.FrmSOMain.optWO.Enabled(False)
		gui.FrmSOMain.optWO.Value(False)
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("CheckPermissions_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.CheckPermissions.End

Program.Sub.CheckNote.Start
F.Intrinsic.Control.SetErrorHandler("CheckNote_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)

	V.Local.sSO.Declare
	V.Local.sLine.Declare
	V.Local.iRows.Declare
	V.Local.iCnt.Declare

	F.Intrinsic.Control.If(V.Args.SO_Note,=,"NOTES")
		Gui.FrmSOMain.GsGCDueSO.GetRowCount("gvDueSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCDueSO.SetCellValueByColumnName("gvDueSO","NOTES",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		Gui.FrmSOMain.GsGCAllSO.GetRowCount("gvAllSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCAllSO.SetCellValueByColumnName("gvAllSO","NOTES",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.Control.ElseIf(V.Args.SO_Note,=,"USER_4")
		Gui.FrmSOMain.GsGCDueSO.GetRowCount("gvDueSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCDueSO.SetCellValueByColumnName("gvDueSO","USER_4",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		Gui.FrmSOMain.GsGCAllSO.GetRowCount("gvAllSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCAllSO.SetCellValueByColumnName("gvAllSO","USER_4",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.Control.ElseIf(V.Args.SO_Note,=,"USER_5")
		Gui.FrmSOMain.GsGCDueSO.GetRowCount("gvDueSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCDueSO.GetCellValueByColumnName("gvDueSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCDueSO.SetCellValueByColumnName("gvDueSO","USER_5",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		Gui.FrmSOMain.GsGCAllSO.GetRowCount("gvAllSO",V.Local.iRows)
		F.Intrinsic.Math.Sub(V.Local.iRows,1,V.Local.iRows)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.iRows,1)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Order_NO",V.Local.iCnt,V.Local.sSO)
			Gui.FrmSOMain.GsGCAllSO.GetCellValueByColumnName("gvAllSO","Record_NO",V.Local.iCnt,V.Local.sLine)
			F.Intrinsic.Control.If(V.Local.sSO,=,V.Args.SO)
			F.Intrinsic.Control.AndIf(V.Local.sLine,=,V.Args.Line)
				Gui.FrmSOMain.GsGCAllSO.SetCellValueByColumnName("gvAllSO","USER_5",V.Local.iCnt,V.Args.Note)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("CheckNote_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.CheckNote.End

Program.Sub.CheckTable.Start
F.Intrinsic.Control.SetErrorHandler("CheckTable_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)

	V.Local.bExists.Declare(Boolean)

	Gui.FrmSOMain.lblStatus.Caption("Checking Database Table....")

	F.ODBC.Connection!con.TableExists("GAB_6404_SO_NOTES",V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists,=,False)
		F.ODBC.Connection!con.Execute("CREATE TABLE GAB_6404_SO_NOTES(SO CHAR(7),SOLINE CHAR(3),NOTES LONGVARCHAR);")
		F.ODBC.Connection!con.Execute("CREATE INDEX GAB_6404_SO_NOTES01 USING 1 ON GAB_6404_SO_NOTES(SO);")
		F.ODBC.Connection!con.Execute("CREATE INDEX GAB_6404_SO_NOTES02 USING 2 ON GAB_6404_SO_NOTES(SOLINE);")
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("CheckTable_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: PPT_OE_OpenOrderReview_GSS_Var1.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf
Program.Sub.CheckTable.End

Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/login-customer","","",0)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.CheckLongPart.Start
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
Program.Sub.CheckLongPart.End

Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	V.Local.bFile.Declare
	
	'Delete old registry records
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALLSO",6404,0,5,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 6404 And Seq < 1000;")
		F.ODBC.Connection!common.Close
	F.Intrinsic.Control.EndIf

'	'GVAllSO
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVALLSO",6404,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		Gui.FrmSOMain.GsGCAllSO.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
'	'GVDueSO
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVDUESO",6404,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		Gui.FrmSOMain.GsGCDueSO.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
'	
'		'GvXStatus
'	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVXSTATUS",6404,1000,6,"",V.Local.sSerialize)
'	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
'		Gui.FrmSOMain.GsGCXStatus.Deserialize(V.Local.sSerialize)
'	F.Intrinsic.Control.EndIf
	
	'tab A
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvTabA",6404,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmSOMain.GsgcTabA.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'tab B
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvTabB",6404,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmSOMain.GsgcTabB.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'tab C
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvTabC",6404,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmSOMain.GsgcTabC.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	'tab D
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvTabD",6404,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.FrmSOMain.GsgcTabD.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.MenuClickNew.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_ORDER_HEADER;",V.Local.iRowCnt)

	F.Global.General.CallWrapperASync(200000,"*!*ZDR*!*!*!N!*!*!*ZDR*!*")

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_ORDER_HEADER;",V.Local.iRowCnt2)

	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		F.Intrinsic.Control.CallSub(cmdrefresh_click)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNew.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sForm.Declare
	V.Local.sControl.Declare
	V.Local.bChart.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXXSTATUS")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("GsGCXStatus")
		F.Intrinsic.Control.Case("CTXPLS")
			V.Local.sForm.Set("frmTotalsPL")
			V.Local.sControl.Set("GsGCPLs")
		F.Intrinsic.Control.Case("CTXALL")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("GsGCAllSO")
		F.Intrinsic.Control.Case("CTXLATE")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("GsGCDueSO")
		F.Intrinsic.Control.Case("CTXCUSTOMER")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("gsCustomer")
			V.Local.bChart.Set(True)
		F.Intrinsic.Control.Case("CTXSP")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("gsSalesPerson")
			V.Local.bChart.Set(True)
		F.Intrinsic.Control.Case("CTXPL")
			V.Local.sForm.Set("FrmSOMain")
			V.Local.sControl.Set("gsPL")
			V.Local.bChart.Set(True)
		F.Intrinsic.Control.Case("CTXCUSTOMER2DATA")
			V.Local.sForm.Set("FrmCustomer")
			V.Local.sControl.Set("GsGridControlCustomerStat")
		F.Intrinsic.Control.Case("CTXCUSTOMER2")
			V.Local.sForm.Set("FrmCustomer")
			V.Local.sControl.Set("gsCustomer")
			V.Local.bChart.Set(True)
		F.Intrinsic.Control.Case("CTXSP2DATA")
			V.Local.sForm.Set("FrmSalesPerson")
			V.Local.sControl.Set("GsGridControlSalesPersonStat")
		F.Intrinsic.Control.Case("CTXSP2")
			V.Local.sForm.Set("FrmSalesPerson")
			V.Local.sControl.Set("gsSalesperson")
			V.Local.bChart.Set(True)
		F.Intrinsic.Control.Case("CTXPL2DATA")
			V.Local.sForm.Set("FrmPL")
			V.Local.sControl.Set("GsGridControlPLStat")
		F.Intrinsic.Control.Case("CTXPL2")
			V.Local.sForm.Set("FrmPL")
			V.Local.sControl.Set("gsPL")
			V.Local.bChart.Set(True)
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.If(V.Local.bChart,=,False)
		F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
		F.Intrinsic.Control.If(V.Local.bExcel)
			F.Intrinsic.String.Build("{0}\GAB_6404_{1}_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}\GAB_6404_{1}_Export.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\{1}.jpg",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sFileExport)
		Gui.[V.Local.sForm].[V.Local.sControl].ImageToFile("JPEG",V.Local.sFileExport)
		F.Intrinsic.Task.ShellExec(0,"Open",V.Local.sFileExport,"","",0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXALL")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALLSO",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXLATE")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVDUESO",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
		F.Intrinsic.Control.Case("CTXXSTATUS")
			V.Global.bLoadData.Set(False)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVXSTATUS",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadDtXStatus)
	F.Intrinsic.Control.EndSelect
	
	V.Global.bLoadData.Set(False)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'GVAllSO
'	Gui.FrmSOMain.GsGCAllSO.Serialize("gvAllSO",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVALLSO",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'	'GVDueSO
'	Gui.FrmSOMain.GsGCDueSO.Serialize("GVDueSO",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVDUESO",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

'	'GvXStatus
'	Gui.FrmSOMain.GsGCXStatus.Serialize("gvXStatus",V.Local.sSerialize)
'	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVXSTATUS",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

	'tab A
	Gui.FrmSOMain.GsgcTabA.Serialize("gvTabA",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvTabA",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	'tab B
	Gui.FrmSOMain.GsgcTabB.Serialize("gvTabB",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvTabB",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

	'tab C
	Gui.FrmSOMain.GsgcTabC.Serialize("gvTabC",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvTabC",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	'tab D
	Gui.FrmSOMain.GsgcTabD.Serialize("gvTabD",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvTabD",6404,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)


	
	
	F.Intrinsic.Control.Catch
'		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
'		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.bRet.Declare
	
	Gui.FrmSOMain..ContextMenuCreate("ctxAll")
	Gui.FrmSOMain.GsGCAllSO.ContextMenuAttach("ctxAll")
	Gui.FrmSOMain..ContextMenuAddItem("ctxAll","Refresh",0,"Refresh")
	Gui.FrmSOMain..ContextMenuAddItem("ctxAll","Export",0,"Export")	
	Function.Global.Security.CheckUserAccessIPM(132,1,v.Local.bRet)	
	F.Intrinsic.Control.If(v.Local.bRet)
		Gui.FrmSOMain..ContextMenuAddItem("ctxAll","New",0,"New Sales Order")
		Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAll","New","MenuClickNew")
	f.Intrinsic.Control.EndIf	
	Gui.FrmSOMain..ContextMenuAddItem("ctxAll","ResetColumns",0,"Reset Columns")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAll","Refresh","MenuClickRefresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAll","Export","MenuClickExport")	
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAll","ResetColumns","MenuClickResetColumns")
	
	
	'6404 MOD
	'-----------------------------------------
	'Tab A
	gui.FrmSOMain..ContextMenuCreate("ctxAAAA")
	gui.FrmSOMain..ContextMenuAddItem("ctxAAAA", "Export", 0, "Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAAAA","Export","ExportToExcel")	
	gui.FrmSOMain..ContextMenuAddItem("ctxAAAA", "Refresh", 0, "Refresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxAAAA","Refresh","cmdRefreshRent_Click")	
	gui.FrmSOMain.GsgcTabA.ContextMenuAttach("ctxAAAA")
	
		'Tab B
	gui.FrmSOMain..ContextMenuCreate("ctxBBBB")
	gui.FrmSOMain..ContextMenuAddItem("ctxBBBB", "Export", 0, "Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxBBBB","Export","ExportToExcel")	
	gui.FrmSOMain..ContextMenuAddItem("ctxBBBB", "Refresh", 0, "Refresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxBBBB","Refresh","cmdRefreshRent_Click")	
	gui.FrmSOMain.GsgcTabB.ContextMenuAttach("ctxBBBB")
	
		'Tab C
	gui.FrmSOMain..ContextMenuCreate("ctxCCCC")
	gui.FrmSOMain..ContextMenuAddItem("ctxCCCC", "Export", 0, "Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxCCCC","Export","ExportToExcel")	
	gui.FrmSOMain..ContextMenuAddItem("ctxCCCC", "Refresh", 0, "Refresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxCCCC","Refresh","cmdRefreshRent_Click")	
	gui.FrmSOMain.GsgcTabC.ContextMenuAttach("ctxCCCC")
	
		'Tab D
	gui.FrmSOMain..ContextMenuCreate("ctxDDDD")
	gui.FrmSOMain..ContextMenuAddItem("ctxDDDD", "Export", 0, "Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxDDDD","Export","ExportToExcel")	
	gui.FrmSOMain..ContextMenuAddItem("ctxDDDD", "Refresh", 0, "Refresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxDDDD","Refresh","cmdRefreshRent_Click")	
	gui.FrmSOMain.GsgcTabD.ContextMenuAttach("ctxDDDD")
	'-----------------------------------------
	
	Gui.FrmSOMain..ContextMenuCreate("ctxLate")
	Gui.FrmSOMain.GsGCDueSO.ContextMenuAttach("ctxLate")
	Gui.FrmSOMain..ContextMenuAddItem("ctxLate","Refresh",0,"Refresh")
	Gui.FrmSOMain..ContextMenuAddItem("ctxLate","Export",0,"Export")
	F.Intrinsic.Control.If(v.Local.bRet)
		Gui.FrmSOMain..ContextMenuAddItem("ctxLate","New",0,"New Sales Order")
		Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxLate","New","MenuClickNew")
	f.Intrinsic.Control.EndIf
	Gui.FrmSOMain..ContextMenuAddItem("ctxLate","ResetColumns",0,"Reset Columns")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxLate","Refresh","MenuClickRefresh")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxLate","Export","MenuClickExport")
	
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxLate","ResetColumns","MenuClickResetColumns")
	
	Gui.FrmSOMain..ContextMenuCreate("ctxCustomer")
	Gui.FrmSOMain.gsCustomer.ContextMenuAttach("ctxCustomer")
	Gui.FrmSOMain..ContextMenuAddItem("ctxCustomer","Export",0,"Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxCustomer","Export","MenuClickExport")
	
	Gui.FrmSOMain..ContextMenuCreate("ctxSP")
	Gui.FrmSOMain.gsSalesPerson.ContextMenuAttach("ctxSP")
	Gui.FrmSOMain..ContextMenuAddItem("ctxSP","Export",0,"Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxSP","Export","MenuClickExport")
	
	Gui.FrmSOMain..ContextMenuCreate("ctxPL")
	Gui.FrmSOMain.gsPL.ContextMenuAttach("ctxPL")
	Gui.FrmSOMain..ContextMenuAddItem("ctxPL","Export",0,"Export")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxPL","Export","MenuClickExport")
	
	Gui.FrmCustomer..ContextMenuCreate("ctxCustomer2Data")
	Gui.FrmCustomer.GsGridControlCustomerStat.ContextMenuAttach("ctxCustomer2Data")
	Gui.FrmCustomer..ContextMenuAddItem("ctxCustomer2Data","Export",0,"Export")
	Gui.FrmCustomer..ContextMenuSetItemEventHandler("ctxCustomer2Data","Export","MenuClickExport")
	
	Gui.FrmCustomer..ContextMenuCreate("ctxCustomer2")
	Gui.FrmCustomer.gsCustomer.ContextMenuAttach("ctxCustomer2")
	Gui.FrmCustomer..ContextMenuAddItem("ctxCustomer2","Export",0,"Export")
	Gui.FrmCustomer..ContextMenuSetItemEventHandler("ctxCustomer2","Export","MenuClickExport")
	
	Gui.FrmSalesPerson..ContextMenuCreate("ctxSP2Data")
	Gui.FrmSalesPerson.GsGridControlSalesPersonStat.ContextMenuAttach("ctxSP2Data")
	Gui.FrmSalesPerson..ContextMenuAddItem("ctxSP2Data","Export",0,"Export")
	Gui.FrmSalesPerson..ContextMenuSetItemEventHandler("ctxSP2Data","Export","MenuClickExport")
	
	Gui.FrmSalesPerson..ContextMenuCreate("ctxSP2")
	Gui.FrmSalesPerson.gsSalesperson.ContextMenuAttach("ctxSP2")
	Gui.FrmSalesPerson..ContextMenuAddItem("ctxSP2","Export",0,"Export")
	Gui.FrmSalesPerson..ContextMenuSetItemEventHandler("ctxSP2","Export","MenuClickExport")
	
	Gui.FrmPL..ContextMenuCreate("ctxPL2Data")
	Gui.FrmPL.GsGridControlPLStat.ContextMenuAttach("ctxPL2Data")
	Gui.FrmPL..ContextMenuAddItem("ctxPL2Data","Export",0,"Export")
	Gui.FrmPL..ContextMenuSetItemEventHandler("ctxPL2Data","Export","MenuClickExport")
	
	Gui.FrmPL..ContextMenuCreate("ctxPL2")
	Gui.FrmPL.gsPL.ContextMenuAttach("ctxPL2")
	Gui.FrmPL..ContextMenuAddItem("ctxPL2","Export",0,"Export")
	Gui.FrmPL..ContextMenuSetItemEventHandler("ctxPL2","Export","MenuClickExport")
	
	Gui.FrmSOMain..ContextMenuCreate("ctxXStatus")
	Gui.FrmSOMain.GsGCXStatus.ContextMenuAttach("ctxXStatus")
	Gui.FrmSOMain..ContextMenuAddItem("ctxXStatus","Refresh",0,"Refresh")
	Gui.FrmSOMain..ContextMenuAddItem("ctxXStatus","TotalsPL",0,"Totals by PL")
	Gui.FrmSOMain..ContextMenuAddItem("ctxXStatus","Export",0,"Export")
	Gui.FrmSOMain..ContextMenuAddItem("ctxXStatus","ResetColumns",0,"Reset Columns")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxXStatus","Refresh","LoadDtXStatus")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxXStatus","TotalsPL","MenuClickTotalsPL")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxXStatus","Export","MenuClickExport")
	Gui.FrmSOMain..ContextMenuSetItemEventHandler("ctxXStatus","ResetColumns","MenuClickResetColumns")
	
	Gui.frmTotalsPL..ContextMenuCreate("ctxPLs")
	Gui.frmTotalsPL.GsGCPLs.ContextMenuAttach("ctxPLs")
	Gui.frmTotalsPL..ContextMenuAddItem("ctxPLs","Export",0,"Export")
	Gui.frmTotalsPL..ContextMenuSetItemEventHandler("ctxPLs","Export","MenuClickExport")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.SetTabAnchors.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right

	'Gui.FrmSOMain.GsGCAllSO.Anchor(15)
	'Gui.FrmSOMain.GsGCDueSO.Anchor(15)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.SetTabAnchors.End

Program.Sub.chkCutoff_Change.Start
Program.Sub.chkCutoff_Change.End

Program.Sub.chkCutoff_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Screen.FrmSOMain!chkCutoff.Value,=,1)
		Gui.FrmSOMain.dtpCutoff.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.FrmSOMain.dtpCutoff.Enabled(False)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.chkCutoff_Click.End

Program.Sub.cmdDelete_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iRet.Declare
	
	F.Intrinsic.UI.Msgbox("Remove all records?","Delete",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,=,6)
		F.ODBC.Connection!con.Execute("Delete From INV_CROSS_REF Where Part+Location Not In (Select Part+Location From Inventory_Mstr);")
		F.Intrinsic.UI.Msgbox("Records deleted. Please restart the program.","Delete")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(frmChkXRef_UnLoad)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdDelete_Click.End

Program.Sub.frmChkXRef_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
	
Program.Sub.frmChkXRef_UnLoad.End

Program.Sub.CheckXRef.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Data.DataTable.CreateFromSQL("dtChkXRef","con","Select PART,LOCATION From INV_CROSS_REF Where Part+Location Not In (Select Part+Location From Inventory_Mstr);",True)
	F.Intrinsic.Control.If(V.DataTable.dtChkXRef.RowCount,<>,0)
		Gui.frmChkXRef.GsGCChkXRef.AddGridviewFromDatatable("gvChkXRef","dtChkXRef")
		Gui.frmChkXRef.GsGCChkXRef.SuspendLayout()
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","MultiSelect",True)
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","AllowSort",False)
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","AllowFilter",False)
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","ShowGroupPanel",False)
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","ShowDetailTabs",False)
		Gui.frmChkXRef.GsGCChkXRef.SetGridViewProperty("gvChkXRef","EnableAppearanceOddRow",True)
		
		Gui.frmChkXRef.GsGCChkXRef.ResumeLayout()
		Gui.frmChkXRef.GsGCChkXRef.MainView("gvChkXRef")
		
		F.Intrinsic.UI.Msgbox("You have records in your Inventory Cross Reference file that are missing from the Inventory Master file. You will have to remove these or add valid records before this project will work for you. Review Parts on next screen.","Error")
		Gui.frmChkXRef..Show
		Gui.frmChkXRef..WaitForDismiss
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
	
Program.Sub.CheckXRef.End

Program.Sub.CheckDecOpts.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iRet.Declare
	V.Local.iCnt.Declare
	V.Local.sControl.Declare
	
	F.Intrinsic.Control.BlockEvents
	
	V.Local.sControl.Set("ddlDecQty")
	F.Intrinsic.Control.For(V.Local.iCnt,0,1,1)
		F.Intrinsic.Control.If(V.Local.iCnt,=,1)
			V.Local.sControl.Set("ddlDecDoll")
		F.Intrinsic.Control.EndIf
		Gui.FrmSOMain.[V.Local.sControl].AddItem("0",0)
		Gui.FrmSOMain.[V.Local.sControl].AddItem("2",1)
		Gui.FrmSOMain.[V.Local.sControl].AddItem("4",2)
		Gui.FrmSOMain.[V.Local.sControl].AddItem("6",3)
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,2000,1,6,V.Local.iRet)
	Gui.FrmSOMain.ddlDecQty.Text(V.Local.iRet)
	
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,2100,1,6,V.Local.iRet)
	Gui.FrmSOMain.ddlDecDoll.Text(V.Local.iRet)
	
	F.Intrinsic.Control.UnBlockEvents

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
	
Program.Sub.CheckDecOpts.End

Program.Sub.ddlDec_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,2000,False,"Qty Decimals",True,V.Screen.FrmSOMain!ddlDecQty.Value,-999.0,1/1/1980,12:00:00 AM)
	F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"6404",6404,2100,False,"Dollar Decimals",True,V.Screen.FrmSOMain!ddlDecDoll.Value,-999.0,1/1/1980,12:00:00 AM)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.ddlDec_Click.End

Program.Sub.LoadDtXStatus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.dCutoffDate.Declare
	V.Local.sPart.Declare
	V.Local.sActiveFilterString.Declare

	
	Gui.FrmSOMain.lblStatus.Visible(True)
	Gui.FrmSOMain.pbStatus.Visible(True)
	Gui.FrmSOMain.pbStatus.Min(0)
	Gui.FrmSOMain.pbStatus.Max(100)
'	
'	F.Intrinsic.Control.If(V.Global.bLoadData)
'		F.Intrinsic.Control.CallSub(Serialize)
'	F.Intrinsic.Control.EndIf
	V.Global.bLoadData.Set(True)
	
	F.Intrinsic.Control.If(V.DataTable.dtXStatus.Exists)
		F.Data.DataTable.Close("dtXStatus")
		F.Data.DataTable.Close("dtAddlInfo")
		F.Data.DataTable.Close("dtNew")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FrmSOMain!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtXStatus","con","Select ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand,A.Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price, C.Cost, C.Matl, C.Labor, C.Ovhd, C.Outs, C.Freight, C.Oth,A.Qty_OnHand*A.Amt_Price As Ext_Price,A.Qty_OnHand*C.Cost As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Order By A.Part,A.Location;",True)
		Gui.FrmSOMain.pbStatus.Value(50)
	F.Intrinsic.Control.Else
		V.Local.dCutoffDate.Set(V.Screen.FrmSOMain!dtpCutoff.Value)
		'Find Part+Loc with data after the Cutoff
		F.Intrinsic.String.Build("Select Distinct '{1}' as TerminalNo, Part+Location as PartLoc From V_Inventory_Hist Where Date_History > '{0}' And Part <> '' And SubString(Part,17,1) <> '*' Order By Part,Location;",V.Local.dCutoffDate.PervasiveDate,V.Caller.Terminal,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtPartList","con",V.Local.sSQL)
'		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sPart)
'		F.Intrinsic.String.Replace(V.Local.sPart.PSQLFriendly,"#$#","','",V.Local.sPart)
		F.Intrinsic.String.Build("delete from GCG_INV_XSTAT_TEMP where TerminalNo = '{0}'",V.Caller.Terminal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Data.DataTable.SaveToDB("dtPartList","con","GCG_INV_XSTAT_TEMP",,128)
		F.Data.DataTable.Close("dtPartList")
		Gui.FrmSOMain.pbStatus.Value(5)
		'Get information for the Part+Loc above
		F.Intrinsic.String.Build("Select Distinct ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description,RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc,RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,Cast(0 As Numeric(12,4)) As Qty_OnHand,Cast(0 As Numeric(12,4)) As Qty_Reorder,Cast(0 As Numeric(12,4)) As OnOrder,Cast(0 As Numeric(12,4)) As Qty_Required,Cast(0 As Numeric(12,4)) As Usage_Last_12_Mos,A.Amt_Price As Amt_Price,Cast(0 As Numeric(12,4)) As Cost,Cast(0 As Numeric(12,4)) As Matl,Cast(0 As Numeric(12,4)) As Labor,Cast(0 As Numeric(12,4)) As Ovhd,Cast(0 As Numeric(12,4)) As Outs,Cast(0 As Numeric(12,4)) As Freight,Cast(0 As Numeric(12,4)) As Oth,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Left Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Left Join V_Inventory_Hist C On A.Part = C.Part And A.Location = C.Location Left Join V_Inv_Extra_Text D On A.Part = D.Part Where C.Date_History <= '{0}' And A.Part+A.Location In (select PartLoc from GCG_INV_XSTAT_TEMP where TerminalNo = '{1}') Order By A.Part,A.Location;",V.Local.dCutoffDate.PervasiveDate,V.Caller.Terminal,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtX1","con",V.Local.sSQL,True)
'		f.Intrinsic.Control.If(v.Global.bLongPart)
			'F.Data.DataTable.AddDisplayPartColumn("dtX1",0,"PART","DISPLAY_PART")
'		f.Intrinsic.Control.Else
'			F.Data.DataTable.CopyColumn("dtX1","PART","DISPLAY_PART")
'		f.Intrinsic.Control.EndIf	
		Gui.FrmSOMain.pbStatus.Value(15)
		'Get Inv History information for the Part+Loc above
		F.Intrinsic.String.Build("Select Part+Location As PartLoc,Part,Location,Date_History,Inv_Hist_Time,New_OnHand,New_Inv_Cost,New_Matl,New_Labr,New_Ovhd,New_Outs,New_Frgt,New_Oth From V_Inventory_Hist Where Date_History <= '{0}' And Part+Location In (select PartLoc from GCG_INV_XSTAT_TEMP where TerminalNo = '{1}') Order By Part,Location,Date_Action Desc,Inv_Hist_Time Desc;",V.Local.dCutoffDate.PervasiveDate,V.Caller.Terminal,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXdic","con",V.Local.sSQL,True)
		Gui.FrmSOMain.pbStatus.Value(20)
		'Date_History
		F.Data.Dictionary.CreateFromDataTable("dDateHistory","dtXdic","PartLoc","Date_History")
		F.Data.Dictionary.SetDefaultReturn("dDateHistory",1/1/1900)
		F.Data.DataTable.FillFromDictionary("dtX1","dDateHistory","PartLoc","Date_History")
		F.Data.Dictionary.Close("dDateHistory")
		Gui.FrmSOMain.pbStatus.Value(25)
		'Qty_OnHand
		F.Data.Dictionary.CreateFromDataTable("dNewOnHand","dtXdic","PartLoc","New_OnHand")
		F.Data.Dictionary.SetDefaultReturn("dNewOnHand",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOnHand","PartLoc","Qty_OnHand")
		F.Data.Dictionary.Close("dNewOnHand")
		Gui.FrmSOMain.pbStatus.Value(30)
		'Cost
		F.Data.Dictionary.CreateFromDataTable("dNewInvCost","dtXdic","PartLoc","New_Inv_Cost")
		F.Data.Dictionary.SetDefaultReturn("dNewInvCost",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewInvCost","PartLoc","Cost")
		F.Data.Dictionary.Close("dNewInvCost")
		Gui.FrmSOMain.pbStatus.Value(35)
		'Matl
		F.Data.Dictionary.CreateFromDataTable("dNewMatl","dtXdic","PartLoc","New_Matl")
		F.Data.Dictionary.SetDefaultReturn("dNewMatl",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewMatl","PartLoc","Matl")
		F.Data.Dictionary.Close("dNewMatl")
		Gui.FrmSOMain.pbStatus.Value(40)
		'Labor
		F.Data.Dictionary.CreateFromDataTable("dNewLabr","dtXdic","PartLoc","New_Labr")
		F.Data.Dictionary.SetDefaultReturn("dNewLabr",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewLabr","PartLoc","Labor")
		F.Data.Dictionary.Close("dNewLabr")
		Gui.FrmSOMain.pbStatus.Value(45)
		'Ovhd
		F.Data.Dictionary.CreateFromDataTable("dNewOvhd","dtXdic","PartLoc","New_Ovhd")
		F.Data.Dictionary.SetDefaultReturn("dNewOvhd",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOvhd","PartLoc","Ovhd")
		F.Data.Dictionary.Close("dNewOvhd")
		Gui.FrmSOMain.pbStatus.Value(50)
		'Outs
		F.Data.Dictionary.CreateFromDataTable("dNewOuts","dtXdic","PartLoc","New_Outs")
		F.Data.Dictionary.SetDefaultReturn("dNewOuts",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOuts","PartLoc","Outs")
		F.Data.Dictionary.Close("dNewOuts")
		Gui.FrmSOMain.pbStatus.Value(55)
		'Freight
		F.Data.Dictionary.CreateFromDataTable("dNewFrgt","dtXdic","PartLoc","New_Frgt")
		F.Data.Dictionary.SetDefaultReturn("dNewFrgt",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewFrgt","PartLoc","Freight")
		F.Data.Dictionary.Close("dNewFrgt")
		Gui.FrmSOMain.pbStatus.Value(60)
		'Oth
		F.Data.Dictionary.CreateFromDataTable("dNewOth","dtXdic","PartLoc","New_Oth")
		F.Data.Dictionary.SetDefaultReturn("dNewOth",0.0)
		F.Data.DataTable.FillFromDictionary("dtX1","dNewOth","PartLoc","Oth")
		F.Data.Dictionary.Close("dNewOth")
		Gui.FrmSOMain.pbStatus.Value(65)
		'Ext_Price
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Price",Float,"Qty_OnHand*Amt_Price")
		Gui.FrmSOMain.pbStatus.Value(70)
		'Ext_Cost
		F.Data.DataTable.AddExpressionColumn("dtX1","Ext_Cost",Float,"Qty_OnHand*Cost")
		Gui.FrmSOMain.pbStatus.Value(75)
		
		'Get Inventory Master information for parts not listed in the Part+Loc above
		F.Intrinsic.String.Build("Select ' ' As Plus,' ' As DocCntrl,A.Part+A.Location As PartLoc,COALESCE(A.Part,'') As Part,RTrim(A.Location) As Location,RTrim(A.Description) As Description, RTrim(RTrim(B.Description_2)+' '+RTrim(B.Description_3)) as AltDesc, RTrim(D.Text) As ExtraDesc,RTrim(A.Product_Line) As Product_Line,Case B.Code_Source When 'P' Then 'PS' When 'J' Then 'PJ' When '' Then 'PJ' When 'M' Then 'MS' When 'F' Then 'MJ' Else B.Code_Source End As Code_Source,A.UM_Inventory,A.Time_Material_Lead,RTrim(A.Code_Sort) As Code_Sort,RTrim(A.Bin) As Bin,A.Code_ABC,Cast(Null As Date) As Date_History,A.Qty_OnHand As Qty_OnHand,A.Qty_Reorder As Qty_Reorder,A.Qty_OnOrder_PO+A.Qty_OnOrder_WO As OnOrder,A.Qty_Required As Qty_Required,A.Qty_Usage_Mo_01+A.Qty_Usage_Mo_02+A.Qty_Usage_Mo_03+A.Qty_Usage_Mo_04+A.Qty_Usage_Mo_05+A.Qty_Usage_Mo_06+A.Qty_Usage_Mo_07+A.Qty_Usage_Mo_08+A.Qty_Usage_Mo_09+A.Qty_Usage_Mo_10+A.Qty_Usage_Mo_11+A.Qty_Usage_Mo_12 As Usage_Last_12_Mos,A.Amt_Price As Amt_Price, C.Cost As Cost, C.Matl As Matl, C.Labor As Labor, C.Ovhd As Ovhd, C.Outs As Outs, C.Freight As Freight, C.Oth As Oth,Cast(A.Qty_OnHand*A.Amt_Price As Float) As Ext_Price,Cast(A.Qty_OnHand*C.Cost As Float) As Ext_Cost,Cast(Case When Flag_Lot = '' Or Flag_Lot = 'N' Then 0 Else 1 End As Bit) As Flag_Lot,Cast(Case When Flag_Drop = '' Or Flag_Drop = 'N' Then 0 Else 1 End As Bit) As Flag_Drop,Cast(Case When Flag_Serialize = '' Or Flag_Serialize = 'N' Then 0 Else 1 End As Bit) As Flag_Serialize,Cast(Case When Obsolete_Flag = '' Or Obsolete_Flag = 'N' Then 0 Else 1 End As Bit) As Obsolete_Flag,Cast(Case When Flag_Inactive = '' Or Flag_Inactive = 'N' Then 0 Else 1 End As Bit) As Flag_Inactive,RTrim(B.Name_Vendor) As Name_Vendor,RTrim(B.Text_Info1) As Text_Info1,RTrim(B.Text_Info2) As Text_Info2,'' as display_part From V_Inventory_Mstr A Join V_Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Join V_Inventory_Cost C On A.Part = C.Part And A.Location = C.Locn Left Join V_Inv_Extra_Text D On A.Part = D.Part Where A.Part+A.Location Not In (select PartLoc from GCG_INV_XSTAT_TEMP where TerminalNo = '{0}') Order By A.Part,A.Location;",V.Caller.Terminal,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtXStatus","con",V.Local.sSQL,True)
		'f.Intrinsic.Control.If(v.Global.bLongPart)
			'F.Data.DataTable.AddDisplayPartColumn("dtXStatus",0,"PART","DISPLAY_PART")
'		f.Intrinsic.Control.Else
			'F.Data.DataTable.CopyColumn("dtXStatus","PART","DISPLAY_PART")
'		f.Intrinsic.Control.EndIf
		Gui.FrmSOMain.pbStatus.Value(80)
		'Merge dtX1 and dtXStatus
		F.Data.DataTable.Merge("dtX1","dtXStatus",True,3)
		F.Data.DataTable.Close("dtX1")
		F.Data.DataTable.Close("dtXdic")
	F.Intrinsic.Control.EndIf
	
	'Pull and add additional information information
	F.Data.DataTable.CreateFromSQL("dtAddlInfo","con","Select COALESCE(Part,'') As Part,RTrim(Location) As Location,UM_Purchasing,Factor_Conversion As PurchConvFactor,Consump_Conv As CompsConvFactor,Qty_Safety,Qty_OnOrder_PO,Qty_OnOrder_WO,LBS As Weight,Length,Width,Density_Raw_Matl As Density,Thickness,Code_Rm_Shape As Shape,Wt_Per_Foot,Requires_Insp,HM_Flag As HazMatlFlag,Tax_Exempt_Flg,Case When Part_Create_Date = '1900-01-01' Then Null Else Part_Create_Date End As Part_Create_Date,Part_Create_User,Qty_Order,Part_Price_Code From V_Inventory_All Order By Part,Location;",True)
	
	F.Data.Linq.Join("Leftjoin","DataTable","dtXStatus*!*XS","DataTable","dtAddlInfo*!*AI","XS.Part=AI.Part and XS.Location=AI.Location","XS.Plus*!*XS.DocCntrl*!*XS.Part*!*XS.DISPLAY_PART*!*XS.Location*!*XS.Description*!*XS.AltDesc*!*XS.ExtraDesc*!*XS.Product_Line*!*XS.Code_Source*!*XS.UM_Inventory*!*XS.Time_Material_Lead*!*XS.Code_Sort*!*XS.Bin*!*XS.Code_ABC*!*XS.Date_History*!*XS.Qty_OnHand*!*XS.Qty_Reorder*!*XS.OnOrder*!*XS.Qty_Required*!*XS.Usage_Last_12_Mos*!*XS.Amt_Price*!*XS.Cost*!*XS.Matl*!*XS.Labor*!*XS.Ovhd*!*XS.Outs*!*XS.Freight*!*XS.Oth*!*XS.Ext_Price*!*XS.Ext_Cost*!*XS.Flag_Lot*!*XS.Flag_Drop*!*XS.Flag_Serialize*!*XS.Obsolete_Flag*!*XS.Flag_Inactive*!*XS.Name_Vendor*!*XS.Text_Info1*!*XS.Text_Info2*!*AI.PART_PRICE_CODE*!*AI.UM_Purchasing*!*AI.PurchConvFactor*!*AI.CompsConvFactor*!*AI.Qty_Safety*!*AI.Qty_OnOrder_PO*!*AI.Qty_OnOrder_WO*!*AI.Weight*!*AI.Length*!*AI.Width*!*AI.Density*!*AI.Thickness*!*AI.Shape*!*AI.Wt_Per_Foot*!*AI.Requires_Insp*!*AI.HazMatlFlag*!*AI.Tax_Exempt_Flg*!*AI.Part_Create_Date*!*AI.Part_Create_User*!*AI.Qty_Order*!*XS.PartLoc","","","XS.display_Part","dtNew",True)
	

		'Router Complete 
		F.Data.DataTable.AddColumn("dtNew","RTR_Complete",Boolean,False)
		F.Data.Dictionary.CreateFromSQL("dXRef","con","select RTR_NUM,Complete from v_ROUTER_SUPP_HDR ;")
		F.Data.Dictionary.SetDefaultReturn("dXRef",False)
		F.Data.DataTable.FillFromDictionary("dtNew","dXRef","Part","RTR_Complete")
		F.Data.Dictionary.Close("dXRef")
		
	'Cross Reference (XRef)
		F.Data.DataTable.AddColumn("dtNew","XRef",Boolean,False)
		F.Data.Dictionary.CreateFromSQL("dXRef","con","Select Part+Location As PartLoc,Cast(1 As Bit) As XRef From V_Inv_Cross_Ref Where Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';")
		F.Data.Dictionary.SetDefaultReturn("dXRef",False)
		F.Data.DataTable.FillFromDictionary("dtNew","dXRef","PartLoc","XRef")
		F.Data.Dictionary.Close("dXRef")
	
	'Inventory Status
	'InTransit
		F.Data.DataTable.AddColumn("dtNew","InTransit",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+From_Location As PartLoc,Sum(Qty_Transfer) As Qty_Transfer From V_Inv_In_Transit Where Qty_Transfer <> 0 Group By Part,From_Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InTransit")
		F.Data.Dictionary.Close("dInvStat")
	'InInspection
		F.Data.DataTable.AddColumn("dtNew","InInspection",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Recd_Not_Insp) As Qty_Recd_Not_Insp From V_PO_Lines Where Flag_Recv_Close <> 'Y' And Qty_Recd_Not_Insp <> 0 Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InInspection")
		F.Data.Dictionary.Close("dInvStat")
	'InQuality
		F.Data.DataTable.AddColumn("dtNew","InQuality",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location As PartLoc,Sum(Qty_Remaining) As Qty_Remaining From V_Quality Where Qty_Remaining <> 0 Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","InQuality")
		F.Data.Dictionary.Close("dInvStat")
	'Consigned
		F.Data.DataTable.AddColumn("dtNew","Consigned",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'G' Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Consigned")
		F.Data.Dictionary.Close("dInvStat")
	'Allocated
		F.Data.DataTable.AddColumn("dtNew","Allocated",Float,0)
		F.Data.Dictionary.CreateFromSQL("dInvStat","con","Select Part+Location as PartLoc,Sum(Quantity) As Quantity From V_Item_Master Where Allocated = 'Y' Group By Part,Location;")
		F.Data.Dictionary.SetDefaultReturn("dInvStat",0.0)
		F.Data.DataTable.FillFromDictionary("dtNew","dInvStat","PartLoc","Allocated")
		F.Data.Dictionary.Close("dInvStat")
	'Net
		F.Data.DataTable.AddExpressionColumn("dtNew","Net",Float,"([Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO])-[Qty_Required]")
	'TotalQuantity
		F.Data.DataTable.AddExpressionColumn("dtNew","TotalQuantity",Float,"[Qty_OnHand]+[Qty_OnOrder_PO]+[Qty_OnOrder_WO]")
	'Set Doc Control Column
		F.Data.DataTable.SetValue("dtNew",-1,"DocCntrl","DCS-OFF")
		F.Data.Dictionary.CreateFromSQL("dDCC","con","Select RTrim(ID) As Part,'DCS-ON' As DCC From Link_Data Where Type = '00030'")
		F.Data.Dictionary.SetDefaultReturn("dDCC","DCS-OFF")
		F.Data.DataTable.FillFromDictionary("dtNew","dDCC","Part","DocCntrl")
		F.Data.Dictionary.Close("dDCC")
	
	'Remove Key Column
	F.Data.DataTable.RemoveColumn("dtNew","PartLoc")
	'doing this again so i can only filter in parts when a cut off date is used.  dictionary created to set filterable value on the child datatable based on records present in the parent table
	F.Data.DataTable.AddExpressionColumn("dtNew","PartLoc",String,"TRIM(Part) + TRIM(Location)")
	F.Data.DataTable.AddColumn("dtNew","FLAG_FILTER","String","Y")
	f.Data.Dictionary.CreateFromDataTable("FilterDict","dtNew","PartLoc","FLAG_FILTER")
	f.Data.Dictionary.SetDefaultReturn("FilterDict","N")
	
	F.Data.DataTable.RemoveColumn("dtNew","PartLoc")
	F.Data.DataTable.RemoveColumn("dtNew","FLAG_FILTER")

	
	'Create XRef Subtable. 
	F.Data.DataTable.CreateFromSQL("Temp","con","Select RTrim(Part) As Part,RTrim(Location) As Location,RTrim(Part) + Rtrim(Location) as PartLoc,RTrim(A.Customer) As Customer,RTrim(B.Name_Customer) As Customer_Name,RTrim(Customer_Part) As Customer_Part,RTrim(Vendor) As Vendor,RTrim(Mfg_Name) As Mfg_Name,RTrim(Mfg_Part) As Mfg_Part,RTrim(Status) As Status,RTrim(User_Defined_Part) As User_Defined_Part,RTrim(Comment) As Comment,RTRIM('N') as Flag_filter From V_Inv_Cross_Ref A Left Join V_Customer_Master B On A.Customer = B.Customer Where A.Customer <> '' Or Customer_Part <> '' Or Vendor <> '' Or Mfg_Part <> '';",True)
	'setting the column to filter by.
	f.Data.Datatable.FillFromDictionary("Temp","FilterDict","PartLoc","Flag_Filter")
	
	f.Data.Dictionary.Close("FilterDict")
	'set view on datatable which only filters records that exist in the parent column.
	f.Data.DataView.Create("Temp","TempVw",22,"FLAG_FILTER = 'Y'","")
	f.Data.DataView.ToDataTable("Temp","TempVw","dtNew$dtXRef",True)
	
	f.Data.DataView.Close("Temp","TempVw")
	f.Data.DataTable.Close("Temp")
	
	f.Data.DataTable.RemoveColumn("dtNew$dtXRef","PartLoc")
	f.Data.DataTable.RemoveColumn("dtNew$dtXRef","Flag_filter")
	
	'AddRelation
	F.Data.DataTable.AddRelation("dtNew","Part*!*Location","dtNew$dtXRef","Part*!*Location","XRef")
	
	'2/13/2020 - DD - Added column for tracking which rows have had their source changed.  This will be used later in batch processing to update the part and BOM, as well as rebuild routers, in a batch instead of on a cell change event.
	f.Data.DataTable.AddColumn("dtNew","Changed","boolean",False)
	
	'2/18/2020 - DD - Added support for long part
	F.Data.DataTable.AddDisplayPartColumn("dtNew",0,"PART","DISPLAY_PART")
	
	Gui.FrmSOMain.pbStatus.Value(90)
	F.Intrinsic.Control.CallSub(LoadGvXStatus)
	F.Intrinsic.Control.CallSub(Deserialize)
	Gui.FrmSOMain.pbStatus.Value(100)
	Gui.FrmSOMain.lblStatus.Visible(False)
	Gui.FrmSOMain.pbStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtXStatus.End

Program.Sub.LoadGvXStatus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sPLValues.Declare
	V.Local.sSortCodeValues.Declare
	V.Local.sBinValues.Declare
	V.Local.sCodeSource.Declare
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	V.Local.sQtyDecimals.Declare
	V.Local.sDollDecimals.Declare
	
	Gui.FrmSOMain.GsGCXStatus.SuspendLayout()
	Gui.FrmSOMain.GsGCXStatus.AddGridviewFromDatatable("gvXStatus","dtNew")
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","MultiSelect",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","AllowSort",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","AllowFilter",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","ShowGroupPanel",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","ShowDetailTabs",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","EnableAppearanceOddRow",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","OptionsViewColumnAutoWidth",False)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","OptionsFindAlwaysVisible",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXStatus","OptionsMenuShowAutoFilterRowItem",False)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","Visible",False)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Plus","VisibleIndex","0")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","VisibleIndex","1")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","VisibleIndex","2")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","VisibleIndex","3")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","VisibleIndex","4")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","VisibleIndex","5")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","VisibleIndex","6")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","VisibleIndex","7")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","VisibleIndex","8")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","VisibleIndex","9")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","VisibleIndex","10")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","VisibleIndex","11")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","VisibleIndex","12")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","VisibleIndex","13")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","VisibleIndex","14")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","VisibleIndex","15")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","VisibleIndex","16")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","VisibleIndex","17")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","VisibleIndex","18")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","VisibleIndex","19")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","VisibleIndex","20")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","VisibleIndex","21")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","VisibleIndex","22")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","VisibleIndex","23")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","VisibleIndex","24")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","VisibleIndex","25")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","VisibleIndex","26")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","VisibleIndex","27")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","VisibleIndex","28")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","VisibleIndex","29")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","VisibleIndex","30")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","VisibleIndex","31")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","VisibleIndex","32")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","VisibleIndex","33")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","VisibleIndex","34")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","VisibleIndex","35")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","VisibleIndex","36")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","VisibleIndex","37")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","VisibleIndex","38")

	'--------------------------------------------------------------------------------------------
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","VisibleIndex","38")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","VisibleIndex","39")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","VisibleIndex","40")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","VisibleIndex","41")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","VisibleIndex","42")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","VisibleIndex","43")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","VisibleIndex","44")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","VisibleIndex","45")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","VisibleIndex","46")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","VisibleIndex","47")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","VisibleIndex","48")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","VisibleIndex","49")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","VisibleIndex","50")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","VisibleIndex","51")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","VisibleIndex","52")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","VisibleIndex","53")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","VisibleIndex","54")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","VisibleIndex","55")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","VisibleIndex","56")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","VisibleIndex","57")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","VisibleIndex","58")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","VisibleIndex","59")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","VisibleIndex","60")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","VisibleIndex","61")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","VisibleIndex","62")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","VisibleIndex","63")
'	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","VisibleIndex","64")
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Plus","ShowCaption",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","ShowCaption",False)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","Caption","Part")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","Caption","Loc")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","Caption","Description")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","Caption","Alt Description")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","Caption","Extra Description")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","Caption","PL")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","Caption","Source Code")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","Caption","Inv UM")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","Caption","Lead Time")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","Caption","Sort Code")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","Caption","Bin")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","Caption","ABC Code")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","Caption","Date History")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","Caption","Qty On Hand")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","Caption","Reorder Point")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","Caption","Qty On Order")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","Caption","Qty Required")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","Caption","Usage (12 Mths)")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","Caption","Price")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","Caption","Unit Cost")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","Caption","Material")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","Caption","Labor")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","Caption","Overhead")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","Caption","Outside")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","Caption","Freight")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","Caption","Other")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","Caption","Ext. Price")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","Caption","Ext. Cost")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","Caption","Lot/Bin")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","Caption","Drop")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","Caption","Serialized")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","Caption","Obsolete")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","Caption","Inactive")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","Caption","Name Vendor")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","Caption","Text Info 1")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","Caption","Text Info 2")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","Caption","Purch UM")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","Caption","Purch Conv")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","Caption","Consump Conv")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","Caption","Saftey Qty")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","Caption","On Order PO")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","Caption","On Order WO")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","Caption","Weight")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","Caption","Length")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","Caption","Width")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","Caption","Density")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","Caption","Thickness")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","Caption","Shape")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","Caption","Wt Per Foot")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","Caption","Reqs Insp")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","Caption","Haz Matl")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","Caption","Tax Exempt")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","Caption","Create Date")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","Caption","Create User")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","Caption","Order Qty")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","Caption","In Transit")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","Caption","In Inspection")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","Caption","In Quality")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","Caption","Consigned")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","Caption","Allocated")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","Caption","Net")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","Caption","Total Quantity")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","Caption","Cross Ref")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","RTR_Complete","Caption","RTR Complete")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","Caption","Long Part")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","Caption","Part Price Code")
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","Caption","Long Part")
	f.Intrinsic.Control.Else
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","Caption","Part")
	F.Intrinsic.Control.EndIf
	
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","RTR_Complete","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","AllowEdit",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","AllowEdit",False)
	
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","RTR_Complete","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","ReadOnly",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","ReadOnly",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","ReadOnly",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","ReadOnly",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","ReadOnly",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DISPLAY_PART","ReadOnly",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","ReadOnly",True)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","CellBackColor","LightYellow")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","CellBackColor","LightYellow")
	
	'ColumnEdit
	F.ODBC.Connection!con.ExecuteAndReturn("Select Distinct Product_Line From V_Product_Line;",V.Local.sPLValues)
	F.Intrinsic.String.Replace(V.Local.sPLValues,"#$#","*!*",V.Local.sPLValues)
	Gui.FrmSOMain.GsGCXStatus.ColumnEdit("gvXStatus","Product_Line","Combobox",V.Local.sPLValues)
	
	F.ODBC.Connection!con.ExecuteAndReturn("Select Distinct Code_Sort From Inventory_Mstr;",V.Local.sSortCodeValues)
	F.Intrinsic.String.Replace(V.Local.sSortCodeValues,"#$#","*!*",V.Local.sSortCodeValues)
	Gui.FrmSOMain.GsGCXStatus.ColumnEdit("gvXStatus","Code_Sort","Combobox",V.Local.sSortCodeValues)
	
	F.ODBC.Connection!con.ExecuteAndReturn("Select Distinct Bin From Bin_Master;",V.Local.sBinValues)
	F.Intrinsic.String.Replace(V.Local.sBinValues,"#$#","*!*",V.Local.sBinValues)
	Gui.FrmSOMain.GsGCXStatus.ColumnEdit("gvXStatus","Bin","Combobox",V.Local.sBinValues)
	
	V.Local.sCodeSource.Set("PS*!*PJ*!*MS*!*MJ")
	Gui.FrmSOMain.GsGCXStatus.ColumnEdit("gvXStatus","Code_Source","Combobox",V.Local.sCodeSource)
	
	'Links
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Plus","Fixed","Left")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","Fixed","Left")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Display_Part","Fixed","Left")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","Fixed","Left")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","CellForeColor","Blue")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","CellForeColor","Blue")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","display_part","CellForeColor","Blue")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Plus","MinWidth","10")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Plus","MaxWidth","10")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","MinWidth","25")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","MaxWidth","25")
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","MinWidth","120")
	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","display_part","MinWidth","250")
	f.Intrinsic.Control.Else
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","display_part","MinWidth","120")
	F.Intrinsic.Control.EndIf
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","MinWidth","200")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","MinWidth","250")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","MinWidth","300")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","MinWidth","130")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","MinWidth","130")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","MinWidth","130")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","MinWidth","65")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","MinWidth","130")


	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","RTR_Complete","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","display_Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","HeaderFontBold",True)

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","display_Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Description","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","AltDesc","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","ExtraDesc","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnHand","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Reorder","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","OnOrder","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Required","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Amt_Price","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Cost","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Matl","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Labor","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ovhd","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Outs","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Freight","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Oth","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Price","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Ext_Cost","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PurchConvFactor","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","CompsConvFactor","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Safety","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_PO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_OnOrder_WO","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Weight","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Length","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Width","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Density","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Thickness","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Wt_Per_Foot","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Qty_Order","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InTransit","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InInspection","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","InQuality","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Consigned","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Allocated","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Net","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","TotalQuantity","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","HeaderHAlignment","Center")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Location","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Product_Line","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Source","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Inventory","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Time_Material_Lead","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_Sort","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Bin","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Code_ABC","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Usage_Last_12_Mos","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Lot","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Drop","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Serialize","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Obsolete_Flag","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Flag_Inactive","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Name_Vendor","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info1","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Text_Info2","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","UM_Purchasing","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Shape","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Requires_Insp","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","HazMatlFlag","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Tax_Exempt_Flg","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_User","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","XRef","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Changed","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","PART_PRICE_CODE","CellHAlignment","Center")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","DocCntrl","Icon","DCS-OFF")
	
	V.Local.sSelect.Declare
	F.Data.DataTable.Select("dtNew","DocCntrl = 'DCS-ON'",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
			Gui.FrmSOMain.GsGCXStatus.SetCellAppearance("gvXStatus",1,V.Local.sSelect(V.Local.iCnt),"Icon","DCS-ON")
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	'Qty Decimals
	F.Intrinsic.Control.SelectCase(V.Screen.FrmSOMain!ddlDecQty.ItemData)
		F.Intrinsic.Control.Case(0)
			'0 Decimals
			V.Local.sQtyDecimals.Set("n0")
		F.Intrinsic.Control.Case(1)
			'2 Decimals
			V.Local.sQtyDecimals.Set("n2")
		F.Intrinsic.Control.Case(2)
			'4 Decimals
			V.Local.sQtyDecimals.Set("n4")
		F.Intrinsic.Control.Case(3)
			'6 Decimals
			V.Local.sQtyDecimals.Set("n6")
	F.Intrinsic.Control.EndSelect
	'Loop and apply to columns
	F.Intrinsic.String.Split("Qty_OnHand*!*Qty_Reorder*!*OnOrder*!*Qty_Required*!*Usage_Last_12_Mos*!*Qty_Safety*!*Qty_OnOrder_PO*!*Qty_OnOrder_WO*!*Weight*!*Length*!*Width*!*Density*!*Thickness*!*Wt_Per_Foot*!*Qty_Order*!*InTransit*!*InInspection*!*InQuality*!*Consigned*!*Allocated*!*Net*!*TotalQuantity","*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus",V.Local.sColumns(V.Local.iCnt),"DisplayCustomNumeric",V.Local.sQtyDecimals)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	'Sums
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","Qty_OnHand","","Sum","","",V.Local.sQtyDecimals)
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","OnOrder","","Sum","","",V.Local.sQtyDecimals)
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","Qty_Required","","Sum","","",V.Local.sQtyDecimals)
	
	'Dollar Decimals
	F.Intrinsic.Control.SelectCase(V.Screen.FrmSOMain!ddlDecDoll.ItemData)
		F.Intrinsic.Control.Case(0)
			'0 Decimals
			V.Local.sDollDecimals.Set("n0")
		F.Intrinsic.Control.Case(1)
			'2 Decimals
			V.Local.sDollDecimals.Set("n2")
		F.Intrinsic.Control.Case(2)
			'4 Decimals
			V.Local.sDollDecimals.Set("n4")
		F.Intrinsic.Control.Case(3)
			'6 Decimals
			V.Local.sDollDecimals.Set("n6")
	F.Intrinsic.Control.EndSelect
	'Loop and apply to columns
	F.Intrinsic.String.Split("Amt_Price*!*Cost*!*Matl*!*Labor*!*Ovhd*!*Outs*!*Freight*!*Oth*!*Ext_Price*!*Ext_Cost","*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus",V.Local.sColumns(V.Local.iCnt),"DisplayCustomNumeric",V.Local.sDollDecimals)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	'Sums
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","Ext_Price","","Sum","","",V.Local.sDollDecimals)
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","Ext_Cost","","Sum","","",V.Local.sDollDecimals)
	
	'Count - No Decimals
	Gui.FrmSOMain.GsGCXStatus.AddSummaryItem("gvXStatus","Part","","Count","","","n0")
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Date_History","DisplayCustomDatetime","d")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXStatus","Part_Create_Date","DisplayCustomDatetime","d")
	
	Gui.FrmSOMain.GsGCXStatus.ResumeLayout()
	Gui.FrmSOMain.GsGCXStatus.MainView("gvXStatus")
	
	'Format XRef Subtable
	F.Data.DataView.Create("dtNew$dtXRef","dvXRef")
	Gui.FrmSOMain.GsGCXStatus.AddGridviewFromDataview("gvXRef","dtNew","dvXRef")
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","MultiSelect",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","AllowSort",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","AllowFilter",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","ShowGroupPanel",False)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","EnableAppearanceOddRow",True)
	Gui.FrmSOMain.GsGCXStatus.SetGridViewProperty("gvXRef","OptionsViewColumnAutoWidth",False)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","Visible",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","Visible",False)
	
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","Caption","Part")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","Caption","Loc")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","Caption","Customer")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Name","Caption","Customer Name")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Part","Caption","Customer Part")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","Caption","Vendor")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Name","Caption","Mfg Name")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Part","Caption","Mfg Part")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","Caption","Status")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","User_Defined_Part","Caption","Received Date")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Comment","Caption","Comment")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Name","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Part","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Name","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Part","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","User_Defined_Part","AllowEdit",False)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Comment","AllowEdit",False)

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","MinWidth","120")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","MinWidth","45")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Name","MinWidth","165")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Part","MinWidth","120")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","MinWidth","85")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Name","MinWidth","165")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Part","MinWidth","120")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","MinWidth","120")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","User_Defined_Part","MinWidth","100")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Comment","MinWidth","185")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Name","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Name","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","User_Defined_Part","HeaderFontBold",True)
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Comment","HeaderFontBold",True)

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Name","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer_Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Name","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Mfg_Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","User_Defined_Part","HeaderHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Comment","HeaderHAlignment","Center")

	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Location","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Customer","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Vendor","CellHAlignment","Center")
	Gui.FrmSOMain.GsGCXStatus.SetColumnProperty("gvXRef","Status","CellHAlignment","Center")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvXStatus.End

Program.Sub.MenuClickTotalsPL.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.fTotal.Declare
	V.Local.sFilter.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtXStatus.Exists,=,False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtTotalsPL.Exists)
		F.Data.DataTable.Close("dtTotalsPL")
		F.Data.DataTable.Close("dtPLs")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.Create("dtTotalsPL")
	F.Data.DataTable.AddColumn("dtTotalsPL","PL",String)
	F.Data.DataTable.AddColumn("dtTotalsPL","Total",Float)

	F.Data.DataView.Create("dtXStatus","dvPLs",22,"","Product_Line")
	F.Data.DataView.ToDataTableDistinct("dtXStatus","dvPLs","dtPLs","Product_Line",True)
	F.Data.DataView.Close("dtXStatus","dvPLs")
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPLs.RowCount--,1)
		F.Intrinsic.String.Build("Product_Line = '{0}'",V.DataTable.dtPLs(V.Local.iCnt).Product_Line!FieldValTrim,V.Local.sFilter)
		F.Data.DataTable.Compute("dtXStatus","Sum(Ext_Cost)",V.Local.sFilter,V.Local.fTotal)
		F.Data.DataTable.AddRow("dtTotalsPL","PL",V.DataTable.dtPLs(V.Local.iCnt).Product_Line!FieldValTrim,"Total",V.Local.fTotal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	Gui.frmTotalsPL.GsGCPLs.AddGridviewFromDatatable("gvTotalsPL","dtTotalsPL")
	Gui.frmTotalsPL.GsGCPLs.SuspendLayout()
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","MultiSelect",True)
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","AllowSort",True)
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","AllowFilter",True)
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","ShowGroupPanel",False)
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","EnableAppearanceOddRow",True)
	Gui.frmTotalsPL.GsGCPLs.SetGridViewProperty("gvTotalsPL","OptionsViewColumnAutoWidth",False)
	
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","Caption","PL")
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","Caption","Total")
	
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","AllowEdit",False)
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","AllowEdit",True)
	
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","ReadOnly",True)
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","ReadOnly",True)

	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","MinWidth","50")
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","MinWidth","160")

	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","HeaderFontBold",True)
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","HeaderFontBold",True)

	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","HeaderHAlignment","Center")
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","HeaderHAlignment","Center")

	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","PL","CellHAlignment","Center")
	
	Gui.frmTotalsPL.GsGCPLs.SetColumnProperty("gvTotalsPL","Total","DisplayCustomNumeric","#,###,##0.00####")

	Gui.frmTotalsPL.GsGCPLs.AddSummaryItem("gvTotalsPL","Total","","Sum","","","")
		
	Gui.frmTotalsPL.GsGCPLs.ResumeLayout()
	Gui.frmTotalsPL.GsGCPLs.MainView("gvTotalsPL")
	
	Gui.frmTotalsPL..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickTotalsPL.End

Program.Sub.frmTotalsPL_UnLoad.Start
	V.Local.sError.Declare

	Gui.frmTotalsPL..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmTotalsPL_UnLoad.End

Program.Sub.GsGCXStatus_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.iPID.Declare

	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("Part","PART","Location","LOCATION","Display_Part")
			V.Local.sPart.Set(V.DataTable.dtNew(V.Args.RowIndex).Part!FieldVal)
			V.Local.sLoc.Set(V.DataTable.dtNew(V.Args.RowIndex).Location!FieldVal)
			F.Data.DataTable.AddRow("3500","CompanyCode",V.Caller.CompanyCode,"Mode","O","Switch2","","Switch3","","Part",V.Local.sPart,"Loc",V.Local.sLoc)
			Gui.FrmSOMain.GsGCXStatus.Enabled(False)
			F.Intrinsic.Control.CallSub(3500Sync)
			Gui.FrmSOMain.GsGCXStatus.Enabled(True)
			
		F.Intrinsic.Control.CaseAny("DocCntrl","DOCCNTRL")
			V.Local.sPart.Set(V.DataTable.dtNew(V.Args.RowIndex).Part!FieldVal)
			F.Global.DocumentControl.Invoke(V.Local.sPart,30,"(Inventory Master)",V.Local.iPID)
	
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCXStatus_RowCellClick.End

Program.Sub.GsGCXStatus_CellValueChanged.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sField.Declare
	V.Local.sSQL.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sCodeSource.Declare
	V.Local.sRange.Declare
	v.Local.bChecked.Declare(boolean)
	v.Local.iChecked.Declare(long)

	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("Product_Line","PRODUCT_LINE","Code_Sort","CODE_SORT","Bin","BIN","Qty_Reorder","QTY_REORDER","Qty_Order","QTY_ORDER")
			V.Local.sPart.Set(V.DataTable.dtNew(V.Args.RowIndex).Part!FieldVal)
			V.Local.sLoc.Set(V.DataTable.dtNew(V.Args.RowIndex).Location!FieldVal)
			F.Intrinsic.String.Build("{0} = '{1}'",V.Args.Column,V.Args.Value,V.Local.sField)
			F.Intrinsic.String.Build("Update Inventory_Mstr Set {0},Date_last_Chg = '{1}',Time_Last_Chg = '00000000',Who_Chg_Last = '{2}' Where Part = '{3}' And Location = '{4}';",V.Local.sField,V.Ambient.Date.FormatYYMMDD,V.Caller.User,V.Local.sPart,V.Local.sLoc,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
		F.Intrinsic.Control.CaseAny("Code_Source","CODE_SOURCE")
			V.Local.sPart.Set(V.DataTable.dtNew(V.Args.RowIndex).Part!FieldVal)
			V.Local.sLoc.Set(V.DataTable.dtNew(V.Args.RowIndex).Location!FieldVal)
			
			F.Intrinsic.Control.SelectCase(V.Args.Value)
				F.Intrinsic.Control.Case("PS")
					V.Local.sCodeSource.Set("P")
				F.Intrinsic.Control.Case("PJ")
					V.Local.sCodeSource.Set("J")
				F.Intrinsic.Control.Case("MS")
					V.Local.sCodeSource.Set("M")
				F.Intrinsic.Control.Case("MJ")
					V.Local.sCodeSource.Set("F")
			F.Intrinsic.Control.EndSelect
			
			f.Data.DataTable.SetValue("dtNew",v.Args.rowindex,"Changed",True)
		
		'Set router as complete/incomplete
		f.Intrinsic.Control.Case("RTR_Complete")
			'Get the current value from the grid
			gui.FrmSOMain.GsGCXStatus.GetCellValueByColumnName("GVXSTATUS",v.Args.column,v.Args.rowindex,v.Local.bChecked)
			'Flip that value
			f.Intrinsic.Control.If(v.Local.bChecked,=,True)
				v.Local.bChecked.Set(False)
				v.Local.iChecked.Set(0)
			f.Intrinsic.Control.Else
				v.Local.bChecked.Set(True)
				v.Local.iChecked.Set(1)
			f.Intrinsic.Control.EndIf
			'Set the grid with that value
			gui.FrmSOMain.GsGCXStatus.SetCellValueByColumnName("gvXStatus",v.Args.column,v.Args.rowindex,v.Local.bChecked)
			'Get the part
			V.Local.sPart.Set(V.DataTable.dtNew(V.Args.RowIndex).Part!FieldVal)
			'Update the table
			f.Intrinsic.String.Build("update router_supp_hdr set complete={0} where rtrim(rtr_num)='{1}';",v.Local.iChecked,v.Local.sPart,v.Local.sSQL)
			f.ODBC.Connection!con.execute(v.Local.sSQL)
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
Program.Sub.GsGCXStatus_CellValueChanged.End

Program.Sub.cmdProcess_Click.Start
	'This sub allows for batch processing of changes inside the datatable
	v.Local.iCnt.Declare(long)
	v.Local.sSQL.Declare(string)
	v.Local.sCodeSource.Declare(string)
	V.Local.sRange.Declare(string)
	
	f.Intrinsic.Control.Try
		f.Intrinsic.ui.InvokeWaitDialog("Saving all changed parts...","GCG 5356")
		'Filter out the changed parts
		f.Data.DataView.Create("dtNew","dvNew",22,"Changed=True","")
		F.Data.DataVIEW.ToDataTable("dtNew","dvNew","dtChanged")
		
		'For each changed part, update inventory and BOM masters, then rebuild the routers
		f.Intrinsic.Control.For(v.Local.icnt,0,v.DataTable.dtChanged.RowCount--,1)
			f.Intrinsic.UI.ChangeWaitStatus("Saving all changed parts...",v.Local.iCnt,0,v.DataTable.dtChanged.RowCount)
			f.Intrinsic.Control.SelectCase(V.datatable.dtchanged(v.Local.iCnt).Code_Source!FieldVal)
				'Convert the soruce code displayed on the grid to one used in the table
				f.Intrinsic.Control.Case("PS")
					V.Local.sCodeSource.Set("P")
				f.Intrinsic.Control.CaseANY("PJ","")
					V.Local.sCodeSource.Set("J")
				f.Intrinsic.Control.Case("MS")
					V.Local.sCodeSource.Set("M")
				f.Intrinsic.Control.Case("MJ")
					V.Local.sCodeSource.Set("F")
			f.Intrinsic.Control.EndSelect
			
			'Update Inventory Master
			F.Intrinsic.String.Build("Update Inventory_Mst2 Set Code_Source = '{0}' Where Part = '{1}' And Location = '{2}';",V.local.sCodeSource,V.datatable.dtchanged(v.Local.iCnt).Part!FieldVal,V.datatable.dtchanged(v.Local.iCnt).Location!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			'Update BOM Master
			F.Intrinsic.String.Build("Update BOM_MSTR Set source = '{0}' Where Part = '{1}';",V.Local.sCodeSource,V.datatable.dtchanged(v.Local.iCnt).Part!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
			
			'ReBuild Router
			F.Intrinsic.String.Build("select * from V_ROUTER_HEADER where ROUTER = '{0}'",V.datatable.dtchanged(v.Local.iCnt).Part!FieldValTrim,V.Local.sSQL)
			F.ODBC.Connection!con.OpenLocalRecordsetRO("rstSel",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstSel.EOF,=,False)
				' Rebuild the routers
				F.Intrinsic.String.Build("{0}!*!{1}",V.datatable.dtchanged(v.Local.iCnt).Part!FieldVal,V.datatable.dtchanged(v.Local.iCnt).Part!FieldVal,V.Local.sRange)
				F.Global.General.CallWrapperSync(1001,V.Local.sRange)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstSel.Close
		f.Intrinsic.Control.Next(v.Local.icnt)
		
		f.Intrinsic.UI.ChangeWaitStatus("Saving all changed parts...",v.DataTable.dtChanged.RowCount,0,v.DataTable.dtChanged.RowCount)
		'Reset the Changed flag for all rows
		f.Data.Dictionary.Create("dictReset")
		f.Data.Dictionary.SetDefaultReturn("dictReset",False)
		f.Data.DataTable.FillFromDictionary("dtNew","dictReset","Part","Changed")
		f.Data.Dictionary.Close("dictReset")
		
		'Clean up dt's and dv's
		f.Data.DataTable.close("dtChanged")
		f.Data.DataView.Close("dtNew","dvnew")
	f.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	f.Intrinsic.Control.Finally
		f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.Control.EndTry
Program.Sub.cmdProcess_Click.End

'6404 MOD
'Export to Excel
Program.Sub.ExportToExcel.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sControl.Declare(String)

	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXAAAA")
			V.Local.sControl.Set("GsgcTabA")
		F.Intrinsic.Control.Case("CTXBBBB")
			V.Local.sControl.Set("GsgcTabB")
		F.Intrinsic.Control.Case("CTXCCCC")
			V.Local.sControl.Set("GsgcTabC")
		F.Intrinsic.Control.Case("CTXDDDD")
			V.Local.sControl.Set("GsgcTabD")
	f.Intrinsic.Control.EndSelect
		
	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		F.Intrinsic.String.Build("{0}\6404\GAB_6404_RentalDashboard_Export{1}{2}{3}.xlsx",V.Caller.FilesDir, v.Caller.User, v.Ambient.Now.FormatYYYY-MM-DD, v.Ambient.Now.FormatHHNNSS, V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			Gui.FrmSOMain.[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
'		F.Intrinsic.String.Build("{0}\GAB_6404_RentalDashboard_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
		F.Intrinsic.String.Build("{0}\6404\GAB_6404_RentalDashboard_Export.csv",V.Caller.FilesDir,V.Local.sFileExport)
		F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
		F.Intrinsic.Control.If(V.Local.bFileLocked)
			F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
		F.Intrinsic.Control.Else
			gui.FrmSOMain.[V.Local.sControl].Export(V.Local.sFileExport,"csv")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.ExportToExcel.End

'6404 MOD
'Cell Click tab A
Program.Sub.GsgcTabA_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sOrderType.Declare(String)
	v.Local.sWO.Declare(String)
	v.Local.sSuffix.Declare(String)
	
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","SUFFIX",V.Args.RowIndex,V.Local.sSuffix)
	
	
	'Order type, 'O' for regular, 'C' cycle billing
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","CYCLE_BILLING",V.Args.RowIndex,V.Local.sOrderType)
	f.Intrinsic.Control.If(v.Local.sOrderType,!=,"C")
		v.Local.sOrderType.Set("O")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsgcTabA.GetCellValueByColumnName("gvTabA","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)				
			f.Intrinsic.Control.AndIf(v.Global.bViewPart)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Global.General.CallWrapperAsync(300011,V.Local.sParams)				
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bEditPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf	
			
			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
		
			f.Intrinsic.Control.If(v.Local.sOrderType,=,"C")
				f.Intrinsic.UI.Msgbox("Cycle Billing Order Must Be Handled Manually at Order Entry > File > Cycle Billing Orders > Open")
				f.Intrinsic.Control.UnBlockEvents
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.Control.If(v.Local.sOrderNo.Trim,=,"")
				f.Intrinsic.Control.UnBlockEvents
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsgcTabA.Enabled(False)				
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsgcTabA.Enabled(True)
				
			'MOD
			'WO Gen
			f.Intrinsic.Control.ElseIf(v.Screen.FrmSOMain!optWO.Value)
			f.Intrinsic.Control.AndIf(v.Global.bGenWO)
				f.Intrinsic.Control.CallSub(GenWOForLine, "argOrder", v.Local.sOrderNo, "argLine", v.Local.sOrderLine, "argType", v.Local.sOrderType)
			
			'case else
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		'WO	
		f.Intrinsic.Control.CaseAny("JOB", "Job", "Job")
			f.Intrinsic.Control.If(v.Local.sWO,!=,"")
				f.Intrinsic.Control.If(v.Global.bGenWO)
					f.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"O", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					
					'not select on Edit => View
					f.Intrinsic.Control.Else
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					f.Intrinsic.Control.EndIf
				
				'not able to generate/edit -=> View
				f.Intrinsic.Control.Else
					f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
					f.Global.General.CallWrapperSync(2009, v.Local.sParams)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GsgcTabA_RowCellClick.End

'MOD 6404
'Generate WO for SO Line
Program.Sub.GenWOForLine.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	v.Local.sOrder.Declare(String)
	v.Local.sLine.Declare(String)
	v.Local.sParam.Declare(String)
	v.Local.sWO.Declare(String)
	v.Local.sSuffix.Declare(String)
	v.Local.sSQL.Declare(String)
	v.Local.sRet.Declare(String)
	v.Local.sOrderType.Declare(String)
	
	v.Local.sOrder.Set(v.Args.argOrder)
	v.Local.sLine.Set(v.Args.argLine)
	v.Local.sOrderType.Set(v.Args.argType)
	
	f.Intrinsic.Control.If(v.Local.sOrder,!=,"", "AND", v.Local.sLine,!=,"")
		f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sOrderType, v.Local.sOrder, v.Local.sLine,"1","1", v.Local.sParam)
		f.Global.General.CallWrapperSync(200802, v.Local.sParam)
	
		f.ODBC.Connection!Conx.OpenCompanyConnection
			f.Intrinsic.String.Build("select top 1 RTRIM(JOB), RTRIM(SUFFIX) from V_JOB_HEADER where SALES_ORDER='{0}' and SALES_ORDER_LINE+'0'='{1}'", v.Local.sOrder, v.Local.sLine, v.Local.sSQL)
		f.ODBC.Connection!Conx.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
		f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
			f.Intrinsic.UI.Msgbox("Cannot Create WO for This Order.")
		f.Intrinsic.Control.Else
			f.Intrinsic.String.Split(v.Local.sRet,"*!*", v.Local.sRet)
			v.Local.sWO.Set(v.Local.sRet(0))
			v.Local.sSuffix.Set(v.Local.sRet(1))
			'open after
			f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"O", v.Local.sParam)
			f.Global.General.CallWrapperSync(2009, v.Local.sParam)
		f.Intrinsic.Control.EndIf
			
		f.ODBC.Connection!Conx.Close
	
	f.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GenWOForLine.End

'6404 MOD
'Cell Click tab B
Program.Sub.GsgcTabB_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sOrderType.Declare(String)
	v.Local.sWO.Declare(String)
	v.Local.sSuffix.Declare(String)
	
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","SUFFIX",V.Args.RowIndex,V.Local.sSuffix)
	
	
	'Order type, 'O' for regular, 'C' cycle billing
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","CYCLE_BILLING",V.Args.RowIndex,V.Local.sOrderType)
	f.Intrinsic.Control.If(v.Local.sOrderType,!=,"C")
		v.Local.sOrderType.Set("O")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsgcTabB.GetCellValueByColumnName("gvTabB","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)				
			f.Intrinsic.Control.AndIf(v.Global.bViewPart)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Global.General.CallWrapperAsync(300011,V.Local.sParams)				
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bEditPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf	
			
			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
		
			f.Intrinsic.Control.If(v.Local.sOrderType,=,"C")
				f.Intrinsic.UI.Msgbox("Cycle Billing Order Must Be Handled Manually at Order Entry > File > Cycle Billing Orders > Open")
				f.Intrinsic.Control.UnBlockEvents
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsgcTabB.Enabled(False)				
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsgcTabB.Enabled(True)
				
			'MOD
			'WO Gen
			f.Intrinsic.Control.ElseIf(v.Screen.FrmSOMain!optWO.Value)
			f.Intrinsic.Control.AndIf(v.Global.bGenWO)
				f.Intrinsic.Control.CallSub(GenWOForLine, "argOrder", v.Local.sOrderNo, "argLine", v.Local.sOrderLine, "argType", v.Local.sOrderType)
			
			'case else
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		'WO	
		f.Intrinsic.Control.CaseAny("JOB", "Job", "Job")
			f.Intrinsic.Control.If(v.Local.sWO,!=,"")
				f.Intrinsic.Control.If(v.Global.bGenWO)
					f.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"O", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					
					'not select on Edit => View
					f.Intrinsic.Control.Else
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					f.Intrinsic.Control.EndIf
				
				'not able to generate/edit -=> View
				f.Intrinsic.Control.Else
					f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
					f.Global.General.CallWrapperSync(2009, v.Local.sParams)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GsgcTabB_RowCellClick.End

'6404 MOD
'Cell Click tab C
Program.Sub.GsGcTabC_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sOrderType.Declare(String)
	v.Local.sWO.Declare(String)
	v.Local.sSuffix.Declare(String)
	
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","SUFFIX",V.Args.RowIndex,V.Local.sSuffix)
	
	
	'Order type, 'O' for regular, 'C' cycle billing
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","CYCLE_BILLING",V.Args.RowIndex,V.Local.sOrderType)
	f.Intrinsic.Control.If(v.Local.sOrderType,!=,"C")
		v.Local.sOrderType.Set("O")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsgcTabC.GetCellValueByColumnName("gvTabC","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)				
			f.Intrinsic.Control.AndIf(v.Global.bViewPart)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Global.General.CallWrapperAsync(300011,V.Local.sParams)				
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bEditPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf	
			
			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
		
			f.Intrinsic.Control.If(v.Local.sOrderType,=,"C")
				f.Intrinsic.UI.Msgbox("Cycle Billing Order Must Be Handled Manually at Order Entry > File > Cycle Billing Orders > Open")
				f.Intrinsic.Control.UnBlockEvents
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsgcTabC.Enabled(False)				
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsgcTabC.Enabled(True)
				
			'MOD
			'WO Gen
			f.Intrinsic.Control.ElseIf(v.Screen.FrmSOMain!optWO.Value)
			f.Intrinsic.Control.AndIf(v.Global.bGenWO)
				f.Intrinsic.Control.CallSub(GenWOForLine, "argOrder", v.Local.sOrderNo, "argLine", v.Local.sOrderLine, "argType", v.Local.sOrderType)
			
			'case else
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		'WO	
		f.Intrinsic.Control.CaseAny("JOB", "Job", "Job")
			f.Intrinsic.Control.If(v.Local.sWO,!=,"")
				f.Intrinsic.Control.If(v.Global.bGenWO)
					f.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"O", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					
					'not select on Edit => View
					f.Intrinsic.Control.Else
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					f.Intrinsic.Control.EndIf
				
				'not able to generate/edit -=> View
				f.Intrinsic.Control.Else
					f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
					f.Global.General.CallWrapperSync(2009, v.Local.sParams)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch

	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GsGcTabC_RowCellClick.End

'6404 MOD
'Cell Click tab D
Program.Sub.GsGcTabD_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sOrderNo.Declare
	V.Local.sOrderLine.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	v.Local.sOrderType.Declare(String)
	v.Local.sWO.Declare(String)
	v.Local.sSuffix.Declare(String)
	
	
	f.Intrinsic.Control.BlockEvents
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","Order_NO",V.Args.RowIndex,V.Local.sOrderNo)
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","RECORD_NO",V.Args.RowIndex,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","JOB",V.Args.RowIndex,V.Local.sWO)
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","SUFFIX",V.Args.RowIndex,V.Local.sSuffix)
	
	
	'Order type, 'O' for regular, 'C' cycle billing
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","CYCLE_BILLING",V.Args.RowIndex,V.Local.sOrderType)
	f.Intrinsic.Control.If(v.Local.sOrderType,!=,"C")
		v.Local.sOrderType.Set("O")
	f.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.String.RPad(V.Local.sOrderLine,"0",4,V.Local.sOrderLine)
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","Part",V.Args.RowIndex,V.Local.sPart)
	Gui.FrmSOMain.GsgcTabD.GetCellValueByColumnName("gvTabD","Location",V.Args.RowIndex,V.Local.sLoc)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("PART")
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optView.Value)				
			f.Intrinsic.Control.AndIf(v.Global.bViewPart)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
				F.Global.General.CallWrapperAsync(300011,V.Local.sParams)				
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bEditPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"M",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewPart)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sPart,V.Local.sLoc,"O",V.Local.sParams)
					F.Global.General.CallWrapperAsync(300011,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.EndIf	
			
			
		F.Intrinsic.Control.CaseAny("Order_NO","ORDER_NO","Order_No")
		
			f.Intrinsic.Control.If(v.Local.sOrderType,=,"C")
				f.Intrinsic.UI.Msgbox("Cycle Billing Order Must Be Handled Manually at Order Entry > File > Cycle Billing Orders > Open")
				f.Intrinsic.Control.UnBlockEvents
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			F.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
				f.Intrinsic.Control.If(v.Global.bEditSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"O","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.ElseIf(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf				
			F.Intrinsic.Control.ElseIf(V.Screen.FrmSOMain!optShip.Value)
				Gui.FrmSOMain.GsgcTabD.Enabled(False)				
				F.Global.Callwrapper.New("Ship","Sales.NewShipments")
				F.Global.Callwrapper.SetProperty("Ship","OrderNumber",V.Local.sOrderNo)
				F.Global.Callwrapper.SetProperty("Ship","OrderLine",V.Local.sOrderLine)
				F.Global.CallWrapper.Run("Ship")
				Gui.FrmSOMain.GsgcTabD.Enabled(True)
				
			'MOD
			'WO Gen
			f.Intrinsic.Control.ElseIf(v.Screen.FrmSOMain!optWO.Value)
			f.Intrinsic.Control.AndIf(v.Global.bGenWO)
				f.Intrinsic.Control.CallSub(GenWOForLine, "argOrder", v.Local.sOrderNo, "argLine", v.Local.sOrderLine, "argType", v.Local.sOrderType)
			
			'case else
			F.Intrinsic.Control.Else
				f.Intrinsic.Control.If(v.Global.bViewSO)
					F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sOrderNo,"V","*!*ZDR*!*",V.Local.sParams)
					F.Global.General.CallWrapperASync(200000,V.Local.sParams)
				f.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			
		'WO	
		f.Intrinsic.Control.CaseAny("JOB", "Job", "Job")
			f.Intrinsic.Control.If(v.Local.sWO,!=,"")
				f.Intrinsic.Control.If(v.Global.bGenWO)
					f.Intrinsic.Control.If(V.Screen.FrmSOMain!optEdit.Value)
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"O", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					
					'not select on Edit => View
					f.Intrinsic.Control.Else
						f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
						f.Global.General.CallWrapperSync(2009, v.Local.sParams)
					f.Intrinsic.Control.EndIf
				
				'not able to generate/edit -=> View
				f.Intrinsic.Control.Else
					f.Intrinsic.String.ConcatCallWrapperArgs(v.Local.sWO, v.Local.sSuffix,"V", v.Local.sParams)
					f.Global.General.CallWrapperSync(2009, v.Local.sParams)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndSelect
	f.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GsGcTabD_RowCellClick.End

'6404 MOD - Refresh 
Program.Sub.cmdRefreshRent_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	
	f.Intrinsic.Control.CallSub(Serialize)
	
	
	'replace with MODs
	'----------------------
	F.Intrinsic.Control.CallSub(LoadDataToTabs)
	'----------------------
	
	F.Intrinsic.Control.UnBlockEvents
	Gui.FrmSOMain.pbStatus.Value(90)
	Gui.FrmSOMain.pbStatus.Value(100)
	F.Intrinsic.Control.CallSub(Deserialize)
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefreshRent_Click.End

'6404 MOD - Cell Val Changed 
Program.Sub.GsgcTabA_CellValueChanged.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare(String)
	v.Local.sPart.Declare(String)
	v.Local.sLoc.Declare(String)
	v.Local.sRent_Agree.Declare(String)
	v.Local.sCert_Ins.Declare(String)
	v.Local.sSQL.Declare(String)
	v.Local.sRet.Declare(String)
	v.Local.sBin.Declare(String)
	v.Local.sCust.Declare(String)
	
	v.Local.sPart.Set(v.DataTable.dtTabA(v.Args.RowIndex).PART!FieldValTrim)
	v.Local.sLoc.Set(v.DataTable.dtTabA(v.Args.RowIndex).LOCATION!FieldValTrim)
	v.Local.sBin.Set(v.DataTable.dtTabA(v.Args.RowIndex).BIN!FieldValTrim)
	v.Local.sCust.Set(v.DataTable.dtTabA(v.Args.RowIndex).CUSTOMER!FieldValTrim)
	
	f.ODBC.Connection!Conx.OpenCompanyConnection
	
	f.Intrinsic.Control.SelectCase(v.Args.Column)
		f.Intrinsic.Control.Case("RENTAL_AGREE")
			'only save when RENTED or RESERV
			f.Intrinsic.Control.If(v.Local.sBin,!=,"RENTED", "AND", v.Local.sBin,!=,"RESERV")
				f.Intrinsic.UI.Msgbox("Cannot Be Maintained Until Moving to RENTED or RESERVE.")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
		
			v.Local.sRent_Agree.Set(v.DataTable.dtTabA(v.Args.RowIndex).RENTAL_AGREE!FieldValTrim)
			f.Intrinsic.String.Build("select * from GCG_6404_RENT_EXT where RTRIM(PART)='{0}' and RTRIM(LOCATION)='{1}'", v.Local.sPart, v.Local.sLoc, v.Local.sSQL)
			f.ODBC.Connection!Conx.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				f.Intrinsic.String.Build("insert into GCG_6404_RENT_EXT (PART, LOCATION, RENTAL_AGREE, CUSTOMER) values('{0}','{1}','{2}','{3}')", v.Local.sPart, v.Local.sLoc, v.Local.sRent_Agree, v.Local.sCust, v.Local.sSQL)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("update GCG_6404_RENT_EXT set RENTAL_AGREE='{2}', CUSTOMER = '{3}' where RTRIM(PART)='{0}' and RTRIM(LOCATION)='{1}'", v.Local.sPart, v.Local.sLoc, v.Local.sRent_Agree, v.Local.sCust, v.Local.sSQL)
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!Conx.Execute(v.Local.sSQL)
			f.Intrinsic.UI.Msgbox("SAVED!")
		f.Intrinsic.Control.Case("CERT_INS")
			'only save when RENTED or RESERV
			f.Intrinsic.Control.If(v.Local.sBin,!=,"RENTED", "AND", v.Local.sBin,!=,"RESERV")
				f.Intrinsic.UI.Msgbox("Cannot Be Maintained Until Moving to RENTED or RESERVE.")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			v.Local.sCert_Ins.Set(v.DataTable.dtTabA(v.Args.RowIndex).CERT_INS!FieldValTrim)
			f.Intrinsic.String.Build("select * from GCG_6404_RENT_EXT where RTRIM(PART)='{0}' and RTRIM(LOCATION)='{1}'", v.Local.sPart, v.Local.sLoc, v.Local.sSQL)
			f.ODBC.Connection!Conx.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
			f.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF)
				f.Intrinsic.String.Build("insert into GCG_6404_RENT_EXT (PART, LOCATION, CERT_INS, CUSTOMER) values('{0}','{1}','{2}','{3}')", v.Local.sPart, v.Local.sLoc, v.Local.sCert_Ins, v.Local.sCust, v.Local.sSQL)
			f.Intrinsic.Control.Else
				f.Intrinsic.String.Build("update GCG_6404_RENT_EXT set CERT_INS='{2}', CUSTOMER='{3}' where RTRIM(PART)='{0}' and RTRIM(LOCATION)='{1}'", v.Local.sPart, v.Local.sLoc, v.Local.sCert_Ins, v.Local.sCust, v.Local.sSQL)
			f.Intrinsic.Control.EndIf
			f.ODBC.Connection!Conx.Execute(v.Local.sSQL)
			f.Intrinsic.UI.Msgbox("SAVED!")
	f.Intrinsic.Control.EndSelect
	
	f.ODBC.Connection!Conx.Close
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.GsgcTabA_CellValueChanged.End

Program.Sub.Comments.Start
${$0$}$GAB_4167_OE_OpenOrderReview_GSS_Var1$}$Joey & AGV$}$07/18/2016 9:03:10 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$'
${$5$}$2.0.0.0$}$2
${$6$}$nle$}$20220831105239965$}$kjzCRYkA6UEoRnCwndYnRXTQH0i7KUgm6zaUYp9GI/BICO+88Ub0Vm8LMvQRcva0
Program.Sub.Comments.End